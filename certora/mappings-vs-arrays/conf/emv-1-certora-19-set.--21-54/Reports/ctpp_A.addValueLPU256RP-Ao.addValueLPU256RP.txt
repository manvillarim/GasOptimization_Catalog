Calltrace Debug Information
[StorageTitleInstance, 867414980] Global State
    [StorageTitleInstance, 711728713] Storage State
        [StorageTitleInstance, 969879727] A
            [StorageStateValueInstance, 758933025] elementCount: 0x25e9
            [StorageStateValueInstance, 62905809] lastAdded: 0
            [StorageStateValueInstance, 1240139193] lastRemoved: 0
            [StorageStateValueInstance, 165744227] operationCount: 0
            [StorageStateValueInstance, 1193438224] totalSum: 0
            [StorageStateValueInstance, 974024816] values: 0x25eb
            [StorageStateValueInstance, 735669317] values[0x25eb]: 0
        [StorageTitleInstance, 709557579] Ao
            [StorageStateValueInstance, 2128365310] elementCount: 0x25e9
            [StorageStateValueInstance, 932721829] exists[0x3149]: false
            [StorageStateValueInstance, 1464065367] lastAdded: 0
            [StorageStateValueInstance, 706658897] lastRemoved: 0
            [StorageStateValueInstance, 912890458] nextIndex: 0x3149
            [StorageStateValueInstance, 1076014382] operationCount: 0
            [StorageStateValueInstance, 155351320] totalSum: 0
            [StorageStateValueInstance, 1435647531] values[0x3149]: 1
    [StorageTitleInstance, 802411913] Balances
        [BalanceValueInstance, 2051884672] 0x6dc3.balance: 0x237d
        [BalanceValueInstance, 1625123432] A (0x6dc4).balance: 0x237b
        [BalanceValueInstance, 620393278] Ao (0x6dc5).balance: 0x237c
    [StorageTitleInstance, 355763637] Ghosts State
        [GhostValueInstance, 98416853] compactToSparse[0x25ea]: <?>
        [GhostValueInstance, 240651308] ghostAValues[0x25eb]: <?>
        [GhostValueInstance, 2035088730] ghostAoValues[0x3149]: <?>
        [GhostValueInstance, 1222956779] ghostElementCount: 0x25e9
        [GhostValueInstance, 546821170] ghostExists[0x3149]: <?>
        [GhostValueInstance, 1860207968] ghostNextIndex: 0x3149
        [GhostValueInstance, 1893204939] sparseToCompact[0x3149]: <?>
[LabelInstance, 518373557] Setup
    [LabelInstance, 5087519] multi contract setup
    [LabelInstance, 1793912819] rule parameters setup
    [LabelInstance, 1511685950] contract address vars initialized
    [LabelInstance, 1783299232] setup read tracking instrumentation
    [LabelInstance, 123927983] last storage initialize
    [LabelInstance, 184289735] assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero
    [LabelInstance, 60191785] assuming address(0).code has no code deployed
    [LabelInstance, 1048848135] assumptions about contracts' addresses
    [LabelInstance, 781925117] assumptions about static addresses
    [LabelInstance, 1145289944] establish addresses of precompiled contracts
    [LabelInstance, 1959051077] assumptions about uniqueness of contracts' addresses
    [LabelInstance, 1810301637] static links
    [LabelInstance, 475828630] record starting nonces
    [LabelInstance, 1168137145] cloned contracts have no balances
    [LabelInstance, 340781791] Linked immutable setup
    [LabelInstance, 1206727609] Constrain immutables
    [LabelInstance, 1061538547] establish equivalence of extension and base contract immutables
[LabelInstance, 2029986609] gasOptimizationCorrectness(f, g)
    [CVLFunc, 328021987] 1 ; gasOptimizationCorrectness ; []; [] ; {} : [] 
        gasOptimizationCorrectness()
        [LabelInstance, 1037283024] env eA
        [LabelInstance, 751892939] env eAo
        [LabelInstance, 758620619] calldataarg args
        [LabelInstance, 1476372897] require eA.msg.sender == eAo.msg.sender
        [LabelInstance, 2004494496] require eA.msg.value == eAo.msg.value
        [LabelInstance, 1548720421] require eA.block.timestamp == eAo.block.timestamp
        [LabelInstance, 1281774238] require eA.block.number == eAo.block.number
        [LabelInstance, 1719552018] require ghostElementCount == to_mathint(a.elementCount)
            [CVLExpInstance, 1088897877] Ghost read: ghostElementCount ↪ 0x25e9
                # snippet DirectStorageLoad -1132003342 ;
                 disp. path:  elementCount
                  value sym:  CANON66!!22:bv256
                # local storage change -1132003342
            [Load, 1614904541] Load from A.elementCount ↪ 0x25e9
        [LabelInstance, 516759785] require ghostElementCount == to_mathint(ao.elementCount)
            [CVLExpInstance, 182961658] Ghost read: ghostElementCount ↪ 0x25e9
                # snippet DirectStorageLoad -1917756970 ;
                 disp. path:  elementCount
                  value sym:  CANON71!!23:bv256
                # local storage change -1917756970
            [Load, 1885393432] Load from Ao.elementCount ↪ 0x25e9
        [LabelInstance, 464318301] require ghostNextIndex == to_mathint(ao.nextIndex)
            [CVLExpInstance, 1813073577] Ghost read: ghostNextIndex ↪ 0x3149
                # snippet DirectStorageLoad 594651039 ;
                 disp. path:  nextIndex
                  value sym:  CANON77!!25:bv256
                # local storage change 594651039
            [Load, 1491967684] Load from Ao.nextIndex ↪ 0x3149
        [LabelInstance, 778794963] require forall uint256 k. to_mathint(k) < ghostElementCount => ghostAValues[k] == a.values[k]
        [LabelInstance, 1388421956] require forall uint256 j. to_mathint(j) < ghostNextIndex => ghostAoValues[j] == ao.values[j]
        [LabelInstance, 876858291] require forall uint256 j. to_mathint(j) < ghostNextIndex => ghostExists[j] == ao.exists[j]
        [LabelInstance, 7108673] require a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && ghostElementCount == to_mathint(ao.elementCount) && ghostElementCount == to_mathint(a.elementCount) && ghostNextIndex == to_mathint(ao.nextIndex) && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && (forall uint256 k. to_mathint(k) < ghostElementCount => ghostExists[compactToSparse[k]] && ghostAValues[k] == ghostAoValues[compactToSparse[k]]) && (forall uint256 k1. (forall uint256 k2. to_mathint(k1) < ghostElementCount && to_mathint(k2) < ghostElementCount && k1 != k2 => compactToSparse[k1] != compactToSparse[k2])) && (forall uint256 k. to_mathint(k) < ghostElementCount => sparseToCompact[compactToSparse[k]] == k) && (forall uint256 j. to_mathint(j) < ghostNextIndex && ghostExists[j] => to_mathint(sparseToCompact[j]) < ghostElementCount && compactToSparse[sparseToCompact[j]] == j)
                # snippet DirectStorageLoad -1580583298 ;
                 disp. path:  totalSum
                  value sym:  CANON95!!33:bv256
                # local storage change -1580583298
            [Load, 1976324720] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad -2141494151 ;
                 disp. path:  totalSum
                  value sym:  CANON98!!34:bv256
                # local storage change -2141494151
            [Load, 709366798] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad -1132050222 ;
                 disp. path:  elementCount
                  value sym:  CANON66!!22:bv256
                # local storage change -1132050222
            [Load, 16534695] Load from A.elementCount ↪ 0x25e9
                # snippet DirectStorageLoad -1917804266 ;
                 disp. path:  elementCount
                  value sym:  CANON71!!23:bv256
                # local storage change -1917804266
            [Load, 1672581769] Load from Ao.elementCount ↪ 0x25e9
            [CVLExpInstance, 1954087773] Ghost read: ghostElementCount ↪ 0x25e9
                # snippet DirectStorageLoad -1917802826 ;
                 disp. path:  elementCount
                  value sym:  CANON71!!23:bv256
                # local storage change -1917802826
            [Load, 511410616] Load from Ao.elementCount ↪ 0x25e9
            [CVLExpInstance, 2080407460] Ghost read: ghostElementCount ↪ 0x25e9
                # snippet DirectStorageLoad -1132047214 ;
                 disp. path:  elementCount
                  value sym:  CANON66!!22:bv256
                # local storage change -1132047214
            [Load, 323653495] Load from A.elementCount ↪ 0x25e9
            [CVLExpInstance, 798295464] Ghost read: ghostNextIndex ↪ 0x3149
                # snippet DirectStorageLoad 594606175 ;
                 disp. path:  nextIndex
                  value sym:  CANON77!!25:bv256
                # local storage change 594606175
            [Load, 1839277987] Load from Ao.nextIndex ↪ 0x3149
                # snippet DirectStorageLoad 1370838709 ;
                 disp. path:  lastAdded
                  value sym:  CANON123!!5:bv256
                # local storage change 1370838709
            [Load, 304322796] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 272072310 ;
                 disp. path:  lastAdded
                  value sym:  CANON126!!6:bv256
                # local storage change 272072310
            [Load, 1431669992] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad 515921426 ;
                 disp. path:  lastRemoved
                  value sym:  CANON131!!7:bv256
                # local storage change 515921426
            [Load, 1391094703] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad 1224609554 ;
                 disp. path:  lastRemoved
                  value sym:  CANON133!!8:bv256
                # local storage change 1224609554
            [Load, 915591790] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad 280797308 ;
                 disp. path:  operationCount
                  value sym:  CANON138!!9:bv256
                # local storage change 280797308
            [Load, 955828392] Load from A.operationCount ↪ 0
                # snippet DirectStorageLoad -781532721 ;
                 disp. path:  operationCount
                  value sym:  CANON141!!10:bv256
                # local storage change -781532721
            [Load, 1102258579] Load from Ao.operationCount ↪ 0
        [LabelInstance, 1082498329] A.f(eA, args)
            [External, 1612986053] A.addValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@2:bv256)])
                [TransferInstance, 518463457] sender: 0x6dc3; receiver: A (0x6dc4); transferred amount: 0
                    # snippet WithLocSym 1388613579 ;
                       loc sym:  R48:bv256
                     value sym:  R85:bv256
                [Load, 1174407703] Load from A.[raw storage address] A (0x6dc4) ↪ 1
                [Start, 704719515] Evaluate branch condition
                [Start, 1800581888] Evaluate branch condition
                    # snippet LoadSnippet 689751045 ;
                     disp. path:  values
                      value sym:  CANON191!!13:bv256
                    # local storage change 689751045
                [Load, 1307357596] Load from A.values ↪ 0x25eb
                [LocalAssignmentInstance, 192563844] index  ↪  0x25eb
                    # snippet LoadSnippet -1774490473 ;
                     disp. path:  values
                      value sym:  CANON191!!13:bv256
                    # local storage change -1774490473
                [Load, 680324226] Load from A.values ↪ 0x25eb
                    # snippet StoreSnippet 285673002 ;
                     disp. path:  values
                      value sym:  R89:bv256
                    # local storage change 285673002
                [Store, 1454932000] Store at A.values ↪ 0x25ec
                [LabelInstance, 2121317178] Apply hook store A.values[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 663216154] With parameters:
                        [LabelInstance, 1755377812] k = 0x25eb
                        [LabelInstance, 2055984160] newValue = 0x1
                        [LabelInstance, 22616352] oldValue = 0x0
                    [CVLExpInstance, 432451105] Ghost assignment: ghostAValues[0x25eb] = 1
                    # snippet StoreSnippet -1658581255 ;
                     disp. path:  values[i = CANON191!!13:bv256]
                      value sym:  R219:bv256
                    # local storage change -1658581255
                [Store, 1980619229] Store at A.values[0x25eb] ↪ 1
                    # snippet LoadSnippet 950244300 ;
                     disp. path:  totalSum
                      value sym:  CANON95!!33:bv256
                    # local storage change 950244300
                [Load, 1375943144] Load from A.totalSum ↪ 0
                [Start, 458926737] Evaluate branch condition
                    # snippet StoreSnippet 1174574886 ;
                     disp. path:  totalSum
                      value sym:  R98:bv256
                    # local storage change 1174574886
                [Store, 935442557] Store at A.totalSum ↪ 1
                    # snippet LoadSnippet 1969867520 ;
                     disp. path:  elementCount
                      value sym:  CANON66!!22:bv256
                    # local storage change 1969867520
                [Load, 798641257] Load from A.elementCount ↪ 0x25e9
                [Start, 1688071179] Evaluate branch condition
                [LabelInstance, 710790187] Apply hook store A.elementCount := newCount (old: oldCount)
                    [LabelInstance, 275090253] With parameters:
                        [LabelInstance, 1843487788] newCount = 0x25ea
                        [LabelInstance, 1721184303] oldCount = 0x25e9
                    [CVLExpInstance, 586126402] Ghost assignment: ghostElementCount = 0x25ea
                    # snippet StoreSnippet -1818679193 ;
                     disp. path:  elementCount
                      value sym:  R101:bv256
                    # local storage change -1818679193
                [Store, 510414001] Store at A.elementCount ↪ 0x25ea
                    # snippet StoreSnippet -1641074324 ;
                     disp. path:  lastAdded
                      value sym:  R219:bv256
                    # local storage change -1641074324
                [Store, 2018155348] Store at A.lastAdded ↪ 1
                    # snippet LoadSnippet -1476622314 ;
                     disp. path:  operationCount
                      value sym:  CANON138!!9:bv256
                    # local storage change -1476622314
                [Load, 662948410] Load from A.operationCount ↪ 0
                [Start, 2039486220] Evaluate branch condition
                    # snippet StoreSnippet -594387122 ;
                     disp. path:  operationCount
                      value sym:  R107:bv256
                    # local storage change -594387122
                [Store, 90555723] Store at A.operationCount ↪ 1
                [Return, 1776545534] Return
        [LabelInstance, 1116152084] Ao.g(eAo, args)
            [External, 550025954] Ao.addValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@3:bv256)])
                [TransferInstance, 627256147] sender: 0x6dc3; receiver: Ao (0x6dc5); transferred amount: 0
                    # snippet WithLocSym -774282436 ;
                       loc sym:  R35:bv256
                     value sym:  R121:bv256
                [Load, 1392616735] Load from Ao.[raw storage address] Ao (0x6dc5) ↪ 1
                [Start, 678801898] Evaluate branch condition
                [Start, 1292829100] Evaluate branch condition
                    # snippet LoadSnippet 638708838 ;
                     disp. path:  nextIndex
                      value sym:  CANON77!!25:bv256
                    # local storage change 638708838
                [Load, 1896514285] Load from Ao.nextIndex ↪ 0x3149
                [LocalAssignmentInstance, 805173390] index  ↪  0x3149
                [LabelInstance, 713225850] Apply hook store Ao.values[KEY uint256 j] := newValue (old: oldValue)
                    [LabelInstance, 531992807] With parameters:
                        [LabelInstance, 982344726] j = 0x3149
                        [LabelInstance, 2062864961] newValue = 0x1
                        [LabelInstance, 1207487043] oldValue = 0x1
                    [CVLExpInstance, 1954109683] Ghost assignment: ghostAoValues[0x3149] = 1
                    # snippet StoreSnippet 1629663231 ;
                     disp. path:  values[k = CANON77!!25:bv256]
                      value sym:  R225:bv256
                    # local storage change 1629663231
                [Store, 629489598] Store at Ao.values[0x3149] ↪ 1
                [LabelInstance, 2034210709] Apply hook store Ao.exists[KEY uint256 j] := newExists (old: oldExists)
                    [LabelInstance, 2014634019] With parameters:
                        [LabelInstance, 1184137490] j = 0x3149
                        [LabelInstance, 1247817393] newExists = 0x1
                        [LabelInstance, 1332124503] oldExists = 0x0
                    [CVLExpInstance, 271347552] Ghost assignment: ghostExists[0x3149] = true
                    [CVLIf, 1926426726] if (!(oldExists) && newExists)
                        [CVLBranch, 965500203] THEN branch
                            [CVLExpInstance, 1120654702] Ghost read: ghostElementCount ↪ 0x25ea
                            [CVLExpInstance, 829416760] Ghost assignment: compactToSparse[0x25ea] = 0x3149
                            [CVLExpInstance, 1415275187] Ghost assignment: sparseToCompact[0x3149] = 0x25ea
                            [CVLExpInstance, 266672150] Ghost assignment: ghostElementCount = 0x25eb
                    [CVLIf, 328850465] if (oldExists && !(newExists))
                        [CVLBranch, 1561443663] ELSE branch
                    # snippet StoreSnippet 1371111404 ;
                     disp. path:  exists[k = CANON77!!25:bv256]
                      value sym:  0x1
                    # local storage change 1371111404
                [Store, 1380979364] Store at Ao.exists[0x3149] ↪ true
                    # snippet LoadSnippet -1825471301 ;
                     disp. path:  nextIndex
                      value sym:  CANON77!!25:bv256
                    # local storage change -1825471301
                [Load, 1968342352] Load from Ao.nextIndex ↪ 0x3149
                [Start, 687290127] Evaluate branch condition
                [LabelInstance, 2019298459] Apply hook store Ao.nextIndex := newNext (old: oldNext)
                    [LabelInstance, 718009350] With parameters:
                        [LabelInstance, 1272089610] newNext = 0x314a
                        [LabelInstance, 1510769968] oldNext = 0x3149
                    [CVLExpInstance, 1118597694] Ghost assignment: ghostNextIndex = 0x314a
                    # snippet StoreSnippet -1582186161 ;
                     disp. path:  nextIndex
                      value sym:  R244:bv256
                    # local storage change -1582186161
                [Store, 934466985] Store at Ao.nextIndex ↪ 0x314a
                    # snippet LoadSnippet -745035847 ;
                     disp. path:  totalSum
                      value sym:  CANON98!!34:bv256
                    # local storage change -745035847
                [Load, 1759493513] Load from Ao.totalSum ↪ 0
                [Start, 1447329959] Evaluate branch condition
                    # snippet StoreSnippet -1243592599 ;
                     disp. path:  totalSum
                      value sym:  R249:bv256
                    # local storage change -1243592599
                [Store, 2002269651] Store at Ao.totalSum ↪ 1
                    # snippet LoadSnippet 1894379076 ;
                     disp. path:  elementCount
                      value sym:  CANON71!!23:bv256
                    # local storage change 1894379076
                [Load, 1457961228] Load from Ao.elementCount ↪ 0x25e9
                [Start, 1136682412] Evaluate branch condition
                [LabelInstance, 838042827] Apply hook store Ao.elementCount := newCount (old: oldCount)
                    [LabelInstance, 129223051] With parameters:
                        [LabelInstance, 1685995176] newCount = 0x25ea
                        [LabelInstance, 609471118] oldCount = 0x25e9
                    [CVLExpInstance, 162252563] Ghost assignment: ghostElementCount = 0x25ea
                    # snippet StoreSnippet -91200351 ;
                     disp. path:  elementCount
                      value sym:  R252:bv256
                    # local storage change -91200351
                [Store, 281913404] Store at Ao.elementCount ↪ 0x25ea
                    # snippet StoreSnippet -1054599000 ;
                     disp. path:  lastAdded
                      value sym:  R225:bv256
                    # local storage change -1054599000
                [Store, 89346035] Store at Ao.lastAdded ↪ 1
                    # snippet LoadSnippet -1536033685 ;
                     disp. path:  operationCount
                      value sym:  CANON141!!10:bv256
                    # local storage change -1536033685
                [Load, 1072620141] Load from Ao.operationCount ↪ 0
                [Start, 1747593692] Evaluate branch condition
                    # snippet StoreSnippet 1133091720 ;
                     disp. path:  operationCount
                      value sym:  R258:bv256
                    # local storage change 1133091720
                [Store, 358342829] Store at Ao.operationCount ↪ 1
                [Return, 174590242] Return
        [LabelInstance, 1121808264] assert a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && ghostElementCount == to_mathint(ao.elementCount) && ghostElementCount == to_mathint(a.elementCount) && ghostNextIndex == to_mathint(ao.nextIndex) && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && (forall uint256 k. to_mathint(k) < ghostElementCount => ghostExists[compactToSparse[k]] && ghostAValues[k] == ghostAoValues[compactToSparse[k]]) && (forall uint256 k1. (forall uint256 k2. to_mathint(k1) < ghostElementCount && to_mathint(k2) < ghostElementCount && k1 != k2 => compactToSparse[k1] != compactToSparse[k2])) && (forall uint256 k. to_mathint(k) < ghostElementCount => sparseToCompact[compactToSparse[k]] == k) && (forall uint256 j. to_mathint(j) < ghostNextIndex && ghostExists[j] => to_mathint(sparseToCompact[j]) < ghostElementCount && compactToSparse[sparseToCompact[j]] == j)
                # snippet DirectStorageLoad 1423508792 ;
                 disp. path:  totalSum
                  value sym:  R98:bv256
                # local storage change 1423508792
            [Load, 2072042182] Load from A.totalSum ↪ 1
                # snippet DirectStorageLoad -808146429 ;
                 disp. path:  totalSum
                  value sym:  R249:bv256
                # local storage change -808146429
            [Load, 831787923] Load from Ao.totalSum ↪ 1
                # snippet DirectStorageLoad -324782244 ;
                 disp. path:  elementCount
                  value sym:  CANON66!!103:bv256
                # local storage change -324782244
            [Load, 2071936410] Load from A.elementCount ↪ 0x25ea
                # snippet DirectStorageLoad 2113113912 ;
                 disp. path:  elementCount
                  value sym:  CANON71!!254:bv256
                # local storage change 2113113912
            [Load, 1391967314] Load from Ao.elementCount ↪ 0x25ea
            [CVLExpInstance, 794561056] Ghost read: ghostElementCount ↪ 0x25ea
                # snippet DirectStorageLoad 2113115352 ;
                 disp. path:  elementCount
                  value sym:  CANON71!!254:bv256
                # local storage change 2113115352
            [Load, 1044749523] Load from Ao.elementCount ↪ 0x25ea
            [CVLExpInstance, 1012200812] Ghost read: ghostElementCount ↪ 0x25ea
                # snippet DirectStorageLoad -324779236 ;
                 disp. path:  elementCount
                  value sym:  CANON66!!103:bv256
                # local storage change -324779236
            [Load, 1403964312] Load from A.elementCount ↪ 0x25ea
            [CVLExpInstance, 485283527] Ghost read: ghostNextIndex ↪ 0x314a
                # snippet DirectStorageLoad -1569639156 ;
                 disp. path:  nextIndex
                  value sym:  CANON77!!246:bv256
                # local storage change -1569639156
            [Load, 249389709] Load from Ao.nextIndex ↪ 0x314a
                # snippet DirectStorageLoad -1392137441 ;
                 disp. path:  lastAdded
                  value sym:  R219:bv256
                # local storage change -1392137441
            [Load, 364448175] Load from A.lastAdded ↪ 1
                # snippet DirectStorageLoad -619149821 ;
                 disp. path:  lastAdded
                  value sym:  R225:bv256
                # local storage change -619149821
            [Load, 820961931] Load from Ao.lastAdded ↪ 1
                # snippet DirectStorageLoad 515921426 ;
                 disp. path:  lastRemoved
                  value sym:  CANON131!!7:bv256
                # local storage change 515921426
            [Load, 1246646463] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad 1224609554 ;
                 disp. path:  lastRemoved
                  value sym:  CANON133!!8:bv256
                # local storage change 1224609554
            [Load, 794987121] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad -16403204 ;
                 disp. path:  operationCount
                  value sym:  CANON138!!108:bv256
                # local storage change -16403204
            [Load, 1925909059] Load from A.operationCount ↪ 1
                # snippet DirectStorageLoad 1720428438 ;
                 disp. path:  operationCount
                  value sym:  CANON141!!259:bv256
                # local storage change 1720428438
            [Load, 896943147] Load from Ao.operationCount ↪ 1
            [StorageTitleInstance, 218440082] Global State
                [StorageTitleInstance, 906953537] Storage State
                    [StorageTitleInstance, 482123473] A
                        [StorageStateValueInstance, 460113521] elementCount: 0x25ea (changed)
                        [StorageStateValueInstance, 1069645119] lastAdded: 1 (changed)
                        [StorageStateValueInstance, 1897559181] lastRemoved: 0
                        [StorageStateValueInstance, 153626217] operationCount: 1 (changed)
                        [StorageStateValueInstance, 1946826355] totalSum: 1 (changed)
                        [StorageStateValueInstance, 1083610440] values: 0x25ec (changed)
                        [StorageStateValueInstance, 1653223371] values[0x25eb]: 1 (changed)
                    [StorageTitleInstance, 718886557] Ao
                        [StorageStateValueInstance, 256197659] elementCount: 0x25ea (changed)
                        [StorageStateValueInstance, 2064493678] exists[0x3149]: true (changed)
                        [StorageStateValueInstance, 1221206195] lastAdded: 1 (changed)
                        [StorageStateValueInstance, 675805833] lastRemoved: 0
                        [StorageStateValueInstance, 218568198] nextIndex: 0x314a (changed)
                        [StorageStateValueInstance, 461354260] operationCount: 1 (changed)
                        [StorageStateValueInstance, 44683632] totalSum: 1 (changed)
                        [StorageStateValueInstance, 363716638] values[0x3149]: 1 (changed)
                [StorageTitleInstance, 548369291] Balances
                    [BalanceValueInstance, 1176413599] 0x6dc3.balance: 0x237d
                    [BalanceValueInstance, 183553661] A (0x6dc4).balance: 0x237b
                    [BalanceValueInstance, 1881633325] Ao (0x6dc5).balance: 0x237c
                [StorageTitleInstance, 735011977] Ghosts State
                    [GhostValueInstance, 416161330] compactToSparse[0x25ea]: 0x3149 (changed)
                    [GhostValueInstance, 348235888] ghostAValues[0x25eb]: 1 (changed)
                    [GhostValueInstance, 1597769439] ghostAoValues[0x3149]: 1 (changed)
                    [GhostValueInstance, 252168861] ghostElementCount: 0x25ea (changed)
                    [GhostValueInstance, 1741712065] ghostExists[0x3149]: true (changed)
                    [GhostValueInstance, 2118896739] ghostNextIndex: 0x314a (changed)
                    [GhostValueInstance, 1107179403] sparseToCompact[0x3149]: 0x25ea (changed)
            -------- CVL model begin ------------
            -- type: bool --
            CANON11!!152                                  ~~> false
               cvl                 : true
               cvl.display         : g.isView
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON300!!307                                 ~~> false
               cvl                 : true
            CANON240!!242                                 ~~> false
               cvl                 : true
            CANON253!!269                                 ~~>  true
               cvl                 : true
            CANON4!!144                                   ~~> false
               cvl                 : true
               cvl.display         : f.isView
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON290!!301                                 ~~>  true
               cvl                 : true
            CANON258!!274                                 ~~>  true
               cvl                 : true
            CANON287!!299                                 ~~>  true
               cvl                 : true
            CANON3!!61                                    ~~> false
               cvl                 : true
               cvl.display         : f.isPure
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON4!!62                                    ~~> false
               cvl                 : true
               cvl.display         : f.isView
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON5!!63                                    ~~> false
               cvl                 : true
               cvl.display         : f.isPayable
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON6!!65                                    ~~> false
               cvl                 : true
               cvl.display         : f.isFallback
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON12!!153                                  ~~> false
               cvl                 : true
               cvl.display         : g.isPayable
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON254!!270                                 ~~>  true
               cvl                 : true
            CANON5!!145                                   ~~> false
               cvl                 : true
               cvl.display         : f.isPayable
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON246!!264                                 ~~>  true
               cvl                 : true
            CANON100                                      ~~>  true
               cvl                 : true
            CANON105                                      ~~>  true
               cvl                 : true
            CANON106                                      ~~>  true
               cvl                 : true
            CANON110                                      ~~>  true
               cvl                 : true
            CANON111                                      ~~>  true
               cvl                 : true
            CANON115                                      ~~>  true
               cvl                 : true
            CANON116                                      ~~>  true
               cvl                 : true
            CANON120                                      ~~>  true
               cvl                 : true
            CANON121                                      ~~>  true
               cvl                 : true
            CANON128                                      ~~>  true
               cvl                 : true
            CANON129                                      ~~>  true
               cvl                 : true
            CANON134                                      ~~>  true
               cvl                 : true
            CANON137                                      ~~>  true
               cvl                 : true
            CANON144                                      ~~>  true
               cvl                 : true
            CANON145                                      ~~>  true
               cvl                 : true
            CANON149                                      ~~>  true
               cvl                 : true
            CANON153                                      ~~>  true
               cvl                 : true
            CANON157                                      ~~>  true
               cvl                 : true
            CANON160                                      ~~>  true
               cvl                 : true
            CANON238                                      ~~> false
               cvl                 : true
            CANON309                                      ~~>  true
               cvl                 : true
            CANON275!!289                                 ~~>  true
               cvl                 : true
            CANON259!!275                                 ~~>  true
               cvl                 : true
            CANON13!!155                                  ~~> false
               cvl                 : true
               cvl.display         : g.isFallback
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON234!!139                                 ~~>  true
               cvl                 : true
            CANON263!!279                                 ~~>  true
               cvl                 : true
            CANON6!!147                                   ~~> false
               cvl                 : true
               cvl.display         : f.isFallback
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON268!!284                                 ~~>  true
               cvl                 : true
            CANON297!!305                                 ~~> false
               cvl                 : true
            CANON10!!68                                   ~~> false
               cvl                 : true
               cvl.display         : g.isPure
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON11!!69                                   ~~> false
               cvl                 : true
               cvl.display         : g.isView
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON12!!70                                   ~~> false
               cvl                 : true
               cvl.display         : g.isPayable
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON13!!72                                   ~~> false
               cvl                 : true
               cvl.display         : g.isFallback
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON48                                       ~~>  true
               cvl                 : true
            CANON51                                       ~~>  true
               cvl                 : true
            CANON58                                       ~~>  true
               cvl                 : true
            CANON63                                       ~~>  true
               cvl                 : true
            CANON69                                       ~~>  true
               cvl                 : true
            CANON74                                       ~~>  true
               cvl                 : true
            CANON80                                       ~~>  true
               cvl                 : true
            CANON272!!288                                 ~~>  true
               cvl                 : true
            CANON264!!280                                 ~~>  true
               cvl                 : true
            CANON269!!285                                 ~~>  true
               cvl                 : true
            CANON10!!151                                  ~~> false
               cvl                 : true
               cvl.display         : g.isPure
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON3!!143                                   ~~> false
               cvl                 : true
               cvl.display         : f.isPure
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON281!!293                                 ~~>  true
               cvl                 : true
            CANON236!!140                                 ~~>  true
               cvl                 : true
            CANON294!!303                                 ~~>  true
               cvl                 : true
            CANON286!!298                                 ~~>  true
               cvl                 : true
            CANON278!!292                                 ~~>  true
               cvl                 : true
            -- type: int --
            CANON!!142                                    ~~>                                                         0x5b9af12b
               cvl                 : true
               cvl.display         : f.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON9!!156                                   ~~>                                                             0x6dc5
               cvl                 : true
               cvl.display         : g.contract
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON1!!39                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : f.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON1!!64                                    ~~>                                                                0x1
               cvl                 : true
               cvl.display         : f.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON2!!40                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : f.contract
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON2!!66                                    ~~>                                                             0x6dc4
               cvl                 : true
               cvl.display         : f
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON7!!45                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : g.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON7!!67                                    ~~>                                                         0x5b9af12b
               cvl                 : true
               cvl.display         : g.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON8!!46                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : g.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON8!!71                                    ~~>                                                                0x1
               cvl                 : true
               cvl.display         : g.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON9!!47                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : g.contract
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON9!!73                                    ~~>                                                             0x6dc5
               cvl                 : true
               cvl.display         : g
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON75!!247                                  ~~>                                                             0x314a
               cvl                 : true
               cvl.display         : ghostNextIndex
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON301                                      ~~>                                                             0x25ea
               cvl                 : true
               cvl.display         : currentCount
               cvl.type            : mathint
            CANON311                                      ~~>                                                             0x25ea
               cvl                 : true
               cvl.display         : countAsUint
               cvl.type            : uint256
            CANON314                                      ~~>                                                             0x25ea
               cvl                 : true
               cvl.display         : sparseToCompact
               cvl.type            : uint256
            CANON1!!146                                   ~~>                                                                0x1
               cvl                 : true
               cvl.display         : f.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON!!51                                     ~~>                                                                0x0
               cvl                 : true
               cvl.display         : f.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON!!60                                     ~~>                                                         0x5b9af12b
               cvl                 : true
               cvl.display         : f.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON24                                       ~~>                                                             0x6dc3
               cvl                 : true
               cvl.display         : eA.msg.sender
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON25                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.msg.value
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON26                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.tx.origin
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON27                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.basefee
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON28                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.blobbasefee
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON29                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.coinbase
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON30                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.difficulty
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON31                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.gaslimit
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON32                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.number
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON33                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.timestamp
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
               cvl.def.site        : Function(range=mappingarray.spec:139:5)
            CANON34                                       ~~>                                                             0x6dc3
               cvl                 : true
               cvl.display         : eAo.msg.sender
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON35                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.msg.value
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON36                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.tx.origin
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON37                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.basefee
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON38                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.blobbasefee
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON39                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.coinbase
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON40                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.difficulty
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON41                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.gaslimit
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON42                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.number
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON43                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.timestamp
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
               cvl.def.site        : Function(range=mappingarray.spec:140:5)
            CANON64!!21                                   ~~>                                                             0x25e9
               cvl                 : true
               cvl.display         : ghostElementCount
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON64!!104                                  ~~>                                                             0x25ea
               cvl                 : true
               cvl.display         : ghostElementCount
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON64!!239                                  ~~>                                                             0x25eb
               cvl                 : true
               cvl.display         : ghostElementCount
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON64!!255                                  ~~>                                                             0x25ea
               cvl                 : true
               cvl.display         : ghostElementCount
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON2!!148                                   ~~>                                                             0x6dc4
               cvl                 : true
               cvl.display         : f.contract
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:167:40)
            CANON7!!150                                   ~~>                                                         0x5b9af12b
               cvl                 : true
               cvl.display         : g.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            CANON75!!24                                   ~~>                                                             0x3149
               cvl                 : true
               cvl.display         : ghostNextIndex
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON8!!154                                   ~~>                                                                0x1
               cvl                 : true
               cvl.display         : g.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:167:50)
            -- type: bv256 --
            CANON162                                      ~~>                                                               0x24
               cvl                 : true
               cvl.display         : args.length
               cvl.type            : uint256
               cvl.def.site        : Function(range=mappingarray.spec:141:5)
            -- type: bytemap --
            CANON165havocme17352                          ~~> {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    0x1
  )
}
               cvl                 : true
               cvl.display         : args
               cvl.type            : calldataarg
               cvl.def.site        : Function(range=mappingarray.spec:141:5)
            -------- CVL model end --------------
            -------- TAC model begin ------------
              CANON11!!152:bool  -->                                                              false
              sklm!certora__k_46646!callId0!21:bv256  -->                                                             0x25e9
              OK_5_0_0_3_0_0:bool  -->                                                              false
              CANON300!!307:bool  -->                                                              false
              tacCalldatabufCANON0@2:bv256  -->                                                                0x0
              tacCalldatabufCANON0@3:bv256  -->                                                                0x0
              tacCalldatabufCANON1@2:bv256  -->                                                                0x1
              tacCalldatabufCANON1@3:bv256  -->                                                                0x1
              OK_6_0_0_1_0_5:bool  -->                                                              false
               CANON!!142:int  -->                                                         0x5b9af12b
              from_skey:ghostmap((uninterp) skey->bv256)  -->                                          {[x:bv256] ->
  x:bv256
}
              tacM0x40!!0:bv256  -->                                                                0x0
              tacM0x40!!1:bv256  -->                                                                0x0
              CANON66!!103:bv256  -->                                                             0x25ea
              sklm!certora__k_77521!callId0!24:bv256  -->                                                             0x1a8c
              CANON240!!242:bool  -->                                                              false
              CANON253!!269:bool  -->                                                               true
              CANON4!!144:bool  -->                                                              false
              CANON290!!301:bool  -->                                                               true
              CANON258!!274:bool  -->                                                               true
              CANON9!!156:int  -->                                                             0x6dc5
              to_skey:ghostmap(bv256->(uninterp) skey)  -->                                          {[x:bv256] ->
  x:bv256
}
              CANON287!!299:bool  -->                                                               true
               CANON1!!39:int  -->                                                                0x0
               CANON1!!64:int  -->                                                                0x1
               CANON2!!40:int  -->                                                                0x0
               CANON2!!66:int  -->                                                             0x6dc4
              CANON3!!61:bool  -->                                                              false
              CANON4!!62:bool  -->                                                              false
              CANON5!!63:bool  -->                                                              false
              CANON6!!65:bool  -->                                                              false
               CANON7!!45:int  -->                                                                0x0
               CANON7!!67:int  -->                                                         0x5b9af12b
               CANON8!!46:int  -->                                                                0x0
               CANON8!!71:int  -->                                                                0x1
               CANON9!!47:int  -->                                                                0x0
               CANON9!!73:int  -->                                                             0x6dc5
              CANON12!!153:bool  -->                                                              false
              sklm!certora__j_87648!callId0!25:bv256  -->                                                             0x2fc5
              ReachabilityCertora0_0_0_0_0_0:bool  -->                                                               true
              ReachabilityCertora0_0_0_2_0_2:bool  -->                                                               true
              ReachabilityCertora0_0_0_3_0_4:bool  -->                                                               true
              CANON95!!33:bv256  -->                                                                0x0
              CANON95!!99:bv256  -->                                                                0x1
              ReachabilityCertora1_0_0_1_0_1:bool  -->                                                               true
              CANON75!!247:int  -->                                                             0x314a
              CANON98!!34:bv256  -->                                                                0x0
              ReachabilityCertora2_0_0_1_0_3:bool  -->                                                               true
              CANON123!!105:bv256  -->                                                                0x1
              CANON254!!270:bool  -->                                                               true
              CANON5!!145:bool  -->                                                              false
              CANON246!!264:bool  -->                                                               true
                CANON100:bool  -->                                                               true
                CANON105:bool  -->                                                               true
                CANON106:bool  -->                                                               true
                CANON110:bool  -->                                                               true
                CANON111:bool  -->                                                               true
                CANON115:bool  -->                                                               true
                CANON116:bool  -->                                                               true
                CANON120:bool  -->                                                               true
                CANON121:bool  -->                                                               true
                CANON128:bool  -->                                                               true
                CANON129:bool  -->                                                               true
                CANON134:bool  -->                                                               true
                CANON137:bool  -->                                                               true
                CANON144:bool  -->                                                               true
                CANON145:bool  -->                                                               true
                CANON149:bool  -->                                                               true
                CANON153:bool  -->                                                               true
                CANON157:bool  -->                                                               true
                CANON160:bool  -->                                                               true
               CANON162:bv256  -->                                                               0x24
               CANON167:bv256  -->                                                                0x0
                 CANON193:int  -->                                                                0x1
               CANON200:bv256  -->                                                                0x0
                 CANON226:int  -->                                                                0x1
                CANON231:bool  -->                                                               true
                CANON238:bool  -->                                                              false
                 CANON301:int  -->                                                             0x25ea
                CANON309:bool  -->                                                               true
                 CANON311:int  -->                                                             0x25ea
                 CANON312:int  -->                                                             0x3149
                 CANON314:int  -->                                                             0x25ea
              CANON275!!289:bool  -->                                                               true
              CANON259!!275:bool  -->                                                               true
              ReachabilityCertora3_0_0_3_0_0:bool  -->                                                               true
              ReachabilityCertora4_0_0_3_0_0:bool  -->                                                              false
              ReachabilityCertora5_0_0_3_0_0:bool  -->                                                               true
              ReachabilityCertora6_0_0_1_0_5:bool  -->                                                               true
              CANON13!!155:bool  -->                                                              false
              CANON71!!254:bv256  -->                                                             0x25ea
              tacCalldatabuf@2:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    0x1
    0x0
  )
}
              tacCalldatabuf@3:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    0x1
    0x0
  )
}
                     R2:bv256  -->                                                                0x1
                     R3:bv256  -->                                                                0x1
                     B58:bool  -->                                                               true
                      I95:int  -->                                                             0x25eb
                    R35:bv256  -->                                                             0x6dc5
                    R36:bv256  -->                                                                0x1
                    R37:bv256  -->                                                                0x2
                    R38:bv256  -->                                                                0x4
                    R48:bv256  -->                                                             0x6dc4
                    R52:bv256  -->                                                                0x1
                    R53:bv256  -->                                                                0x1
                    R55:bv256  -->                                                                0x1
                    R56:bv256  -->                                                                0x1
                    R76:bv256  -->                                                             0x6dc3
                    R78:bv256  -->                                                             0x237d
                    R81:bv256  -->                                                             0x237b
                    R83:bv256  -->                                                             0x237b
                    R85:bv256  -->                                                                0x1
                    R89:bv256  -->                                                             0x25ec
              R91:(uninterp) skey  -->                                                             0x3e38
              R92:(uninterp) skey  -->                                                             0x6423
                    R93:bv256  -->                                                                0x0
                    R98:bv256  -->                                                                0x1
              CANON1!!146:int  -->                                                                0x1
                    B138:bool  -->                                                               true
                    B180:bool  -->                                                               true
                    B181:bool  -->                                                               true
                    B182:bool  -->                                                               true
                    B210:bool  -->                                                               true
                    B211:bool  -->                                                               true
                    B212:bool  -->                                                               true
                    B213:bool  -->                                                               true
                    B227:bool  -->                                                              false
                    B228:bool  -->                                                               true
                    B231:bool  -->                                                               true
                    B238:bool  -->                                                               true
                    B300:bool  -->                                                               true
                    B302:bool  -->                                                               true
                    B304:bool  -->                                                              false
                    B306:bool  -->                                                               true
                     I129:int  -->                                                             0x3149
                     I136:int  -->                                                             0x3149
                     I158:int  -->                                                             0x6dc3
                     I160:int  -->                                                             0x6dc3
                     I161:int  -->                                                                0x0
                     I162:int  -->                                                                0x0
                     I164:int  -->                                                                0x0
                     I166:int  -->                                                                0x0
                     I168:int  -->                                                                0x0
                     I170:int  -->                                                                0x0
                     I171:int  -->                                                             0x25e9
                     I174:int  -->                                                             0x25e9
                     I177:int  -->                                                             0x3149
                     I191:int  -->                                                             0x25e9
                     I194:int  -->                                                             0x25e9
                     I197:int  -->                                                             0x3149
                     I226:int  -->                                                             0x25ea
                     I229:int  -->                                                             0x25ea
                     I230:int  --> 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
                     I232:int  -->                                                             0x25ea
                     I233:int  -->                                                             0x25ea
                     I235:int  -->                                                             0x3149
                     I237:int  -->                                                             0x25ea
                     I271:int  -->                                                             0x25ea
                     I276:int  -->                                                             0x25ea
                     I281:int  -->                                                             0x314a
                   R101:bv256  -->                                                             0x25ea
                   R107:bv256  -->                                                                0x1
                   R113:bv256  -->                                                             0x6dc3
                   R115:bv256  -->                                                             0x237d
                   R118:bv256  -->                                                             0x237c
                   R120:bv256  -->                                                             0x237c
                   R121:bv256  -->                                                                0x1
              R125:(uninterp) skey  -->                                                             0x8ecd
                   R127:bv256  -->                                                                0x1
              R132:(uninterp) skey  -->                                                             0xa412
                   R134:bv256  -->                                                                0x0
                   R218:bv256  -->                                                                0x0
                   R219:bv256  -->                                                                0x1
                   R224:bv256  -->                                                                0x0
                   R225:bv256  -->                                                                0x1
                   R244:bv256  -->                                                             0x314a
                   R249:bv256  -->                                                                0x1
                   R252:bv256  -->                                                             0x25ea
                   R258:bv256  -->                                                                0x1
              lastHasThrown!!109:bool  -->                                                              false
              lastHasThrown!!111:bool  -->                                                              false
              lastHasThrown!!260:bool  -->                                                              false
              CANON234!!139:bool  -->                                                               true
              CANON263!!279:bool  -->                                                               true
              CANON6!!147:bool  -->                                                              false
              CANON165havocme17352:bytemap  -->      {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    0x1
  )
}
              CANON268!!284:bool  -->                                                               true
              CANON297!!305:bool  -->                                                              false
                CANON!!51:int  -->                                                                0x0
                CANON!!60:int  -->                                                         0x5b9af12b
              CANON10!!68:bool  -->                                                              false
              CANON11!!69:bool  -->                                                              false
              lastReverted!!110:bool  -->                                                              false
              lastReverted!!261:bool  -->                                                              false
              CANON12!!70:bool  -->                                                              false
              CANON123!!5:bv256  -->                                                                0x0
              CANON126!!6:bv256  -->                                                                0x0
              CANON13!!72:bool  -->                                                              false
              CANON131!!7:bv256  -->                                                                0x0
              CANON133!!8:bv256  -->                                                                0x0
              CANON138!!9:bv256  -->                                                                0x0
                  CANON24:int  -->                                                             0x6dc3
                  CANON25:int  -->                                                                0x0
                  CANON26:int  -->                                                                0x0
                  CANON27:int  -->                                                                0x0
                  CANON28:int  -->                                                                0x0
                  CANON29:int  -->                                                                0x0
                  CANON30:int  -->                                                                0x0
                  CANON31:int  -->                                                                0x0
                  CANON32:int  -->                                                                0x0
                  CANON33:int  -->                                                                0x0
                  CANON34:int  -->                                                             0x6dc3
                  CANON35:int  -->                                                                0x0
                  CANON36:int  -->                                                                0x0
                  CANON37:int  -->                                                                0x0
                  CANON38:int  -->                                                                0x0
                  CANON39:int  -->                                                                0x0
                  CANON40:int  -->                                                                0x0
                  CANON41:int  -->                                                                0x0
                  CANON42:int  -->                                                                0x0
                  CANON43:int  -->                                                                0x0
                 CANON48:bool  -->                                                               true
                 CANON51:bool  -->                                                               true
                 CANON58:bool  -->                                                               true
                 CANON63:bool  -->                                                               true
                 CANON69:bool  -->                                                               true
                 CANON74:bool  -->                                                               true
                 CANON80:bool  -->                                                               true
              CANON64!!21:int  -->                                                             0x25e9
              CANON66!!22:bv256  -->                                                             0x25e9
              CANON64!!104:int  -->                                                             0x25ea
              CANON64!!239:int  -->                                                             0x25eb
              CANON64!!255:int  -->                                                             0x25ea
              CANON77!!246:bv256  -->                                                             0x314a
              CANON2!!148:int  -->                                                             0x6dc4
              CANON141!!259:bv256  -->                                                                0x1
              CANON98!!250:bv256  -->                                                                0x1
              CANON272!!288:bool  -->                                                               true
              CANON264!!280:bool  -->                                                               true
              CANON7!!150:int  -->                                                         0x5b9af12b
              CANON141!!10:bv256  -->                                                                0x0
              CANON138!!108:bv256  -->                                                                0x1
              CANON269!!285:bool  -->                                                               true
              sklm!certora__k2_67136!callId0!22:bv256  -->                                                             0x7cf3
              CANON191!!13:bv256  -->                                                             0x25eb
              CANON191!!90:bv256  -->                                                             0x25ec
              CANON10!!151:bool  -->                                                              false
              CANON71!!23:bv256  -->                                                             0x25e9
              CANON75!!24:int  -->                                                             0x3149
              OK_0_0_0_0_0_0:bool  -->                                                              false
              lastHasThrown!!74:bool  -->                                                              false
              CANON77!!25:bv256  -->                                                             0x3149
              OK_0_0_0_2_0_2:bool  -->                                                              false
              OK_0_0_0_3_0_4:bool  -->                                                              false
              OK_1_0_0_1_0_1:bool  -->                                                              false
              CANON3!!143:bool  -->                                                              false
              CANON281!!293:bool  -->                                                               true
              CANON236!!140:bool  -->                                                               true
              tacSighash!!49:bv256  -->                                                         0x5b9af12b
              tacSighash!!50:bv256  -->                                                         0x5b9af12b
              OK_2_0_0_1_0_3:bool  -->                                                              false
              CANON126!!256:bv256  -->                                                                0x1
              CANON8!!154:int  -->                                                                0x1
              CANON294!!303:bool  -->                                                               true
              CANON286!!298:bool  -->                                                               true
              CANON278!!292:bool  -->                                                               true
              sklm!certora__k1_57123!callId0!23:bv256  -->                                                             0x7cf2
            -------- TAC model end --------------
            
