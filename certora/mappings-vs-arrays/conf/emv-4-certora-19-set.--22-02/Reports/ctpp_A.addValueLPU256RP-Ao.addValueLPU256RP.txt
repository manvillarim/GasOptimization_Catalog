Calltrace Debug Information
[StorageTitleInstance, 673318554] Global State
    [StorageTitleInstance, 724893412] Storage State
        [StorageTitleInstance, 683704487] A
            [StorageStateValueInstance, 1020169000] elementCount: 0xee8
            [StorageStateValueInstance, 81808637] lastAdded: 0
            [StorageStateValueInstance, 145707355] lastRemoved: 0
            [StorageStateValueInstance, 616971601] operationCount: 0
            [StorageStateValueInstance, 1813603626] totalSum: 0
            [StorageStateValueInstance, 1788365808] values: 0xee8
            [StorageStateValueInstance, 407890545] values[0xee8]: 0
        [StorageTitleInstance, 225861788] Ao
            [StorageStateValueInstance, 719418413] elementCount: 0xee8
            [StorageStateValueInstance, 42892618] exists[0x3f9c]: true
            [StorageStateValueInstance, 1702171400] lastAdded: 0
            [StorageStateValueInstance, 1530523066] lastRemoved: 0
            [StorageStateValueInstance, 2052635372] nextIndex: 0x3f9c
            [StorageStateValueInstance, 198048960] operationCount: 0
            [StorageStateValueInstance, 1189958626] totalSum: 0
            [StorageStateValueInstance, 1378693816] values[0x3f9c]: 0
    [StorageTitleInstance, 1830649291] Balances
        [BalanceValueInstance, 164800340] 0x70b8.balance: 449
        [BalanceValueInstance, 629966799] A (0x49a8).balance: 0x8ea
        [BalanceValueInstance, 512743732] Ao (0x49a9).balance: 609
    [StorageTitleInstance, 419040267] Ghosts State
        [GhostValueInstance, 68087879] ghostAValues[0xee8]: <?>
        [GhostValueInstance, 1165864438] ghostAoValues[0x3f9c]: <?>
        [GhostValueInstance, 626760212] ghostArrayLength: 0xee8
        [GhostValueInstance, 1837715680] ghostElementCount: 0xee8
        [GhostValueInstance, 519444958] ghostExists[0x3f9c]: <?>
        [GhostValueInstance, 910951915] ghostNextIndex: 0x3f9c
[LabelInstance, 1329508876] Setup
    [LabelInstance, 1746400603] multi contract setup
    [LabelInstance, 2102064354] rule parameters setup
    [LabelInstance, 844064876] contract address vars initialized
    [LabelInstance, 45317602] setup read tracking instrumentation
    [LabelInstance, 724836869] last storage initialize
    [LabelInstance, 1937036613] assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero
    [LabelInstance, 1093610546] assuming address(0).code has no code deployed
    [LabelInstance, 794324683] assumptions about contracts' addresses
    [LabelInstance, 1297437420] assumptions about static addresses
    [LabelInstance, 417229054] establish addresses of precompiled contracts
    [LabelInstance, 539527531] assumptions about uniqueness of contracts' addresses
    [LabelInstance, 1282053523] static links
    [LabelInstance, 735014080] record starting nonces
    [LabelInstance, 1077766367] cloned contracts have no balances
    [LabelInstance, 607834722] Linked immutable setup
    [LabelInstance, 1021582715] Constrain immutables
    [LabelInstance, 1813897035] establish equivalence of extension and base contract immutables
[LabelInstance, 1204631943] gasOptimizationCorrectness(f, g)
    [CVLFunc, 899042014] 1 ; gasOptimizationCorrectness ; []; [] ; {} : [] 
        gasOptimizationCorrectness()
        [LabelInstance, 108134009] env eA
        [LabelInstance, 661411305] env eAo
        [LabelInstance, 1441493686] calldataarg args
        [LabelInstance, 1986653526] require eA.msg.sender == eAo.msg.sender
        [LabelInstance, 12854759] require eA.msg.value == eAo.msg.value
        [LabelInstance, 1771240302] require eA.block.timestamp == eAo.block.timestamp
        [LabelInstance, 1231651105] require eA.block.number == eAo.block.number
        [LabelInstance, 756351788] require A.totalSum() == Ao.totalSum() && A.elementCount() == Ao.elementCount() && ghostElementCount == to_mathint(Ao.elementCount()) && ghostElementCount == to_mathint(A.elementCount()) && A.lastAdded() == Ao.lastAdded() && A.lastRemoved() == Ao.lastRemoved() && A.operationCount() == Ao.operationCount() && ghostArrayLength == ghostElementCount && (forall uint256 k. to_mathint(k) < ghostElementCount => ghostExists[compactToSparse[k]] && ghostAValues[k] == ghostAoValues[compactToSparse[k]]) && (forall uint256 k1. (forall uint256 k2. to_mathint(k1) < ghostElementCount && to_mathint(k2) < ghostElementCount && k1 != k2 => compactToSparse[k1] != compactToSparse[k2])) && (forall uint256 k. to_mathint(k) < ghostElementCount => sparseToCompact[compactToSparse[k]] == k) && (forall uint256 j. to_mathint(j) < ghostNextIndex && ghostExists[j] => to_mathint(sparseToCompact[j]) < ghostElementCount && compactToSparse[sparseToCompact[j]] == j) && (forall uint256 j. to_mathint(j) < ghostNextIndex && !(ghostExists[j]) => sparseToCompact[j] == 0 || to_mathint(sparseToCompact[j]) >= ghostElementCount)
            [External, 1912911169] A.totalSum()
                    # snippet WithLocSym -687917153 ;
                       loc sym:  R82:bv256
                     value sym:  R238:bv256
                [Load, 12365348] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 313010684] Evaluate branch condition
                    # snippet LoadSnippet 1976838065 ;
                     disp. path:  totalSum
                      value sym:  CANON68!!62:bv256
                    # local storage change 1976838065
                [Load, 380256570] Load from A.totalSum ↪ 0
                [Return, 1626455622] Return
            [External, 1636171200] Ao.totalSum()
                    # snippet WithLocSym 2033370359 ;
                       loc sym:  R69:bv256
                     value sym:  R246:bv256
                [Load, 942184782] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 1495697948] Evaluate branch condition
                    # snippet LoadSnippet -596727819 ;
                     disp. path:  totalSum
                      value sym:  CANON72!!63:bv256
                    # local storage change -596727819
                [Load, 806378717] Load from Ao.totalSum ↪ 0
                [Return, 2125847778] Return
            [External, 44816531] A.elementCount()
                    # snippet WithLocSym -686189275 ;
                       loc sym:  R82:bv256
                     value sym:  R254:bv256
                [Load, 1865471152] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 1576311615] Evaluate branch condition
                [LabelInstance, 225840815] Apply hook load val := A.elementCount
                    [LabelInstance, 1371877586] With parameters:
                        [LabelInstance, 951712526] val = ?
                    [CVLExpInstance, 2027310716] Ghost read: ghostElementCount ↪ 0xee8
                    # snippet LoadSnippet -1372885381 ;
                     disp. path:  elementCount
                      value sym:  CANON77!!64:bv256
                    # local storage change -1372885381
                [Load, 844173339] Load from A.elementCount ↪ 0xee8
                [Return, 1985331747] Return
            [External, 1693468747] Ao.elementCount()
                    # snippet WithLocSym 2035128028 ;
                       loc sym:  R69:bv256
                     value sym:  R263:bv256
                [Load, 1818245375] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 1451965600] Evaluate branch condition
                    # snippet LoadSnippet 140132931 ;
                     disp. path:  elementCount
                      value sym:  CANON84!!66:bv256
                    # local storage change 140132931
                [Load, 244824200] Load from Ao.elementCount ↪ 0xee8
                [Return, 1749224193] Return
            [CVLExpInstance, 84504886] Ghost read: ghostElementCount ↪ 0xee8
            [External, 182985483] Ao.elementCount()
                    # snippet WithLocSym 2036021758 ;
                       loc sym:  R69:bv256
                     value sym:  R272:bv256
                [Load, 965253414] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 1231263253] Evaluate branch condition
                    # snippet LoadSnippet 140132932 ;
                     disp. path:  elementCount
                      value sym:  CANON84!!66:bv256
                    # local storage change 140132932
                [Load, 128835278] Load from Ao.elementCount ↪ 0xee8
                [Return, 1284920651] Return
            [CVLExpInstance, 824878166] Ghost read: ghostElementCount ↪ 0xee8
            [External, 1689014104] A.elementCount()
                    # snippet WithLocSym -683508085 ;
                       loc sym:  R82:bv256
                     value sym:  R281:bv256
                [Load, 228505261] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 1943832152] Evaluate branch condition
                [LabelInstance, 397448289] Apply hook load val := A.elementCount
                    [LabelInstance, 291557184] With parameters:
                        [LabelInstance, 1773352991] val = ?
                    [CVLExpInstance, 2127203639] Ghost read: ghostElementCount ↪ 0xee8
                    # snippet LoadSnippet -1372885378 ;
                     disp. path:  elementCount
                      value sym:  CANON77!!64:bv256
                    # local storage change -1372885378
                [Load, 1833569555] Load from A.elementCount ↪ 0xee8
                [Return, 2051523893] Return
            [External, 172255650] A.lastAdded()
                    # snippet WithLocSym -682614355 ;
                       loc sym:  R82:bv256
                     value sym:  R290:bv256
                [Load, 550366952] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 491933047] Evaluate branch condition
                    # snippet LoadSnippet 2144895161 ;
                     disp. path:  lastAdded
                      value sym:  CANON104!!29:bv256
                    # local storage change 2144895161
                [Load, 1509444997] Load from A.lastAdded ↪ 0
                [Return, 1884825185] Return
            [External, 1059929132] Ao.lastAdded()
                    # snippet WithLocSym 2038047546 ;
                       loc sym:  R69:bv256
                     value sym:  R298:bv256
                [Load, 815523659] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 722735288] Evaluate branch condition
                    # snippet LoadSnippet 110310269 ;
                     disp. path:  lastAdded
                      value sym:  CANON108!!30:bv256
                    # local storage change 110310269
                [Load, 449728661] Load from Ao.lastAdded ↪ 0
                [Return, 1289016252] Return
            [External, 597345490] A.lastRemoved()
                    # snippet WithLocSym -662118147 ;
                       loc sym:  R82:bv256
                     value sym:  R306:bv256
                [Load, 679514569] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 1075979956] Evaluate branch condition
                    # snippet LoadSnippet 108011055 ;
                     disp. path:  lastRemoved
                      value sym:  CANON114!!31:bv256
                    # local storage change 108011055
                [Load, 713114687] Load from A.lastRemoved ↪ 0
                [Return, 1598597609] Return
            [External, 1936356624] Ao.lastRemoved()
                    # snippet WithLocSym 2059169365 ;
                       loc sym:  R69:bv256
                     value sym:  R314:bv256
                [Load, 581757519] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 36496025] Evaluate branch condition
                    # snippet LoadSnippet 910685342 ;
                     disp. path:  lastRemoved
                      value sym:  CANON118!!32:bv256
                    # local storage change 910685342
                [Load, 405869780] Load from Ao.lastRemoved ↪ 0
                [Return, 953364535] Return
            [External, 2112375792] A.operationCount()
                    # snippet WithLocSym -660390269 ;
                       loc sym:  R82:bv256
                     value sym:  R322:bv256
                [Load, 406148862] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 145909400] Evaluate branch condition
                    # snippet LoadSnippet -1381192051 ;
                     disp. path:  operationCount
                      value sym:  CANON124!!33:bv256
                    # local storage change -1381192051
                [Load, 700558641] Load from A.operationCount ↪ 0
                [Return, 373933106] Return
            [External, 620360355] Ao.operationCount()
                    # snippet WithLocSym 2060897243 ;
                       loc sym:  R69:bv256
                     value sym:  R330:bv256
                [Load, 1063568898] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 459824378] Evaluate branch condition
                    # snippet LoadSnippet -578517764 ;
                     disp. path:  operationCount
                      value sym:  CANON128!!34:bv256
                    # local storage change -578517764
                [Load, 1138254833] Load from Ao.operationCount ↪ 0
                [Return, 685768131] Return
            [CVLExpInstance, 823290380] Ghost read: ghostArrayLength ↪ 0xee8
            [CVLExpInstance, 1757704024] Ghost read: ghostElementCount ↪ 0xee8
        [LabelInstance, 1745047130] A.f(eA, args)
            [External, 72133975] A.addValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@14:bv256)])
                [TransferInstance, 1497041126] sender: 0x70b8; receiver: A (0x49a8); transferred amount: 0
                    # snippet WithLocSym -715771738 ;
                       loc sym:  R82:bv256
                     value sym:  R143:bv256
                [Load, 1703881285] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 1451957875] Evaluate branch condition
                [Start, 408126341] Evaluate branch condition
                [LabelInstance, 430888017] Apply hook load len := A.values.length
                    [LabelInstance, 99551267] With parameters:
                        [LabelInstance, 186246763] len = ?
                    [CVLExpInstance, 257032998] Ghost read: ghostArrayLength ↪ 0xee8
                    # snippet LoadSnippet 912870741 ;
                     disp. path:  values
                      value sym:  CANON188!!42:bv256
                    # local storage change 912870741
                [Load, 1613845185] Load from A.values ↪ 0xee8
                [LocalAssignmentInstance, 445368553] index  ↪  0xee8
                [LabelInstance, 429029496] Apply hook load len := A.values.length
                    [LabelInstance, 1771480620] With parameters:
                        [LabelInstance, 1982719334] len = ?
                    [CVLExpInstance, 841328586] Ghost read: ghostArrayLength ↪ 0xee8
                    # snippet LoadSnippet -1551370789 ;
                     disp. path:  values
                      value sym:  CANON188!!42:bv256
                    # local storage change -1551370789
                [Load, 956192846] Load from A.values ↪ 0xee8
                [LabelInstance, 1686453947] Apply hook store A.values.length := newLen (old: oldLen)
                    [LabelInstance, 2107306392] With parameters:
                        [LabelInstance, 1646133782] newLen = 0xee9
                        [LabelInstance, 686299699] oldLen = 0xee8
                    [CVLExpInstance, 1700108659] Ghost assignment: ghostArrayLength = 0xee9
                    # snippet StoreSnippet 1465048761 ;
                     disp. path:  values
                      value sym:  R149:bv256
                    # local storage change 1465048761
                [Store, 2087927520] Store at A.values ↪ 0xee9
                [LabelInstance, 2123098412] Apply hook store A.values[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 187888907] With parameters:
                        [LabelInstance, 457174604] k = 0xee8
                        [LabelInstance, 2128496629] newValue = 0x2
                        [LabelInstance, 1606226827] oldValue = 0x0
                    [CVLExpInstance, 1127952346] Ghost assignment: ghostAValues[0xee8] = 2
                    # snippet StoreSnippet 1449753241 ;
                     disp. path:  values[i = CANON188!!42:bv256]
                      value sym:  R347:bv256
                    # local storage change 1449753241
                [Store, 655549567] Store at A.values[0xee8] ↪ 2
                    # snippet LoadSnippet -486930610 ;
                     disp. path:  totalSum
                      value sym:  CANON68!!62:bv256
                    # local storage change -486930610
                [Load, 738193031] Load from A.totalSum ↪ 0
                [Start, 476676408] Evaluate branch condition
                    # snippet StoreSnippet -1282546178 ;
                     disp. path:  totalSum
                      value sym:  R160:bv256
                    # local storage change -1282546178
                [Store, 112601232] Store at A.totalSum ↪ 2
                [LabelInstance, 909575461] Apply hook load val := A.elementCount
                    [LabelInstance, 1651003058] With parameters:
                        [LabelInstance, 853042054] val = ?
                    [CVLExpInstance, 94187493] Ghost read: ghostElementCount ↪ 0xee8
                    # snippet LoadSnippet 458312990 ;
                     disp. path:  elementCount
                      value sym:  CANON77!!64:bv256
                    # local storage change 458312990
                [Load, 193797214] Load from A.elementCount ↪ 0xee8
                [Start, 733011523] Evaluate branch condition
                [LabelInstance, 1510296800] Apply hook store A.elementCount := newVal (old: oldVal)
                    [LabelInstance, 906732098] With parameters:
                        [LabelInstance, 1426536241] newVal = 0xee9
                        [LabelInstance, 2028513556] oldVal = 0xee8
                    [CVLExpInstance, 150636709] Ghost assignment: ghostElementCount = 0xee9
                    # snippet StoreSnippet -702736950 ;
                     disp. path:  elementCount
                      value sym:  R164:bv256
                    # local storage change -702736950
                [Store, 1661477450] Store at A.elementCount ↪ 0xee9
                    # snippet StoreSnippet -1587978544 ;
                     disp. path:  lastAdded
                      value sym:  R347:bv256
                    # local storage change -1587978544
                [Store, 257572773] Store at A.lastAdded ↪ 2
                    # snippet LoadSnippet 449975560 ;
                     disp. path:  operationCount
                      value sym:  CANON124!!33:bv256
                    # local storage change 449975560
                [Load, 851941203] Load from A.operationCount ↪ 0
                [Start, 1856278030] Evaluate branch condition
                    # snippet StoreSnippet 1122767292 ;
                     disp. path:  operationCount
                      value sym:  R170:bv256
                    # local storage change 1122767292
                [Store, 1276967906] Store at A.operationCount ↪ 1
                [Return, 308626131] Return
        [LabelInstance, 471212739] Ao.g(eAo, args)
            [External, 1443371953] Ao.addValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@15:bv256)])
                [TransferInstance, 2103458169] sender: 0x70b8; receiver: Ao (0x49a9); transferred amount: 0
                    # snippet WithLocSym 2008375710 ;
                       loc sym:  R69:bv256
                     value sym:  R184:bv256
                [Load, 1168871388] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 1753660816] Evaluate branch condition
                [Start, 2118514338] Evaluate branch condition
                [LabelInstance, 34776034] Apply hook load val := Ao.nextIndex
                    [LabelInstance, 467536147] With parameters:
                        [LabelInstance, 1189694917] val = ?
                    [CVLExpInstance, 390611804] Ghost read: ghostNextIndex ↪ 0x3f9c
                    # snippet LoadSnippet -700046391 ;
                     disp. path:  nextIndex
                      value sym:  CANON228!!44:bv256
                    # local storage change -700046391
                [Load, 5435364] Load from Ao.nextIndex ↪ 0x3f9c
                [LocalAssignmentInstance, 1806694508] index  ↪  0x3f9c
                [LabelInstance, 1738803129] Apply hook store Ao.values[KEY uint256 j] := newValue (old: oldValue)
                    [LabelInstance, 841218738] With parameters:
                        [LabelInstance, 622399197] j = 0x3f9c
                        [LabelInstance, 836890250] newValue = 0x2
                        [LabelInstance, 1983889088] oldValue = 0x0
                    [CVLExpInstance, 1533291743] Ghost assignment: ghostAoValues[0x3f9c] = 2
                    # snippet StoreSnippet 344003770 ;
                     disp. path:  values[k = CANON228!!44:bv256]
                      value sym:  R353:bv256
                    # local storage change 344003770
                [Store, 912703112] Store at Ao.values[0x3f9c] ↪ 2
                [LabelInstance, 147686256] Apply hook store Ao.exists[KEY uint256 j] := newExists (old: oldExists)
                    [LabelInstance, 59761943] With parameters:
                        [LabelInstance, 2037855085] j = 0x3f9c
                        [LabelInstance, 2053521461] newExists = 0x1
                        [LabelInstance, 508860938] oldExists = 0x1
                    [CVLExpInstance, 1653568394] Ghost assignment: ghostExists[0x3f9c] = true
                    [CVLIf, 1228421706] if (!(oldExists) && newExists)
                        [CVLBranch, 1843626130] ELSE branch
                    [CVLIf, 147391150] if (oldExists && !(newExists))
                        [CVLBranch, 1328138960] ELSE branch
                    # snippet StoreSnippet 32356163 ;
                     disp. path:  exists[k = CANON228!!44:bv256]
                      value sym:  0x1
                    # local storage change 32356163
                [Store, 427998414] Store at Ao.exists[0x3f9c] ↪ true
                [LabelInstance, 1746159740] Apply hook load val := Ao.nextIndex
                    [LabelInstance, 671673250] With parameters:
                        [LabelInstance, 695651129] val = ?
                    [CVLExpInstance, 622753301] Ghost read: ghostNextIndex ↪ 0x3f9c
                    # snippet LoadSnippet 1130740754 ;
                     disp. path:  nextIndex
                      value sym:  CANON228!!44:bv256
                    # local storage change 1130740754
                [Load, 1870896482] Load from Ao.nextIndex ↪ 0x3f9c
                [Start, 3751627] Evaluate branch condition
                [LabelInstance, 520684278] Apply hook store Ao.nextIndex := newVal (old: oldVal)
                    [LabelInstance, 1240555996] With parameters:
                        [LabelInstance, 988454157] newVal = 0x3f9d
                        [LabelInstance, 1936466941] oldVal = 0x3f9c
                    [CVLExpInstance, 614830548] Ghost assignment: ghostNextIndex = 0x3f9d
                    # snippet StoreSnippet 1935631536 ;
                     disp. path:  nextIndex
                      value sym:  R364:bv256
                    # local storage change 1935631536
                [Store, 1712909085] Store at Ao.nextIndex ↪ 0x3f9d
                    # snippet LoadSnippet 1234532305 ;
                     disp. path:  totalSum
                      value sym:  CANON72!!63:bv256
                    # local storage change 1234532305
                [Load, 150212646] Load from Ao.totalSum ↪ 0
                [Start, 437631246] Evaluate branch condition
                    # snippet StoreSnippet -2020742198 ;
                     disp. path:  totalSum
                      value sym:  R369:bv256
                    # local storage change -2020742198
                [Store, 305569961] Store at Ao.totalSum ↪ 2
                    # snippet LoadSnippet 1971392805 ;
                     disp. path:  elementCount
                      value sym:  CANON84!!66:bv256
                    # local storage change 1971392805
                [Load, 869786097] Load from Ao.elementCount ↪ 0xee8
                [Start, 462070413] Evaluate branch condition
                    # snippet StoreSnippet -868349950 ;
                     disp. path:  elementCount
                      value sym:  R372:bv256
                    # local storage change -868349950
                [Store, 752919867] Store at Ao.elementCount ↪ 0xee9
                    # snippet StoreSnippet -1001503220 ;
                     disp. path:  lastAdded
                      value sym:  R353:bv256
                    # local storage change -1001503220
                [Store, 192183270] Store at Ao.lastAdded ↪ 2
                    # snippet LoadSnippet 1252711350 ;
                     disp. path:  operationCount
                      value sym:  CANON128!!34:bv256
                    # local storage change 1252711350
                [Load, 127982352] Load from Ao.operationCount ↪ 0
                [Start, 1240506275] Evaluate branch condition
                    # snippet StoreSnippet 298683819 ;
                     disp. path:  operationCount
                      value sym:  R376:bv256
                    # local storage change 298683819
                [Store, 1611670235] Store at Ao.operationCount ↪ 1
                [Return, 1217646196] Return
        [LabelInstance, 1231741997] assert A.totalSum() == Ao.totalSum() && A.elementCount() == Ao.elementCount() && ghostElementCount == to_mathint(Ao.elementCount()) && ghostElementCount == to_mathint(A.elementCount()) && A.lastAdded() == Ao.lastAdded() && A.lastRemoved() == Ao.lastRemoved() && A.operationCount() == Ao.operationCount() && ghostArrayLength == ghostElementCount && (forall uint256 k. to_mathint(k) < ghostElementCount => ghostExists[compactToSparse[k]] && ghostAValues[k] == ghostAoValues[compactToSparse[k]]) && (forall uint256 k1. (forall uint256 k2. to_mathint(k1) < ghostElementCount && to_mathint(k2) < ghostElementCount && k1 != k2 => compactToSparse[k1] != compactToSparse[k2])) && (forall uint256 k. to_mathint(k) < ghostElementCount => sparseToCompact[compactToSparse[k]] == k) && (forall uint256 j. to_mathint(j) < ghostNextIndex && ghostExists[j] => to_mathint(sparseToCompact[j]) < ghostElementCount && compactToSparse[sparseToCompact[j]] == j) && (forall uint256 j. to_mathint(j) < ghostNextIndex && !(ghostExists[j]) => sparseToCompact[j] == 0 || to_mathint(sparseToCompact[j]) >= ghostElementCount)
            [External, 78280484] A.totalSum()
                    # snippet WithLocSym -654819352 ;
                       loc sym:  R82:bv256
                     value sym:  R383:bv256
                [Load, 1699580816] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 863705379] Evaluate branch condition
                    # snippet LoadSnippet -1104721685 ;
                     disp. path:  totalSum
                      value sym:  R160:bv256
                    # local storage change -1104721685
                [Load, 766433517] Load from A.totalSum ↪ 2
                [Return, 2062190891] Return
            [External, 1936887021] Ao.totalSum()
                    # snippet WithLocSym 2066468160 ;
                       loc sym:  R69:bv256
                     value sym:  R391:bv256
                [Load, 405483937] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 1134164985] Evaluate branch condition
                    # snippet LoadSnippet 1780943968 ;
                     disp. path:  totalSum
                      value sym:  R369:bv256
                    # local storage change 1780943968
                [Load, 1838449008] Load from Ao.totalSum ↪ 2
                [Return, 174484939] Return
            [External, 1258418975] A.elementCount()
                    # snippet WithLocSym -653717085 ;
                       loc sym:  R82:bv256
                     value sym:  R399:bv256
                [Load, 1204527029] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 236783933] Evaluate branch condition
                [LabelInstance, 925644032] Apply hook load val := A.elementCount
                    [LabelInstance, 1936826865] With parameters:
                        [LabelInstance, 1750908445] val = ?
                    [CVLExpInstance, 250484426] Ghost read: ghostElementCount ↪ 0xee9
                    # snippet LoadSnippet -535676418 ;
                     disp. path:  elementCount
                      value sym:  CANON77!!166:bv256
                    # local storage change -535676418
                [Load, 1480369698] Load from A.elementCount ↪ 0xee9
                [Return, 641530621] Return
            [External, 731710577] Ao.elementCount()
                    # snippet WithLocSym 2086994159 ;
                       loc sym:  R69:bv256
                     value sym:  R408:bv256
                [Load, 1438326670] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 1745596077] Evaluate branch condition
                    # snippet LoadSnippet 1352038826 ;
                     disp. path:  elementCount
                      value sym:  CANON84!!373:bv256
                    # local storage change 1352038826
                [Load, 690047555] Load from Ao.elementCount ↪ 0xee9
                [Return, 1784446362] Return
            [CVLExpInstance, 1737902128] Ghost read: ghostElementCount ↪ 0xee9
            [External, 1381891241] Ao.elementCount()
                    # snippet WithLocSym 2087917680 ;
                       loc sym:  R69:bv256
                     value sym:  R418:bv256
                [Load, 1896728563] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 2025112805] Evaluate branch condition
                    # snippet LoadSnippet 1352038827 ;
                     disp. path:  elementCount
                      value sym:  CANON84!!373:bv256
                    # local storage change 1352038827
                [Load, 766952459] Load from Ao.elementCount ↪ 0xee9
                [Return, 271830432] Return
            [CVLExpInstance, 262054410] Ghost read: ghostElementCount ↪ 0xee9
            [External, 1364446448] A.elementCount()
                    # snippet WithLocSym -631582372 ;
                       loc sym:  R82:bv256
                     value sym:  R428:bv256
                [Load, 1247730765] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 1150174827] Evaluate branch condition
                [LabelInstance, 1048191490] Apply hook load val := A.elementCount
                    [LabelInstance, 1895910769] With parameters:
                        [LabelInstance, 1291934632] val = ?
                    [CVLExpInstance, 2064314749] Ghost read: ghostElementCount ↪ 0xee9
                    # snippet LoadSnippet -535676415 ;
                     disp. path:  elementCount
                      value sym:  CANON77!!166:bv256
                    # local storage change -535676415
                [Load, 336573996] Load from A.elementCount ↪ 0xee9
                [Return, 1872628505] Return
            [External, 671465817] A.lastAdded()
                    # snippet WithLocSym -630658851 ;
                       loc sym:  R82:bv256
                     value sym:  R438:bv256
                [Load, 69753917] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 1837048898] Evaluate branch condition
                    # snippet LoadSnippet -1983190402 ;
                     disp. path:  lastAdded
                      value sym:  R347:bv256
                    # local storage change -1983190402
                [Load, 1915104311] Load from A.lastAdded ↪ 2
                [Return, 1949250595] Return
            [External, 840980271] Ao.lastAdded()
                    # snippet WithLocSym 2090628661 ;
                       loc sym:  R69:bv256
                     value sym:  R446:bv256
                [Load, 652818461] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 1701707619] Evaluate branch condition
                    # snippet LoadSnippet -982386045 ;
                     disp. path:  lastAdded
                      value sym:  R353:bv256
                    # local storage change -982386045
                [Load, 1752060353] Load from Ao.lastAdded ↪ 2
                [Return, 1489500876] Return
            [External, 922818585] A.lastRemoved()
                    # snippet WithLocSym -628901182 ;
                       loc sym:  R82:bv256
                     value sym:  R455:bv256
                [Load, 1033727869] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 669503830] Evaluate branch condition
                    # snippet LoadSnippet 108011069 ;
                     disp. path:  lastRemoved
                      value sym:  CANON114!!31:bv256
                    # local storage change 108011069
                [Load, 1074876156] Load from A.lastRemoved ↪ 0
                [Return, 2146391863] Return
            [External, 702495024] Ao.lastRemoved()
                    # snippet WithLocSym 2092386330 ;
                       loc sym:  R69:bv256
                     value sym:  R463:bv256
                [Load, 808132668] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 2055728747] Evaluate branch condition
                    # snippet LoadSnippet 910685356 ;
                     disp. path:  lastRemoved
                      value sym:  CANON118!!32:bv256
                    # local storage change 910685356
                [Load, 2144618723] Load from Ao.lastRemoved ↪ 0
                [Return, 798161040] Return
            [External, 1188104094] A.operationCount()
                    # snippet WithLocSym -627143513 ;
                       loc sym:  R82:bv256
                     value sym:  R472:bv256
                [Load, 65035673] Load from A.[raw storage address] A (0x49a8) ↪ 1
                [Start, 1580113494] Evaluate branch condition
                    # snippet LoadSnippet 1833147518 ;
                     disp. path:  operationCount
                      value sym:  CANON124!!171:bv256
                    # local storage change 1833147518
                [Load, 1715518331] Load from A.operationCount ↪ 1
                [Return, 686009818] Return
            [External, 703476170] Ao.operationCount()
                    # snippet WithLocSym 2094143999 ;
                       loc sym:  R69:bv256
                     value sym:  R480:bv256
                [Load, 51955343] Load from Ao.[raw storage address] Ao (0x49a9) ↪ 1
                [Start, 1625308916] Evaluate branch condition
                    # snippet LoadSnippet -1722334292 ;
                     disp. path:  operationCount
                      value sym:  CANON128!!377:bv256
                    # local storage change -1722334292
                [Load, 1431880271] Load from Ao.operationCount ↪ 1
                [Return, 224446799] Return
            [CVLExpInstance, 1216961234] Ghost read: ghostArrayLength ↪ 0xee9
            [CVLExpInstance, 704629417] Ghost read: ghostElementCount ↪ 0xee9
            [StorageTitleInstance, 975581027] Global State
                [StorageTitleInstance, 822588377] Storage State
                    [StorageTitleInstance, 869933281] A
                        [StorageStateValueInstance, 1680285361] elementCount: 0xee9 (changed)
                        [StorageStateValueInstance, 1869703265] lastAdded: 2 (changed)
                        [StorageStateValueInstance, 1675925293] lastRemoved: 0
                        [StorageStateValueInstance, 22773400] operationCount: 1 (changed)
                        [StorageStateValueInstance, 1565862548] totalSum: 2 (changed)
                        [StorageStateValueInstance, 956527423] values: 0xee9 (changed)
                        [StorageStateValueInstance, 2124011213] values[0xee8]: 2 (changed)
                    [StorageTitleInstance, 611113016] Ao
                        [StorageStateValueInstance, 1352222635] elementCount: 0xee9 (changed)
                        [StorageStateValueInstance, 1914788876] exists[0x3f9c]: true (changed)
                        [StorageStateValueInstance, 1111409467] lastAdded: 2 (changed)
                        [StorageStateValueInstance, 5340764] lastRemoved: 0
                        [StorageStateValueInstance, 443536866] nextIndex: 0x3f9d (changed)
                        [StorageStateValueInstance, 1658203039] operationCount: 1 (changed)
                        [StorageStateValueInstance, 1447369701] totalSum: 2 (changed)
                        [StorageStateValueInstance, 1575828719] values[0x3f9c]: 2 (changed)
                [StorageTitleInstance, 961094261] Balances
                    [BalanceValueInstance, 1779461136] 0x70b8.balance: 449
                    [BalanceValueInstance, 343197828] A (0x49a8).balance: 0x8ea
                    [BalanceValueInstance, 550147233] Ao (0x49a9).balance: 609
                [StorageTitleInstance, 1348485191] Ghosts State
                    [GhostValueInstance, 972670647] ghostAValues[0xee8]: 2 (changed)
                    [GhostValueInstance, 201005540] ghostAoValues[0x3f9c]: 2 (changed)
                    [GhostValueInstance, 2145446822] ghostArrayLength: 0xee9 (changed)
                    [GhostValueInstance, 760282725] ghostElementCount: 0xee9 (changed)
                    [GhostValueInstance, 1516984582] ghostExists[0x3f9c]: true (changed)
                    [GhostValueInstance, 160194454] ghostNextIndex: 0x3f9d (changed)
            -------- CVL model begin ------------
            -- type: bool --
            CANON11!!127                                  ~~> false
               cvl                 : true
               cvl.display         : g.isView
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON11!!216                                  ~~> false
               cvl                 : true
               cvl.display         : g.isView
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON300!!468                                 ~~>  true
               cvl                 : true
            CANON313!!490                                 ~~>  true
               cvl                 : true
            CANON326!!498                                 ~~> false
               cvl                 : true
            CANON4!!120                                   ~~> false
               cvl                 : true
               cvl.display         : f.isView
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON4!!208                                   ~~> false
               cvl                 : true
               cvl.display         : f.isView
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON12!!128                                  ~~> false
               cvl                 : true
               cvl.display         : g.isPayable
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON12!!217                                  ~~> false
               cvl                 : true
               cvl.display         : g.isPayable
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON270!!413                                 ~~>  true
               cvl                 : true
            CANON5!!121                                   ~~> false
               cvl                 : true
               cvl.display         : f.isPayable
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON5!!209                                   ~~> false
               cvl                 : true
               cvl.display         : f.isPayable
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON246!!204                                 ~~> false
               cvl                 : true
            CANON100                                      ~~>  true
               cvl                 : true
            CANON101                                      ~~>  true
               cvl                 : true
            CANON110                                      ~~>  true
               cvl                 : true
            CANON111                                      ~~>  true
               cvl                 : true
            CANON120                                      ~~>  true
               cvl                 : true
            CANON121                                      ~~>  true
               cvl                 : true
            CANON130                                      ~~>  true
               cvl                 : true
            CANON131                                      ~~>  true
               cvl                 : true
            CANON135                                      ~~>  true
               cvl                 : true
            CANON136                                      ~~>  true
               cvl                 : true
            CANON143                                      ~~>  true
               cvl                 : true
            CANON147                                      ~~>  true
               cvl                 : true
            CANON151                                      ~~>  true
               cvl                 : true
            CANON155                                      ~~>  true
               cvl                 : true
            CANON158                                      ~~>  true
               cvl                 : true
            CANON190                                      ~~>  true
               cvl                 : true
            CANON192                                      ~~>  true
               cvl                 : true
            CANON199                                      ~~>  true
               cvl                 : true
            CANON230                                      ~~>  true
               cvl                 : true
            CANON248                                      ~~> false
               cvl                 : true
            CANON253                                      ~~>  true
               cvl                 : true
            CANON265                                      ~~>  true
               cvl                 : true
            CANON282                                      ~~>  true
               cvl                 : true
            CANON13!!130                                  ~~> false
               cvl                 : true
               cvl.display         : g.isFallback
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON13!!219                                  ~~> false
               cvl                 : true
               cvl.display         : g.isFallback
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON323!!496                                 ~~>  true
               cvl                 : true
            CANON250!!361                                 ~~> false
               cvl                 : true
            CANON6!!123                                   ~~> false
               cvl                 : true
               cvl.display         : f.isFallback
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON6!!211                                   ~~> false
               cvl                 : true
               cvl.display         : f.isFallback
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON292!!451                                 ~~>  true
               cvl                 : true
            CANON284!!434                                 ~~>  true
               cvl                 : true
            CANON276!!423                                 ~~>  true
               cvl                 : true
            CANON48                                       ~~>  true
               cvl                 : true
            CANON51                                       ~~>  true
               cvl                 : true
            CANON58                                       ~~>  true
               cvl                 : true
            CANON63                                       ~~>  true
               cvl                 : true
            CANON74                                       ~~>  true
               cvl                 : true
            CANON80                                       ~~>  true
               cvl                 : true
            CANON86                                       ~~>  true
               cvl                 : true
            CANON87                                       ~~>  true
               cvl                 : true
            CANON92                                       ~~>  true
               cvl                 : true
            CANON93                                       ~~>  true
               cvl                 : true
            CANON98                                       ~~>  true
               cvl                 : true
            CANON316!!492                                 ~~>  true
               cvl                 : true
            CANON308!!485                                 ~~>  true
               cvl                 : true
            CANON329!!500                                 ~~> false
               cvl                 : true
            CANON10!!126                                  ~~> false
               cvl                 : true
               cvl.display         : g.isPure
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON10!!215                                  ~~> false
               cvl                 : true
               cvl.display         : g.isPure
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON320!!494                                 ~~>  true
               cvl                 : true
            CANON312!!489                                 ~~>  true
               cvl                 : true
            CANON309!!486                                 ~~>  true
               cvl                 : true
            CANON3!!119                                   ~~> false
               cvl                 : true
               cvl.display         : f.isPure
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON3!!207                                   ~~> false
               cvl                 : true
               cvl.display         : f.isPure
               cvl.type            : bool
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON244!!203                                 ~~> false
               cvl                 : true
            -- type: int --
            CANON!!109                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : f.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON!!118                                    ~~>                                                         0x5b9af12b
               cvl                 : true
               cvl.display         : f.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON!!206                                    ~~>                                                         0x5b9af12b
               cvl                 : true
               cvl.display         : f.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON9!!131                                   ~~>                                                             0x49a9
               cvl                 : true
               cvl.display         : g
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON9!!220                                   ~~>                                                             0x49a9
               cvl                 : true
               cvl.display         : g.contract
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON1!!73                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : f.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON2!!74                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : f.contract
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON7!!79                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : g.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON8!!80                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : g.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON9!!81                                    ~~>                                                                0x0
               cvl                 : true
               cvl.display         : g.contract
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON152!!367                                 ~~>                                                             0x3f9d
               cvl                 : true
               cvl.display         : ghostNextIndex
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON331                                      ~~>                                                              0xee7
               cvl                 : true
               cvl.display         : arrayPos
               cvl.type            : uint256
            CANON334                                      ~~>                                                                0x0
               cvl                 : true
               cvl.display         : sparseToCompact
               cvl.type            : uint256
            CANON1!!122                                   ~~>                                                                0x1
               cvl                 : true
               cvl.display         : f.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON1!!210                                   ~~>                                                                0x1
               cvl                 : true
               cvl.display         : f.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON132!!152                                 ~~>                                                              0xee9
               cvl                 : true
               cvl.display         : ghostArrayLength
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON132!!35                                  ~~>                                                              0xee8
               cvl                 : true
               cvl.display         : ghostArrayLength
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON24                                       ~~>                                                             0x70b8
               cvl                 : true
               cvl.display         : eA.msg.sender
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON25                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.msg.value
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON26                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.tx.origin
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON27                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.basefee
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON28                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.blobbasefee
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON29                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.coinbase
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON30                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.difficulty
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON31                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.gaslimit
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON32                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.number
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON33                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eA.block.timestamp
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
               cvl.def.site        : Function(range=mappingarray.spec:161:5)
            CANON34                                       ~~>                                                             0x70b8
               cvl                 : true
               cvl.display         : eAo.msg.sender
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON35                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.msg.value
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON36                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.tx.origin
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON37                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.basefee
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON38                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.blobbasefee
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON39                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.coinbase
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON40                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.difficulty
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON41                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.gaslimit
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON42                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.number
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON43                                       ~~>                                                                0x0
               cvl                 : true
               cvl.display         : eAo.block.timestamp
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
               cvl.def.site        : Function(range=mappingarray.spec:162:5)
            CANON2!!124                                   ~~>                                                             0x49a8
               cvl                 : true
               cvl.display         : f
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON2!!212                                   ~~>                                                             0x49a8
               cvl                 : true
               cvl.display         : f.contract
               cvl.type            : address
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
               cvl.def.site        : Rule(range=mappingarray.spec:182:40)
            CANON7!!125                                   ~~>                                                         0x5b9af12b
               cvl                 : true
               cvl.display         : g.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON7!!214                                   ~~>                                                         0x5b9af12b
               cvl                 : true
               cvl.display         : g.selector
               cvl.type            : uint32
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON78!!65                                   ~~>                                                              0xee8
               cvl                 : true
               cvl.display         : ghostElementCount
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON78!!167                                  ~~>                                                              0xee9
               cvl                 : true
               cvl.display         : ghostElementCount
               cvl.ghost           : NoValue
               cvl.type            : mathint
            CANON8!!129                                   ~~>                                                                0x1
               cvl                 : true
               cvl.display         : g.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON8!!218                                   ~~>                                                                0x1
               cvl                 : true
               cvl.display         : g.numberOfArguments
               cvl.type            : uint256
               cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
               cvl.def.site        : Rule(range=mappingarray.spec:182:50)
            CANON152!!41                                  ~~>                                                             0x3f9c
               cvl                 : true
               cvl.display         : ghostNextIndex
               cvl.ghost           : NoValue
               cvl.type            : mathint
            -- type: bv256 --
            CANON160                                      ~~>                                                               0x24
               cvl                 : true
               cvl.display         : args.length
               cvl.type            : uint256
               cvl.def.site        : Function(range=mappingarray.spec:163:5)
            -- type: bytemap --
            CANON163havocme27293                          ~~> {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    0x2
  )
}
               cvl                 : true
               cvl.display         : args
               cvl.type            : calldataarg
               cvl.def.site        : Function(range=mappingarray.spec:163:5)
            -------- CVL model end --------------
            -------- TAC model begin ------------
              ReachabilityCertora41_0_0_21_0_40:bool  -->                                                               true
              OK_45_0_0_23_0_44:bool  -->                                                              false
              ReachabilityCertora20_0_0_11_0_20:bool  -->                                                               true
              OK_4_0_0_3_0_4:bool  -->                                                              false
              ReachabilityCertora11_0_0_1_0_11:bool  -->                                                               true
              OK_24_0_0_13_0_24:bool  -->                                                              false
              sklm!certora__k1_29690!callId0!9:bv256  -->                                                              0xee8
              OK_5_0_0_1_0_5:bool  -->                                                              false
              CANON11!!127:bool  -->                                                              false
              CANON11!!216:bool  -->                                                              false
              OK_43_0_0_22_0_42:bool  -->                                                              false
              OK_22_0_0_12_0_22:bool  -->                                                              false
              CANON300!!468:bool  -->                                                               true
              tacCalldatabufCANON0@14:bv256  -->                                                                0x0
              tacCalldatabufCANON0@15:bv256  -->                                                                0x0
              tacCalldatabufCANON1@14:bv256  -->                                                                0x2
              tacCalldatabufCANON1@15:bv256  -->                                                                0x2
               CANON!!109:int  -->                                                                0x0
               CANON!!118:int  -->                                                         0x5b9af12b
               CANON!!206:int  -->                                                         0x5b9af12b
              OK_41_0_0_21_0_40:bool  -->                                                              false
              CANON84!!66:bv256  -->                                                              0xee8
              from_skey:ghostmap((uninterp) skey->bv256)  -->                                          {[x:bv256] ->
  x:bv256
}
              CANON313!!490:bool  -->                                                               true
              OK_20_0_0_11_0_20:bool  -->                                                              false
              OK_30_0_0_1_0_29:bool  -->                                                              false
              OK_6_0_0_4_0_6:bool  -->                                                              false
              ReachabilityCertora29_0_0_15_0_0:bool  -->                                                               true
              OK_7_0_0_1_0_7:bool  -->                                                              false
              tacM0x40!!0:bv256  -->                                                                0x0
              tacM0x40!!1:bv256  -->                                                                0x0
              tacM0x40!!2:bv256  -->                                                                0x0
              tacM0x40!!3:bv256  -->                                                                0x0
              tacM0x40!!4:bv256  -->                                                                0x0
              tacM0x40!!5:bv256  -->                                                                0x0
              tacM0x40!!6:bv256  -->                                                                0x0
              tacM0x40!!7:bv256  -->                                                                0x0
              tacM0x40!!8:bv256  -->                                                                0x0
              tacM0x40!!9:bv256  -->                                                                0x0
              CANON326!!498:bool  -->                                                              false
              tacM0x40!!10:bv256  -->                                                                0x0
              tacM0x40!!11:bv256  -->                                                                0x0
              tacM0x40!!12:bv256  -->                                                                0x0
              tacM0x40!!13:bv256  -->                                                                0x0
              tacM0x40!!14:bv256  -->                                                                0x0
              tacM0x40!!15:bv256  -->                                                                0x0
              tacM0x40!!16:bv256  -->                                                                0x0
              tacM0x40!!17:bv256  -->                                                                0x0
              tacM0x40!!18:bv256  -->                                                                0x0
              tacM0x40!!19:bv256  -->                                                                0x0
              tacM0x40!!20:bv256  -->                                                                0x0
              tacM0x40!!21:bv256  -->                                                                0x0
              tacM0x40!!22:bv256  -->                                                                0x0
              tacM0x40!!23:bv256  -->                                                                0x0
              tacM0x40!!24:bv256  -->                                                                0x0
              tacM0x40!!25:bv256  -->                                                                0x0
              OK_13_0_0_1_0_13:bool  -->                                                              false
              ReachabilityCertora10_0_0_6_0_10:bool  -->                                                               true
              CANON4!!120:bool  -->                                                              false
              CANON4!!208:bool  -->                                                              false
              OK_21_0_0_1_0_21:bool  -->                                                              false
              OK_8_0_0_5_0_8:bool  -->                                                              false
              OK_9_0_0_1_0_9:bool  -->                                                              false
              ReachabilityCertora28_0_0_15_0_0:bool  -->                                                               true
              CANON9!!131:int  -->                                                             0x49a9
              CANON9!!220:int  -->                                                             0x49a9
              CANON114!!31:bv256  -->                                                                0x0
              to_skey:ghostmap(bv256->(uninterp) skey)  -->                                          {[x:bv256] ->
  x:bv256
}
               CANON1!!73:int  -->                                                                0x0
               CANON2!!74:int  -->                                                                0x0
              CANON118!!32:bv256  -->                                                                0x0
              ReachabilityCertora48_0_0_1_0_47:bool  -->                                                               true
              ReachabilityCertora12_0_0_7_0_12:bool  -->                                                               true
              ReachabilityCertora37_0_0_19_0_36:bool  -->                                                               true
              sklm!certora__k2_39701!callId0!8:bv256  -->                                                              0xee4
               CANON7!!79:int  -->                                                                0x0
               CANON8!!80:int  -->                                                                0x0
              ReachabilityCertora27_0_0_15_0_0:bool  -->                                                              false
              ReachabilityCertora35_0_0_18_0_34:bool  -->                                                               true
               CANON9!!81:int  -->                                                                0x0
              CANON12!!128:bool  -->                                                              false
              CANON12!!217:bool  -->                                                              false
              ReachabilityCertora0_0_0_14_0_26:bool  -->                                                               true
              tacCalldatasize!!235:bv256  -->                                                                0x4
              tacCalldatasize!!243:bv256  -->                                                                0x4
              tacCalldatasize!!251:bv256  -->                                                                0x4
              tacCalldatasize!!260:bv256  -->                                                                0x4
              tacCalldatasize!!269:bv256  -->                                                                0x4
              tacCalldatasize!!278:bv256  -->                                                                0x4
              tacCalldatasize!!287:bv256  -->                                                                0x4
              tacCalldatasize!!295:bv256  -->                                                                0x4
              tacCalldatasize!!303:bv256  -->                                                                0x4
              tacCalldatasize!!311:bv256  -->                                                                0x4
              tacCalldatasize!!319:bv256  -->                                                                0x4
              tacCalldatasize!!327:bv256  -->                                                                0x4
              tacCalldatasize!!380:bv256  -->                                                                0x4
              tacCalldatasize!!388:bv256  -->                                                                0x4
              tacCalldatasize!!396:bv256  -->                                                                0x4
              tacCalldatasize!!405:bv256  -->                                                                0x4
              tacCalldatasize!!415:bv256  -->                                                                0x4
              tacCalldatasize!!425:bv256  -->                                                                0x4
              tacCalldatasize!!435:bv256  -->                                                                0x4
              tacCalldatasize!!443:bv256  -->                                                                0x4
              tacCalldatasize!!452:bv256  -->                                                                0x4
              tacCalldatasize!!460:bv256  -->                                                                0x4
              tacCalldatasize!!469:bv256  -->                                                                0x4
              tacCalldatasize!!477:bv256  -->                                                                0x4
              OK_11_0_0_1_0_11:bool  -->                                                              false
              ReachabilityCertora33_0_0_17_0_32:bool  -->                                                               true
              ReachabilityCertora0_0_0_0_0_0:bool  -->                                                               true
              OK_37_0_0_19_0_36:bool  -->                                                              false
              ReachabilityCertora14_0_0_8_0_14:bool  -->                                                               true
              ReachabilityCertora31_0_0_16_0_30:bool  -->                                                               true
              OK_35_0_0_18_0_34:bool  -->                                                              false
              ReachabilityCertora1_0_0_1_0_1:bool  -->                                                               true
              tacSighash!!100:bv256  -->                                                         0x67be4673
              tacSighash!!101:bv256  -->                                                         0x67be4673
              tacSighash!!102:bv256  -->                                                         0x67be4673
              tacSighash!!103:bv256  -->                                                         0x1a19aeef
              tacSighash!!104:bv256  -->                                                         0x1a19aeef
              tacSighash!!105:bv256  -->                                                          0x8390b8b
              tacSighash!!106:bv256  -->                                                          0x8390b8b
              tacSighash!!107:bv256  -->                                                         0x23d3c142
              tacSighash!!108:bv256  -->                                                         0x23d3c142
              ReachabilityCertora38_0_0_1_0_37:bool  -->                                                               true
              OK_29_0_0_15_0_0:bool  -->                                                              false
              CANON270!!413:bool  -->                                                               true
              OK_33_0_0_17_0_32:bool  -->                                                              false
              ReachabilityCertora46_0_0_1_0_45:bool  -->                                                               true
              ReachabilityCertora2_0_0_2_0_2:bool  -->                                                               true
              CANON5!!121:bool  -->                                                              false
              CANON5!!209:bool  -->                                                              false
              ReachabilityCertora16_0_0_9_0_16:bool  -->                                                               true
              CANON246!!204:bool  -->                                                              false
              CANON152!!367:int  -->                                                             0x3f9d
                CANON100:bool  -->                                                               true
                CANON101:bool  -->                                                               true
               CANON102:bv256  -->                                                                0x0
               CANON106:bv256  -->                                                                0x0
                CANON110:bool  -->                                                               true
                CANON111:bool  -->                                                               true
               CANON112:bv256  -->                                                                0x0
               CANON116:bv256  -->                                                                0x0
                CANON120:bool  -->                                                               true
                CANON121:bool  -->                                                               true
               CANON122:bv256  -->                                                                0x0
               CANON126:bv256  -->                                                                0x0
                CANON130:bool  -->                                                               true
                CANON131:bool  -->                                                               true
                CANON135:bool  -->                                                               true
                CANON136:bool  -->                                                               true
                CANON143:bool  -->                                                               true
                CANON147:bool  -->                                                               true
                CANON151:bool  -->                                                               true
                CANON155:bool  -->                                                               true
                CANON158:bool  -->                                                               true
               CANON160:bv256  -->                                                               0x24
               CANON165:bv256  -->                                                                0x0
                CANON190:bool  -->                                                               true
                CANON192:bool  -->                                                               true
                 CANON196:int  -->                                                                0x2
                CANON199:bool  -->                                                               true
               CANON205:bv256  -->                                                                0x0
                CANON230:bool  -->                                                               true
                 CANON235:int  -->                                                                0x2
                CANON241:bool  -->                                                               true
                CANON248:bool  -->                                                              false
                CANON253:bool  -->                                                               true
               CANON255:bv256  -->                                                                0x0
               CANON258:bv256  -->                                                                0x0
                CANON261:bool  -->                                                               true
               CANON262:bv256  -->                                                                0x0
                CANON265:bool  -->                                                               true
               CANON267:bv256  -->                                                                0x0
                CANON271:bool  -->                                                               true
               CANON273:bv256  -->                                                                0x0
                CANON277:bool  -->                                                               true
               CANON279:bv256  -->                                                                0x0
                CANON282:bool  -->                                                               true
                CANON285:bool  -->                                                               true
               CANON286:bv256  -->                                                                0x0
               CANON289:bv256  -->                                                                0x0
                CANON293:bool  -->                                                               true
               CANON294:bv256  -->                                                                0x0
               CANON297:bv256  -->                                                                0x0
                CANON301:bool  -->                                                               true
               CANON302:bv256  -->                                                                0x0
               CANON305:bv256  -->                                                                0x0
                 CANON331:int  -->                                                              0xee7
                 CANON332:int  -->                                                             0x3f9c
                 CANON334:int  -->                                                                0x0
              ReachabilityCertora54_0_0_1_0_53:bool  -->                                                               true
              OK_31_0_0_16_0_30:bool  -->                                                              false
              OK_10_0_0_6_0_10:bool  -->                                                              false
              ReachabilityCertora3_0_0_1_0_3:bool  -->                                                               true
              CANON128!!377:bv256  -->                                                                0x1
              ReachabilityCertora53_0_0_27_0_52:bool  -->                                                               true
              CANON124!!33:bv256  -->                                                                0x0
              ReachabilityCertora51_0_0_26_0_50:bool  -->                                                               true
              CANON128!!34:bv256  -->                                                                0x0
              ReachabilityCertora4_0_0_3_0_4:bool  -->                                                               true
              ReachabilityCertora5_0_0_1_0_5:bool  -->                                                               true
              OK_48_0_0_1_0_47:bool  -->                                                              false
              OK_12_0_0_7_0_12:bool  -->                                                              false
              OK_53_0_0_27_0_52:bool  -->                                                              false
              ReachabilityCertora36_0_0_1_0_35:bool  -->                                                               true
              CANON13!!130:bool  -->                                                              false
              CANON13!!219:bool  -->                                                              false
              ReachabilityCertora0_0_0_15_0_28:bool  -->                                                               true
              OK_51_0_0_26_0_50:bool  -->                                                              false
              ReachabilityCertora44_0_0_1_0_43:bool  -->                                                               true
              ReachabilityCertora6_0_0_4_0_6:bool  -->                                                               true
              OK_0_0_0_14_0_26:bool  -->                                                              false
              ReachabilityCertora7_0_0_1_0_7:bool  -->                                                               true
              ReachabilityCertora19_0_0_1_0_19:bool  -->                                                               true
              ReachabilityCertora52_0_0_1_0_51:bool  -->                                                               true
              CANON323!!496:bool  -->                                                               true
              tacCalldatabuf@2:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    0x4869f99d00000000000000000000000000000000000000000000000000000000
  )
}
              tacCalldatabuf@3:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    0x4869f99d00000000000000000000000000000000000000000000000000000000
  )
}
              tacCalldatabuf@4:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x67be467300000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@5:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x67be467300000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@6:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x67be467300000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@7:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x67be467300000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@8:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x1a19aeef00000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@9:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x1a19aeef00000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@10:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x8390b8b00000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@11:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x8390b8b00000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@12:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x23d3c14200000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@13:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x23d3c14200000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@14:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    0x2
    0x0
  )
}
              tacCalldatabuf@15:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    0x2
    0x0
  )
}
              tacCalldatabuf@16:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    0x4869f99d00000000000000000000000000000000000000000000000000000000
  )
}
              tacCalldatabuf@17:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    0x4869f99d00000000000000000000000000000000000000000000000000000000
  )
}
              tacCalldatabuf@18:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x67be467300000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@19:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x67be467300000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@20:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x67be467300000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@21:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x67be467300000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@22:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x1a19aeef00000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@23:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x1a19aeef00000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@24:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x8390b8b00000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@25:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x8390b8b00000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@26:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x23d3c14200000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              tacCalldatabuf@27:bytemap  --> {[arg0:bv256] ->
  Ite(
    0x4 <= arg0:bv256
    0x0
    Ite(
      arg0:bv256 == 0x0
      0x23d3c14200000000000000000000000000000000000000000000000000000000
      0x4869f99d00000000000000000000000000000000000000000000000000000000
    )
  )
}
              OK_14_0_0_8_0_14:bool  -->                                                              false
              CANON84!!373:bv256  -->                                                              0xee9
                    R26:bv256  -->                                                                0x1
                    R27:bv256  -->                                                                0x1
                    R69:bv256  -->                                                             0x49a9
                    R70:bv256  -->                                                                0x1
                    R71:bv256  -->                                                                0x2
                    R72:bv256  -->                                                                0x4
                    R82:bv256  -->                                                             0x49a8
              CANON250!!361:bool  -->                                                              false
              CANON1!!122:int  -->                                                                0x1
              CANON1!!210:int  -->                                                                0x1
              ReachabilityCertora39_0_0_20_0_38:bool  -->                                                               true
              CANON68!!161:bv256  -->                                                                0x2
                    B116:bool  -->                                                               true
                    B202:bool  -->                                                              false
                    B337:bool  -->                                                               true
                    B338:bool  -->                                                               true
                    B339:bool  -->                                                               true
                    B340:bool  -->                                                               true
                    B341:bool  -->                                                               true
                    B491:bool  -->                                                               true
                    B493:bool  -->                                                               true
                    B495:bool  -->                                                               true
                    B497:bool  -->                                                              false
                    B499:bool  -->                                                               true
                     I146:int  -->                                                              0xee8
                     I148:int  -->                                                              0xee8
                     I157:int  -->                                                              0xee8
                     I163:int  -->                                                              0xee8
                     I187:int  -->                                                             0x3f9c
                     I193:int  -->                                                             0x3f9c
                     I200:int  -->                                                             0x3f9c
                     I222:int  -->                                                             0x70b8
                     I224:int  -->                                                             0x70b8
                     I225:int  -->                                                                0x0
                     I226:int  -->                                                                0x0
                     I228:int  -->                                                                0x0
                     I230:int  -->                                                                0x0
                     I232:int  -->                                                                0x0
                     I234:int  -->                                                                0x0
                     I256:int  -->                                                              0xee8
                     I268:int  -->                                                              0xee8
                     I277:int  -->                                                              0xee8
                     I283:int  -->                                                              0xee8
                     I335:int  -->                                                              0xee8
                     I336:int  -->                                                              0xee8
                     I354:int  -->                                                              0xee7
                     I355:int  -->                                                              0xee7
                     I357:int  -->                                                             0x3f9c
                     I363:int  -->                                                             0x3f9c
                     I401:int  -->                                                              0xee9
                     I414:int  -->                                                              0xee9
                     I424:int  -->                                                              0xee9
                     I430:int  -->                                                              0xee9
                     I487:int  -->                                                              0xee9
                     I488:int  -->                                                              0xee9
                   R110:bv256  -->                                                                0x1
                   R111:bv256  -->                                                                0x1
                   R113:bv256  -->                                                                0x1
                   R114:bv256  -->                                                                0x1
                   R134:bv256  -->                                                             0x70b8
                   R136:bv256  -->                                                              0x1c1
                   R139:bv256  -->                                                              0x8ea
                   R141:bv256  -->                                                              0x8ea
                   R143:bv256  -->                                                                0x1
                   R149:bv256  -->                                                              0xee9
              R153:(uninterp) skey  -->                                                             0x2711
              R154:(uninterp) skey  -->                                                             0x35f9
                   R155:bv256  -->                                                                0x0
                   R160:bv256  -->                                                                0x2
                   R164:bv256  -->                                                              0xee9
                   R170:bv256  -->                                                                0x1
                   R176:bv256  -->                                                             0x70b8
                   R178:bv256  -->                                                              0x1c1
                   R181:bv256  -->                                                              0x261
                   R183:bv256  -->                                                              0x261
                   R184:bv256  -->                                                                0x1
              R189:(uninterp) skey  -->                                                             0x2be5
                   R191:bv256  -->                                                                0x0
              R196:(uninterp) skey  -->                                                             0x3096
                   R198:bv256  -->                                                                0x1
                   R236:bv256  --> 0x4869f99d00000000000000000000000000000000000000000000000000000000
                   R238:bv256  -->                                                                0x1
                   R244:bv256  --> 0x4869f99d00000000000000000000000000000000000000000000000000000000
                   R246:bv256  -->                                                                0x1
                   R252:bv256  --> 0x67be467300000000000000000000000000000000000000000000000000000000
                   R254:bv256  -->                                                                0x1
                   R261:bv256  --> 0x67be467300000000000000000000000000000000000000000000000000000000
                   R263:bv256  -->                                                                0x1
                   R270:bv256  --> 0x67be467300000000000000000000000000000000000000000000000000000000
                   R272:bv256  -->                                                                0x1
                   R279:bv256  --> 0x67be467300000000000000000000000000000000000000000000000000000000
                   R281:bv256  -->                                                                0x1
                   R288:bv256  --> 0x1a19aeef00000000000000000000000000000000000000000000000000000000
                   R290:bv256  -->                                                                0x1
                   R296:bv256  --> 0x1a19aeef00000000000000000000000000000000000000000000000000000000
                   R298:bv256  -->                                                                0x1
                   R304:bv256  -->  0x8390b8b00000000000000000000000000000000000000000000000000000000
                   R306:bv256  -->                                                                0x1
                   R312:bv256  -->  0x8390b8b00000000000000000000000000000000000000000000000000000000
                   R314:bv256  -->                                                                0x1
                   R320:bv256  --> 0x23d3c14200000000000000000000000000000000000000000000000000000000
                   R322:bv256  -->                                                                0x1
                   R328:bv256  --> 0x23d3c14200000000000000000000000000000000000000000000000000000000
                   R330:bv256  -->                                                                0x1
                   R346:bv256  -->                                                                0x0
                   R347:bv256  -->                                                                0x2
                   R352:bv256  -->                                                                0x0
                   R353:bv256  -->                                                                0x2
                   R364:bv256  -->                                                             0x3f9d
                   R369:bv256  -->                                                                0x2
                   R372:bv256  -->                                                              0xee9
                   R376:bv256  -->                                                                0x1
                   R381:bv256  --> 0x4869f99d00000000000000000000000000000000000000000000000000000000
                   R383:bv256  -->                                                                0x1
                   R389:bv256  --> 0x4869f99d00000000000000000000000000000000000000000000000000000000
                   R391:bv256  -->                                                                0x1
                   R397:bv256  --> 0x67be467300000000000000000000000000000000000000000000000000000000
                   R399:bv256  -->                                                                0x1
                   R406:bv256  --> 0x67be467300000000000000000000000000000000000000000000000000000000
                   R408:bv256  -->                                                                0x1
                   R416:bv256  --> 0x67be467300000000000000000000000000000000000000000000000000000000
                   R418:bv256  -->                                                                0x1
                   R426:bv256  --> 0x67be467300000000000000000000000000000000000000000000000000000000
                   R428:bv256  -->                                                                0x1
                   R436:bv256  --> 0x1a19aeef00000000000000000000000000000000000000000000000000000000
                   R438:bv256  -->                                                                0x1
                   R444:bv256  --> 0x1a19aeef00000000000000000000000000000000000000000000000000000000
                   R446:bv256  -->                                                                0x1
                   R453:bv256  -->  0x8390b8b00000000000000000000000000000000000000000000000000000000
                   R455:bv256  -->                                                                0x1
                   R461:bv256  -->  0x8390b8b00000000000000000000000000000000000000000000000000000000
                   R463:bv256  -->                                                                0x1
                   R470:bv256  --> 0x23d3c14200000000000000000000000000000000000000000000000000000000
                   R472:bv256  -->                                                                0x1
                   R478:bv256  --> 0x23d3c14200000000000000000000000000000000000000000000000000000000
                   R480:bv256  -->                                                                0x1
              ReachabilityCertora18_0_0_10_0_18:bool  -->                                                               true
              lastHasThrown!!132:bool  -->                                                              false
              lastHasThrown!!172:bool  -->                                                              false
              lastHasThrown!!174:bool  -->                                                              false
              lastHasThrown!!240:bool  -->                                                              false
              lastHasThrown!!248:bool  -->                                                              false
              lastHasThrown!!257:bool  -->                                                              false
              lastHasThrown!!265:bool  -->                                                              false
              lastHasThrown!!274:bool  -->                                                              false
              lastHasThrown!!284:bool  -->                                                              false
              lastHasThrown!!292:bool  -->                                                              false
              lastHasThrown!!300:bool  -->                                                              false
              lastHasThrown!!308:bool  -->                                                              false
              lastHasThrown!!316:bool  -->                                                              false
              lastHasThrown!!324:bool  -->                                                              false
              lastHasThrown!!332:bool  -->                                                              false
              lastHasThrown!!378:bool  -->                                                              false
              lastHasThrown!!385:bool  -->                                                              false
              lastHasThrown!!393:bool  -->                                                              false
              lastHasThrown!!402:bool  -->                                                              false
              lastHasThrown!!410:bool  -->                                                              false
              lastHasThrown!!420:bool  -->                                                              false
              lastHasThrown!!431:bool  -->                                                              false
              lastHasThrown!!440:bool  -->                                                              false
              lastHasThrown!!448:bool  -->                                                              false
              lastHasThrown!!457:bool  -->                                                              false
              lastHasThrown!!465:bool  -->                                                              false
              lastHasThrown!!474:bool  -->                                                              false
              lastHasThrown!!482:bool  -->                                                              false
              CANON132!!152:int  -->                                                              0xee9
              ReachabilityCertora8_0_0_5_0_8:bool  -->                                                               true
              ReachabilityCertora9_0_0_1_0_9:bool  -->                                                               true
              CANON124!!171:bv256  -->                                                                0x1
              OK_38_0_0_1_0_37:bool  -->                                                              false
              CANON6!!123:bool  -->                                                              false
              CANON6!!211:bool  -->                                                              false
              CANON292!!451:bool  -->                                                               true
              CANON284!!434:bool  -->                                                               true
              CANON108!!374:bv256  -->                                                                0x2
              OK_46_0_0_1_0_45:bool  -->                                                              false
              CANON276!!423:bool  -->                                                               true
              OK_16_0_0_9_0_16:bool  -->                                                              false
              ReachabilityCertora26_0_0_1_0_27:bool  -->                                                               true
              CANON132!!35:int  -->                                                              0xee8
              OK_39_0_0_20_0_38:bool  -->                                                              false
              OK_54_0_0_1_0_53:bool  -->                                                              false
              ReachabilityCertora34_0_0_1_0_33:bool  -->                                                               true
              OK_18_0_0_10_0_18:bool  -->                                                              false
              sklm!certora__k_49973!callId0!10:bv256  -->                                                              0xeeb
              ReachabilityCertora42_0_0_1_0_41:bool  -->                                                               true
              ReachabilityCertora17_0_0_1_0_17:bool  -->                                                               true
              lastReverted!!173:bool  -->                                                              false
              lastReverted!!241:bool  -->                                                              false
              lastReverted!!249:bool  -->                                                              false
              lastReverted!!258:bool  -->                                                              false
              lastReverted!!266:bool  -->                                                              false
              lastReverted!!275:bool  -->                                                              false
              lastReverted!!285:bool  -->                                                              false
              lastReverted!!293:bool  -->                                                              false
              lastReverted!!301:bool  -->                                                              false
              lastReverted!!309:bool  -->                                                              false
              lastReverted!!317:bool  -->                                                              false
              lastReverted!!325:bool  -->                                                              false
              lastReverted!!333:bool  -->                                                              false
              lastReverted!!379:bool  -->                                                              false
              lastReverted!!386:bool  -->                                                              false
              lastReverted!!394:bool  -->                                                              false
              lastReverted!!403:bool  -->                                                              false
              lastReverted!!411:bool  -->                                                              false
              lastReverted!!421:bool  -->                                                              false
              lastReverted!!432:bool  -->                                                              false
              lastReverted!!441:bool  -->                                                              false
              lastReverted!!449:bool  -->                                                              false
              lastReverted!!458:bool  -->                                                              false
              lastReverted!!466:bool  -->                                                              false
              lastReverted!!475:bool  -->                                                              false
              lastReverted!!483:bool  -->                                                              false
              ReachabilityCertora50_0_0_1_0_49:bool  -->                                                               true
              ReachabilityCertora25_0_0_1_0_25:bool  -->                                                               true
              CANON188!!42:bv256  -->                                                              0xee8
                  CANON24:int  -->                                                             0x70b8
                  CANON25:int  -->                                                                0x0
                  CANON26:int  -->                                                                0x0
                  CANON27:int  -->                                                                0x0
                  CANON28:int  -->                                                                0x0
                  CANON29:int  -->                                                                0x0
                  CANON30:int  -->                                                                0x0
                  CANON31:int  -->                                                                0x0
                  CANON32:int  -->                                                                0x0
                  CANON33:int  -->                                                                0x0
                  CANON34:int  -->                                                             0x70b8
                  CANON35:int  -->                                                                0x0
                  CANON36:int  -->                                                                0x0
                  CANON37:int  -->                                                                0x0
                  CANON38:int  -->                                                                0x0
                  CANON39:int  -->                                                                0x0
                  CANON40:int  -->                                                                0x0
                  CANON41:int  -->                                                                0x0
                  CANON42:int  -->                                                                0x0
                  CANON43:int  -->                                                                0x0
                 CANON48:bool  -->                                                               true
                 CANON51:bool  -->                                                               true
                 CANON58:bool  -->                                                               true
                 CANON63:bool  -->                                                               true
                CANON64:bv256  -->                                                                0x0
                CANON70:bv256  -->                                                                0x0
                 CANON74:bool  -->                                                               true
                CANON75:bv256  -->                                                                0x0
                 CANON80:bool  -->                                                               true
                CANON82:bv256  -->                                                                0x0
                 CANON86:bool  -->                                                               true
                 CANON87:bool  -->                                                               true
                CANON89:bv256  -->                                                                0x0
                 CANON92:bool  -->                                                               true
                 CANON93:bool  -->                                                               true
                CANON95:bv256  -->                                                                0x0
                 CANON98:bool  -->                                                               true
              OK_36_0_0_1_0_35:bool  -->                                                              false
              CANON72!!370:bv256  -->                                                                0x2
              OK_0_0_0_15_0_28:bool  -->                                                              false
              CANON68!!62:bv256  -->                                                                0x0
              OK_44_0_0_1_0_43:bool  -->                                                              false
              CANON316!!492:bool  -->                                                               true
              OK_19_0_0_1_0_19:bool  -->                                                              false
              CANON308!!485:bool  -->                                                               true
              OK_52_0_0_1_0_51:bool  -->                                                              false
              CANON77!!166:bv256  -->                                                              0xee9
              CANON2!!124:int  -->                                                             0x49a8
              CANON2!!212:int  -->                                                             0x49a8
              ReachabilityCertora32_0_0_1_0_31:bool  -->                                                               true
              CANON104!!168:bv256  -->                                                                0x2
              CANON329!!500:bool  -->                                                              false
              ReachabilityCertora40_0_0_1_0_39:bool  -->                                                               true
              CANON7!!125:int  -->                                                         0x5b9af12b
              CANON7!!214:int  -->                                                         0x5b9af12b
              ReachabilityCertora15_0_0_1_0_15:bool  -->                                                               true
              ReachabilityCertora23_0_0_1_0_23:bool  -->                                                               true
              CANON163havocme27293:bytemap  -->      {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    0x2
  )
}
              OK_26_0_0_1_0_27:bool  -->                                                              false
              CANON188!!151:bv256  -->                                                              0xee9
              CANON228!!44:bv256  -->                                                             0x3f9c
              OK_34_0_0_1_0_33:bool  -->                                                              false
              sklm!certora__k_19393!callId0!7:bv256  -->                                                              0xee9
              OK_42_0_0_1_0_41:bool  -->                                                              false
              CANON10!!126:bool  -->                                                              false
              CANON10!!215:bool  -->                                                              false
              OK_17_0_0_1_0_17:bool  -->                                                              false
              OK_50_0_0_1_0_49:bool  -->                                                              false
              ReachabilityCertora30_0_0_1_0_29:bool  -->                                                               true
              CANON72!!63:bv256  -->                                                                0x0
              OK_25_0_0_1_0_25:bool  -->                                                              false
              CANON320!!494:bool  -->                                                               true
              CANON312!!489:bool  -->                                                               true
              OK_0_0_0_0_0_0:bool  -->                                                              false
              ReachabilityCertora13_0_0_1_0_13:bool  -->                                                               true
              sklm!certora__j_610378!callId0!12:bv256  -->                                                             0x2879
              CANON77!!64:bv256  -->                                                              0xee8
              ReachabilityCertora49_0_0_25_0_48:bool  -->                                                               true
              CANON78!!65:int  -->                                                              0xee8
              ReachabilityCertora21_0_0_1_0_21:bool  -->                                                               true
              CANON309!!486:bool  -->                                                               true
              OK_1_0_0_1_0_1:bool  -->                                                              false
              CANON78!!167:int  -->                                                              0xee9
              CANON3!!119:bool  -->                                                              false
              CANON3!!207:bool  -->                                                              false
              ReachabilityCertora47_0_0_24_0_46:bool  -->                                                               true
              CANON244!!203:bool  -->                                                              false
              CANON228!!366:bv256  -->                                                             0x3f9d
              tacSighash!!83:bv256  -->                                                         0x4869f99d
              tacSighash!!84:bv256  -->                                                         0x4869f99d
              tacSighash!!85:bv256  -->                                                         0x67be4673
              tacSighash!!86:bv256  -->                                                         0x67be4673
              tacSighash!!87:bv256  -->                                                         0x67be4673
              tacSighash!!88:bv256  -->                                                         0x67be4673
              tacSighash!!89:bv256  -->                                                         0x1a19aeef
              tacSighash!!90:bv256  -->                                                         0x1a19aeef
              tacSighash!!91:bv256  -->                                                          0x8390b8b
              tacSighash!!92:bv256  -->                                                          0x8390b8b
              tacSighash!!93:bv256  -->                                                         0x23d3c142
              tacSighash!!94:bv256  -->                                                         0x23d3c142
              tacSighash!!95:bv256  -->                                                         0x5b9af12b
              tacSighash!!96:bv256  -->                                                         0x5b9af12b
              tacSighash!!97:bv256  -->                                                         0x4869f99d
              tacSighash!!98:bv256  -->                                                         0x4869f99d
              tacSighash!!99:bv256  -->                                                         0x67be4673
              OK_32_0_0_1_0_31:bool  -->                                                              false
              ReachabilityCertora45_0_0_23_0_44:bool  -->                                                               true
              CANON8!!129:int  -->                                                                0x1
              CANON8!!218:int  -->                                                                0x1
              OK_2_0_0_2_0_2:bool  -->                                                              false
              OK_49_0_0_25_0_48:bool  -->                                                              false
              CANON104!!29:bv256  -->                                                                0x0
              ReachabilityCertora24_0_0_13_0_24:bool  -->                                                               true
              OK_40_0_0_1_0_39:bool  -->                                                              false
              OK_3_0_0_1_0_3:bool  -->                                                              false
              CANON152!!41:int  -->                                                             0x3f9c
              OK_15_0_0_1_0_15:bool  -->                                                              false
              ReachabilityCertora43_0_0_22_0_42:bool  -->                                                               true
              sklm!certora__j_510145!callId0!11:bv256  -->                                                             0x3f9c
              CANON108!!30:bv256  -->                                                                0x0
              OK_47_0_0_24_0_46:bool  -->                                                              false
              ReachabilityCertora22_0_0_12_0_22:bool  -->                                                               true
              OK_23_0_0_1_0_23:bool  -->                                                              false
            -------- TAC model end --------------
            
