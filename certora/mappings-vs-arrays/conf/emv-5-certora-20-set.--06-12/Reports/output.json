{
	"assertMessages": {},
	"rules": {
		"envfreeFuncsStaticCheck": {
			"FAIL": [],
			"SANITY_FAIL": [],
			"SUCCESS": [
				"A.elementCount()",
				"A.getLength()",
				"A.lastAdded()",
				"A.lastRemoved()",
				"A.operationCount()",
				"A.totalSum()",
				"A.values(uint256)",
				"elementCount()",
				"exists(uint256)",
				"getLength()",
				"lastAdded()",
				"lastRemoved()",
				"nextIndex()",
				"operationCount()",
				"totalSum()",
				"values(uint256)"
			],
			"TIMEOUT": [],
			"UNKNOWN": []
		},
		"gasOptimizedCorrectnessOfAddValue": {
			"FAIL": [
				"A.addValue(uint256)-Ao.addValue(uint256)"
			],
			"SANITY_FAIL": [],
			"SUCCESS": [],
			"TIMEOUT": [],
			"UNKNOWN": []
		},
		"gasOptimizedCorrectnessOfBatchAdd": {
			"FAIL": [
				"A.batchAdd(uint256[])-Ao.batchAdd(uint256[])"
			],
			"SANITY_FAIL": [],
			"SUCCESS": [],
			"TIMEOUT": [],
			"UNKNOWN": []
		},
		"gasOptimizedCorrectnessOfClear": {
			"FAIL": [],
			"SANITY_FAIL": [],
			"SUCCESS": [
				"A.clear()-Ao.clear()"
			],
			"TIMEOUT": [],
			"UNKNOWN": []
		},
		"gasOptimizedCorrectnessOfGetState": {
			"FAIL": [],
			"SANITY_FAIL": [],
			"SUCCESS": [
				"A.getState()-Ao.getState()"
			],
			"TIMEOUT": [],
			"UNKNOWN": []
		},
		"gasOptimizedCorrectnessOfGetValue": {
			"FAIL": [],
			"SANITY_FAIL": [],
			"SUCCESS": [
				"A.getValue(uint256)-Ao.getValue(uint256)"
			],
			"TIMEOUT": [],
			"UNKNOWN": []
		},
		"gasOptimizedCorrectnessOfRemoveValue": {
			"FAIL": [
				"A.removeValue(uint256)-Ao.removeValue(uint256)"
			],
			"SANITY_FAIL": [],
			"SUCCESS": [],
			"TIMEOUT": [],
			"UNKNOWN": []
		},
		"gasOptimizedCorrectnessOfUpdateValue": {
			"FAIL": [
				"A.updateValue(uint256,uint256)-Ao.updateValue(uint256,uint256)"
			],
			"SANITY_FAIL": [],
			"SUCCESS": [],
			"TIMEOUT": [],
			"UNKNOWN": []
		}
	}
}