Calltrace Debug Information
[StorageTitleInstance, 2087559892] Global State
    [StorageTitleInstance, 736465933] Storage State
        [StorageTitleInstance, 289824733] A
            [StorageStateValueInstance, 1354650973] elementCount: 1
            [StorageStateValueInstance, 1096038044] lastAdded: 0
            [StorageStateValueInstance, 1184270151] lastRemoved: 0
            [StorageStateValueInstance, 1695387903] operationCount: 0
            [StorageStateValueInstance, 1195058622] totalSum: 1
            [StorageStateValueInstance, 658180883] values: 0x995
            [StorageStateValueInstance, 1441078284] values[0x993]: 1
            [StorageStateValueInstance, 1558639655] values[0x994]: 0
        [StorageTitleInstance, 1122905296] Ao
            [StorageStateValueInstance, 1030931469] activeIndices: 0x995
            [StorageStateValueInstance, 1074445011] activeIndices[0x993]: 0x44ac
            [StorageStateValueInstance, 732313913] activeIndices[0x994]: 0x2711
            [StorageStateValueInstance, 412944433] elementCount: 1
            [StorageStateValueInstance, 862254467] indexPosition[0x2711]: 0
            [StorageStateValueInstance, 648879390] indexPosition[0x44ac]: 0
            [StorageStateValueInstance, 1012438787] lastAdded: 0
            [StorageStateValueInstance, 1282722873] lastRemoved: 0
            [StorageStateValueInstance, 1479078105] operationCount: 0
            [StorageStateValueInstance, 379802415] totalSum: 1
            [StorageStateValueInstance, 1857760887] values[0x44ac]: 1
    [StorageTitleInstance, 79966877] Balances
        [BalanceValueInstance, 460694756] A (0x3f9c).balance: 0x1ade
        [BalanceValueInstance, 398702222] Ao (0x3f9d).balance: 0x1adf
    [StorageTitleInstance, 549255831] Ghosts State
        [GhostValueInstance, 97088711] ghostALength: 0x995
        [GhostValueInstance, 858628638] ghostAValues[0x993]: 1
        [GhostValueInstance, 969934131] ghostAValues[0x994]: 0
        [GhostValueInstance, 2122262748] ghostActiveIndices[0x993]: 0x44ac
        [GhostValueInstance, 811472024] ghostActiveIndices[0x994]: 0x2711
        [GhostValueInstance, 1857908191] ghostAoLength: 0x995
        [GhostValueInstance, 1476199590] ghostAoValues[0x44ac]: 1
        [GhostValueInstance, 1355018061] ghostIndexPosition[0x2711]: <?>
        [GhostValueInstance, 276421401] ghostIndexPosition[0x44ac]: <?>
[LabelInstance, 355438428] Setup
    [LabelInstance, 717775211] multi contract setup
    [LabelInstance, 1706973944] rule parameters setup
    [LabelInstance, 994178117] contract address vars initialized
    [LabelInstance, 1383979294] setup read tracking instrumentation
    [LabelInstance, 1003960579] last storage initialize
    [LabelInstance, 749329691] assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero
    [LabelInstance, 419362583] assuming address(0).code has no code deployed
    [LabelInstance, 611805247] assumptions about contracts' addresses
    [LabelInstance, 644502163] assumptions about static addresses
    [LabelInstance, 1154028096] establish addresses of precompiled contracts
    [LabelInstance, 727712641] assumptions about uniqueness of contracts' addresses
    [LabelInstance, 885628994] static links
    [LabelInstance, 1078166146] record starting nonces
    [LabelInstance, 1284821976] cloned contracts have no balances
    [LabelInstance, 1740877248] Linked immutable setup
    [LabelInstance, 519166666] Constrain immutables
    [LabelInstance, 1115294724] establish equivalence of extension and base contract immutables
[LabelInstance, 681188736] gasOptimizationCorrectness(f, g)
    [CVLFunc, 1380780286] 1 ; gasOptimizationCorrectness ; []; [] ; {} : [] 
        gasOptimizationCorrectness()
        [LabelInstance, 1115340791] env eA
        [LabelInstance, 1358074256] env eAo
        [LabelInstance, 687665171] calldataarg args
        [LabelInstance, 306972426] require eA == eAo && (a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j])) && (forall uint256 i. to_mathint(i) < ghostAoLength => ghostIndexPosition[ghostActiveIndices[i]] == i))
                # snippet DirectStorageLoad -1633968904 ;
                 disp. path:  totalSum
                  value sym:  CANON96!!38:bv256
                # local storage change -1633968904
            [Load, 98473907] Load from A.totalSum ↪ 1
                # snippet DirectStorageLoad 2100087539 ;
                 disp. path:  totalSum
                  value sym:  CANON99!!39:bv256
                # local storage change 2100087539
            [Load, 1097132169] Load from Ao.totalSum ↪ 1
                # snippet DirectStorageLoad 1958074416 ;
                 disp. path:  elementCount
                  value sym:  CANON102!!5:bv256
                # local storage change 1958074416
            [Load, 249033950] Load from A.elementCount ↪ 1
                # snippet DirectStorageLoad 859308113 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!6:bv256
                # local storage change 859308113
            [Load, 2085733977] Load from Ao.elementCount ↪ 1
                # snippet DirectStorageLoad 944531314 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944531314
            [Load, 222537071] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653219378 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653219378
            [Load, 1795499246] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad -608547910 ;
                 disp. path:  lastRemoved
                  value sym:  CANON119!!9:bv256
                # local storage change -608547910
            [Load, 1514495060] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -1154028665 ;
                 disp. path:  lastRemoved
                  value sym:  CANON122!!10:bv256
                # local storage change -1154028665
            [Load, 684997195] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad 1858410088 ;
                 disp. path:  operationCount
                  value sym:  CANON126!!11:bv256
                # local storage change 1858410088
            [Load, 950835939] Load from A.operationCount ↪ 0
                # snippet DirectStorageLoad 1297499427 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!12:bv256
                # local storage change 1297499427
            [Load, 2060254028] Load from Ao.operationCount ↪ 0
            [CVLExpInstance, 169590717] Ghost read: ghostALength ↪ 0x995
            [CVLExpInstance, 51694295] Ghost read: ghostAoLength ↪ 0x995
                # snippet DirectStorageLoad -1989722863 ;
                 disp. path:  values
                  value sym:  CANON140!!15:bv256
                # local storage change -1989722863
            [Load, 1605575636] Load from A.values ↪ 0x995
                # snippet DirectStorageLoad -1753694156 ;
                 disp. path:  activeIndices
                  value sym:  CANON143!!16:bv256
                # local storage change -1753694156
            [Load, 1111008757] Load from Ao.activeIndices ↪ 0x995
        [LabelInstance, 361303128] A.f(eA, args)
            [External, 820915788] A.removeValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@2:bv256)])
                [TransferInstance, 1988433414] sender: Ao (0x3f9d); receiver: A (0x3f9c); transferred amount: 0
                    # snippet WithLocSym 1857692832 ;
                       loc sym:  R64:bv256
                     value sym:  R101:bv256
                [Load, 1905590830] Load from A.[raw storage address] A (0x3f9c) ↪ 1
                [Start, 748891016] Evaluate branch condition
                [Start, 1845423134] Evaluate branch condition
                [LabelInstance, 865464961] Apply hook load len := A.values.length
                    [LabelInstance, 1791492783] With parameters:
                        [LabelInstance, 1602390805] len = ?
                    [CVLExpInstance, 1166410471] Ghost read: ghostALength ↪ 0x995
                    # snippet LoadSnippet 1153055395 ;
                     disp. path:  values
                      value sym:  CANON140!!15:bv256
                    # local storage change 1153055395
                [Load, 1494999340] Load from A.values ↪ 0x995
                [Start, 1936477658] Evaluate branch condition
                [LabelInstance, 956148353] Apply hook load len := A.values.length
                    [LabelInstance, 1301878339] With parameters:
                        [LabelInstance, 1259179101] len = ?
                    [CVLExpInstance, 1520306811] Ghost read: ghostALength ↪ 0x995
                    # snippet LoadSnippet 1153122882 ;
                     disp. path:  values
                      value sym:  CANON140!!15:bv256
                    # local storage change 1153122882
                [Load, 258083339] Load from A.values ↪ 0x995
                [Start, 181153450] Evaluate branch condition
                [LabelInstance, 755250378] Apply hook load val := A.values[INDEX uint256 k]
                    [LabelInstance, 123940547] With parameters:
                        [LabelInstance, 407789174] k = 0x993
                        [LabelInstance, 1931250347] val = ?
                    [CVLExpInstance, 2142388838] Ghost read: ghostAValues[0x993] ↪ 1
                    # snippet LoadSnippet 784810975 ;
                     disp. path:  values[i = R244:bv256]
                      value sym:  R111:bv256
                    # local storage change 784810975
                [Load, 1631153765] Load from A.values[0x993] ↪ 1
                [LocalAssignmentInstance, 191767002] removedValue  ↪  1
                [Start, 481344462] Loop at A.sol: line: 65: values.length - 1
                    [LabelInstance, 1912372044] Apply hook load len := A.values.length
                        [LabelInstance, 1536981328] With parameters:
                            [LabelInstance, 562488072] len = ?
                        [CVLExpInstance, 955335229] Ghost read: ghostALength ↪ 0x995
                        # snippet LoadSnippet 1153221059 ;
                         disp. path:  values
                          value sym:  CANON140!!15:bv256
                        # local storage change 1153221059
                    [Load, 709195892] Load from A.values ↪ 0x995
                    [Start, 313246357] Evaluate branch condition
                    [Iteration, 69467499] Loop Iteration 1
                        [Start, 913422200] Evaluate branch condition
                        [LabelInstance, 930545434] Apply hook load len := A.values.length
                            [LabelInstance, 2072325131] With parameters:
                                [LabelInstance, 1616268981] len = ?
                            [CVLExpInstance, 1537736624] Ghost read: ghostALength ↪ 0x995
                            # snippet LoadSnippet 1153238915 ;
                             disp. path:  values
                              value sym:  CANON140!!15:bv256
                            # local storage change 1153238915
                        [Load, 1537824241] Load from A.values ↪ 0x995
                        [Start, 153018363] Evaluate branch condition
                        [LabelInstance, 1542392715] Apply hook load val := A.values[INDEX uint256 k]
                            [LabelInstance, 1070671161] With parameters:
                                [LabelInstance, 776403439] k = 0x994
                                [LabelInstance, 1373113051] val = ?
                            [CVLExpInstance, 1917382712] Ghost read: ghostAValues[0x994] ↪ 0
                            # snippet LoadSnippet -585782152 ;
                             disp. path:  values[i = R291:bv256]
                              value sym:  R298:bv256
                            # local storage change -585782152
                        [Load, 1141308325] Load from A.values[0x994] ↪ 0
                        [LabelInstance, 1561787211] Apply hook load len := A.values.length
                            [LabelInstance, 1284095200] With parameters:
                                [LabelInstance, 2046123129] len = ?
                            [CVLExpInstance, 173890353] Ghost read: ghostALength ↪ 0x995
                            # snippet LoadSnippet 1153226887 ;
                             disp. path:  values
                              value sym:  CANON140!!15:bv256
                            # local storage change 1153226887
                        [Load, 1627075986] Load from A.values ↪ 0x995
                        [Start, 1628761041] Evaluate branch condition
                        [LabelInstance, 852587806] Apply hook store A.values[INDEX uint256 k] := newValue (old: oldValue)
                            [LabelInstance, 1387603110] With parameters:
                                [LabelInstance, 1801178311] k = 0x993
                                [LabelInstance, 760735774] newValue = 0x0
                                [LabelInstance, 345444655] oldValue = 0x1
                            [CVLExpInstance, 1870432015] Ghost assignment: ghostAValues[0x993] = 0
                            # snippet StoreSnippet -1520088476 ;
                             disp. path:  values[i = R244:bv256]
                              value sym:  R298:bv256
                            # local storage change -1520088476
                        [Store, 1525961683] Store at A.values[0x993] ↪ 0
                [LabelInstance, 1215387531] Apply hook load len := A.values.length
                    [LabelInstance, 1682127299] With parameters:
                        [LabelInstance, 1863098043] len = ?
                    [CVLExpInstance, 396239426] Ghost read: ghostALength ↪ 0x995
                    # snippet LoadSnippet 1153284516 ;
                     disp. path:  values
                      value sym:  CANON140!!15:bv256
                    # local storage change 1153284516
                [Load, 1427235381] Load from A.values ↪ 0x995
                [Start, 677463157] Evaluate branch condition
                [LabelInstance, 588508804] Apply hook store A.values[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 1165579414] With parameters:
                        [LabelInstance, 530777670] k = 0x994
                        [LabelInstance, 1027844907] newValue = 0x0
                        [LabelInstance, 26744265] oldValue = 0x0
                    [CVLExpInstance, 239742088] Ghost assignment: ghostAValues[0x994] = 0
                    # snippet StoreSnippet -1751051622 ;
                     disp. path:  values[i = R314:bv256]
                      value sym:  0x0
                    # local storage change -1751051622
                [Store, 165448241] Store at A.values[0x994] ↪ 0
                [LabelInstance, 694575826] Apply hook store A.values.length := newLen (old: oldLen)
                    [LabelInstance, 1754340458] With parameters:
                        [LabelInstance, 937448348] newLen = 0x994
                        [LabelInstance, 1518393939] oldLen = 0x995
                    [CVLExpInstance, 1080705827] Ghost assignment: ghostALength = 0x994
                    # snippet StoreSnippet 2145052306 ;
                     disp. path:  values
                      value sym:  R314:bv256
                    # local storage change 2145052306
                [Store, 553153800] Store at A.values ↪ 0x994
                    # snippet LoadSnippet -702925684 ;
                     disp. path:  totalSum
                      value sym:  CANON96!!38:bv256
                    # local storage change -702925684
                [Load, 363966008] Load from A.totalSum ↪ 1
                [Start, 1228909727] Evaluate branch condition
                    # snippet StoreSnippet -1203754791 ;
                     disp. path:  totalSum
                      value sym:  R325:bv256
                    # local storage change -1203754791
                [Store, 1532923328] Store at A.totalSum ↪ 0
                    # snippet LoadSnippet -1018732894 ;
                     disp. path:  elementCount
                      value sym:  CANON102!!5:bv256
                    # local storage change -1018732894
                [Load, 946725782] Load from A.elementCount ↪ 1
                [Start, 548752077] Evaluate branch condition
                    # snippet StoreSnippet -652574720 ;
                     disp. path:  elementCount
                      value sym:  R328:bv256
                    # local storage change -652574720
                [Store, 341459216] Store at A.elementCount ↪ 0
                    # snippet StoreSnippet 646484413 ;
                     disp. path:  lastRemoved
                      value sym:  R111:bv256
                    # local storage change 646484413
                [Store, 1002827478] Store at A.lastRemoved ↪ 1
                    # snippet LoadSnippet 186609482 ;
                     disp. path:  operationCount
                      value sym:  CANON126!!11:bv256
                    # local storage change 186609482
                [Load, 1826868075] Load from A.operationCount ↪ 0
                [Start, 1720321816] Evaluate branch condition
                    # snippet StoreSnippet 1115671220 ;
                     disp. path:  operationCount
                      value sym:  R332:bv256
                    # local storage change 1115671220
                [Store, 547260440] Store at A.operationCount ↪ 1
                [Return, 876179843] Return
        [LabelInstance, 1190350076] Ao.g(eAo, args)
            [External, 1895244285] Ao.removeValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@3:bv256)])
                [TransferInstance, 612219315] sender: Ao (0x3f9d); receiver: Ao (0x3f9d); transferred amount: 0
                    # snippet WithLocSym 886446650 ;
                       loc sym:  R51:bv256
                     value sym:  R129:bv256
                [Load, 1538744790] Load from Ao.[raw storage address] Ao (0x3f9d) ↪ 1
                [Start, 125784816] Evaluate branch condition
                [Start, 1313760043] Evaluate branch condition
                [LabelInstance, 121105264] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1735295889] With parameters:
                        [LabelInstance, 444310878] len = ?
                    [CVLExpInstance, 663865857] Ghost read: ghostAoLength ↪ 0x995
                    # snippet LoadSnippet -1606580760 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606580760
                [Load, 524671464] Load from Ao.activeIndices ↪ 0x995
                [Start, 212116378] Evaluate branch condition
                [LabelInstance, 1261614597] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1658502304] With parameters:
                        [LabelInstance, 1398907786] len = ?
                    [CVLExpInstance, 2054185487] Ghost read: ghostAoLength ↪ 0x995
                    # snippet LoadSnippet -1606516249 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606516249
                [Load, 606888410] Load from Ao.activeIndices ↪ 0x995
                [Start, 329573955] Evaluate branch condition
                [LabelInstance, 1300724302] Apply hook load val := Ao.activeIndices[INDEX uint256 k]
                    [LabelInstance, 882776555] With parameters:
                        [LabelInstance, 1945869331] k = 0x993
                        [LabelInstance, 1205463761] val = ?
                    [CVLExpInstance, 830127470] Ghost read: ghostActiveIndices[0x993] ↪ 0x44ac
                    # snippet LoadSnippet -1577933919 ;
                     disp. path:  activeIndices[i = R250:bv256]
                      value sym:  R139:bv256
                    # local storage change -1577933919
                [Load, 1970256875] Load from Ao.activeIndices[0x993] ↪ 0x44ac
                [LocalAssignmentInstance, 1515960913] realIndex  ↪  0x44ac
                [LabelInstance, 1381780649] Apply hook load val := Ao.values[KEY uint256 k]
                    [LabelInstance, 917051969] With parameters:
                        [LabelInstance, 1049710492] k = 0x44ac
                        [LabelInstance, 958391085] val = ?
                    [CVLExpInstance, 160876963] Ghost read: ghostAoValues[0x44ac] ↪ 1
                    # snippet LoadSnippet 365644807 ;
                     disp. path:  values[k = R139:bv256]
                      value sym:  R144:bv256
                    # local storage change 365644807
                [Load, 2006163906] Load from Ao.values[0x44ac] ↪ 1
                [LocalAssignmentInstance, 1128983811] removedValue  ↪  1
                [LabelInstance, 84568268] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 980312607] With parameters:
                        [LabelInstance, 1343838497] len = ?
                    [CVLExpInstance, 1143964884] Ghost read: ghostAoLength ↪ 0x995
                    # snippet LoadSnippet -1606426008 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606426008
                [Load, 305514645] Load from Ao.activeIndices ↪ 0x995
                [Start, 1535258198] Evaluate branch condition
                [LocalAssignmentInstance, 1103672406] lastPos  ↪  0x994
                [LabelInstance, 2046398879] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1161072469] With parameters:
                        [LabelInstance, 252639547] len = ?
                    [CVLExpInstance, 190879368] Ghost read: ghostAoLength ↪ 0x995
                    # snippet LoadSnippet -1606389242 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606389242
                [Load, 1050708754] Load from Ao.activeIndices ↪ 0x995
                [Start, 1603270068] Evaluate branch condition
                [LabelInstance, 657459295] Apply hook load val := Ao.activeIndices[INDEX uint256 k]
                    [LabelInstance, 686497511] With parameters:
                        [LabelInstance, 313125107] k = 0x994
                        [LabelInstance, 841719111] val = ?
                    [CVLExpInstance, 360581549] Ghost read: ghostActiveIndices[0x994] ↪ 0x2711
                    # snippet LoadSnippet 1227505314 ;
                     disp. path:  activeIndices[i = R148:bv256]
                      value sym:  R155:bv256
                    # local storage change 1227505314
                [Load, 1704075715] Load from Ao.activeIndices[0x994] ↪ 0x2711
                [LocalAssignmentInstance, 941732850] lastRealIndex  ↪  0x2711
                [Start, 1443811348] Evaluate branch condition
                [LabelInstance, 861444121] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1194339208] With parameters:
                        [LabelInstance, 1924906687] len = ?
                    [CVLExpInstance, 1385516684] Ghost read: ghostAoLength ↪ 0x995
                    # snippet LoadSnippet -1606316857 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606316857
                [Load, 628792471] Load from Ao.activeIndices ↪ 0x995
                [Start, 1674612699] Evaluate branch condition
                [LabelInstance, 1278315352] Apply hook store Ao.activeIndices[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 883449212] With parameters:
                        [LabelInstance, 1162342746] k = 0x993
                        [LabelInstance, 571347070] newValue = 0x2711
                        [LabelInstance, 1646605356] oldValue = 0x44ac
                    [CVLExpInstance, 345032361] Ghost assignment: ghostActiveIndices[0x993] = 0x2711
                    # snippet StoreSnippet -1220405459 ;
                     disp. path:  activeIndices[i = R250:bv256]
                      value sym:  R155:bv256
                    # local storage change -1220405459
                [Store, 1856452672] Store at Ao.activeIndices[0x993] ↪ 0x2711
                [LabelInstance, 1014519818] Apply hook store Ao.indexPosition[KEY uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 2008518653] With parameters:
                        [LabelInstance, 1694542380] k = 0x2711
                        [LabelInstance, 842202100] newValue = 0x993
                        [LabelInstance, 1282690480] oldValue = 0x0
                    [CVLExpInstance, 125303716] Ghost assignment: ghostIndexPosition[0x2711] = 0x993
                    # snippet StoreSnippet 130548330 ;
                     disp. path:  indexPosition[k = R155:bv256]
                      value sym:  R250:bv256
                    # local storage change 130548330
                [Store, 1732665516] Store at Ao.indexPosition[0x2711] ↪ 0x993
                [LabelInstance, 1108269803] Apply hook store Ao.values[KEY uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 746133207] With parameters:
                        [LabelInstance, 342585895] k = 0x44ac
                        [LabelInstance, 1081881350] newValue = 0x0
                        [LabelInstance, 1947295840] oldValue = 0x1
                    [CVLExpInstance, 280633243] Ghost assignment: ghostAoValues[0x44ac] = 0
                    # snippet StoreSnippet 2087173695 ;
                     disp. path:  values[k = R139:bv256]
                      value sym:  0x0
                    # local storage change 2087173695
                [Store, 1594867169] Store at Ao.values[0x44ac] ↪ 0
                [LabelInstance, 2118795525] Apply hook store Ao.indexPosition[KEY uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 19348684] With parameters:
                        [LabelInstance, 1092730292] k = 0x44ac
                        [LabelInstance, 1667489988] newValue = 0x0
                        [LabelInstance, 1326307268] oldValue = 0x0
                    [CVLExpInstance, 2012500917] Ghost assignment: ghostIndexPosition[0x44ac] = 0
                    # snippet StoreSnippet 367762573 ;
                     disp. path:  indexPosition[k = R139:bv256]
                      value sym:  0x0
                    # local storage change 367762573
                [Store, 997498082] Store at Ao.indexPosition[0x44ac] ↪ 0
                [LabelInstance, 1206726280] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1728012870] With parameters:
                        [LabelInstance, 868478167] len = ?
                    [CVLExpInstance, 743433665] Ghost read: ghostAoLength ↪ 0x995
                    # snippet LoadSnippet -1606136375 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606136375
                [Load, 49809326] Load from Ao.activeIndices ↪ 0x995
                [Start, 520661221] Evaluate branch condition
                [LabelInstance, 855722631] Apply hook store Ao.activeIndices[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 1622393035] With parameters:
                        [LabelInstance, 573861380] k = 0x994
                        [LabelInstance, 2023863591] newValue = 0x0
                        [LabelInstance, 1103994310] oldValue = 0x2711
                    [CVLExpInstance, 1057405100] Ghost assignment: ghostActiveIndices[0x994] = 0
                    # snippet StoreSnippet -110551713 ;
                     disp. path:  activeIndices[i = R374:bv256]
                      value sym:  0x0
                    # local storage change -110551713
                [Store, 1044624646] Store at Ao.activeIndices[0x994] ↪ 0
                [LabelInstance, 1262368612] Apply hook store Ao.activeIndices.length := newLen (old: oldLen)
                    [LabelInstance, 1714466920] With parameters:
                        [LabelInstance, 1828300762] newLen = 0x994
                        [LabelInstance, 1328661702] oldLen = 0x995
                    [CVLExpInstance, 1963876179] Ghost assignment: ghostAoLength = 0x994
                    # snippet StoreSnippet -509415081 ;
                     disp. path:  activeIndices
                      value sym:  R374:bv256
                    # local storage change -509415081
                [Store, 375259754] Store at Ao.activeIndices ↪ 0x994
                    # snippet LoadSnippet 1897315001 ;
                     disp. path:  totalSum
                      value sym:  CANON99!!39:bv256
                    # local storage change 1897315001
                [Load, 926461964] Load from Ao.totalSum ↪ 1
                [Start, 1995326937] Evaluate branch condition
                    # snippet StoreSnippet -360193898 ;
                     disp. path:  totalSum
                      value sym:  R385:bv256
                    # local storage change -360193898
                [Store, 1906145424] Store at Ao.totalSum ↪ 0
                    # snippet LoadSnippet 2087854057 ;
                     disp. path:  elementCount
                      value sym:  CANON105!!6:bv256
                    # local storage change 2087854057
                [Load, 389446043] Load from Ao.elementCount ↪ 1
                [Start, 1711018913] Evaluate branch condition
                    # snippet StoreSnippet 190986173 ;
                     disp. path:  elementCount
                      value sym:  R388:bv256
                    # local storage change 190986173
                [Store, 1631081034] Store at Ao.elementCount ↪ 0
                    # snippet StoreSnippet -1086578284 ;
                     disp. path:  lastRemoved
                      value sym:  R144:bv256
                    # local storage change -1086578284
                [Store, 2071723781] Store at Ao.lastRemoved ↪ 1
                    # snippet LoadSnippet -1508117129 ;
                     disp. path:  operationCount
                      value sym:  CANON129!!12:bv256
                    # local storage change -1508117129
                [Load, 1596304208] Load from Ao.operationCount ↪ 0
                [Start, 1522649614] Evaluate branch condition
                    # snippet StoreSnippet 1959232113 ;
                     disp. path:  operationCount
                      value sym:  R392:bv256
                    # local storage change 1959232113
                [Store, 2043177246] Store at Ao.operationCount ↪ 1
                [Return, 1575953141] Return
        [LabelInstance, 794983731] assert a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j])) && (forall uint256 i. to_mathint(i) < ghostAoLength => ghostIndexPosition[ghostActiveIndices[i]] == i)
                # snippet DirectStorageLoad -954878427 ;
                 disp. path:  totalSum
                  value sym:  R325:bv256
                # local storage change -954878427
            [Load, 2074559339] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad 75176874 ;
                 disp. path:  totalSum
                  value sym:  R385:bv256
                # local storage change 75176874
            [Load, 1100826008] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad 1729873099 ;
                 disp. path:  elementCount
                  value sym:  CANON102!!329:bv256
                # local storage change 1729873099
            [Load, 1698774996] Load from A.elementCount ↪ 0
                # snippet DirectStorageLoad 1664041747 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!389:bv256
                # local storage change 1664041747
            [Load, 1500929450] Load from Ao.elementCount ↪ 0
                # snippet DirectStorageLoad 944531314 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944531314
            [Load, 403431924] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653219378 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653219378
            [Load, 856807144] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad 895361770 ;
                 disp. path:  lastRemoved
                  value sym:  R111:bv256
                # local storage change 895361770
            [Load, 1606607041] Load from A.lastRemoved ↪ 1
                # snippet DirectStorageLoad -651206423 ;
                 disp. path:  lastRemoved
                  value sym:  R144:bv256
                # local storage change -651206423
            [Load, 875720094] Load from Ao.lastRemoved ↪ 1
                # snippet DirectStorageLoad 863447329 ;
                 disp. path:  operationCount
                  value sym:  CANON126!!333:bv256
                # local storage change 863447329
            [Load, 1936801453] Load from A.operationCount ↪ 1
                # snippet DirectStorageLoad 797616041 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!393:bv256
                # local storage change 797616041
            [Load, 1323962557] Load from Ao.operationCount ↪ 1
            [CVLExpInstance, 115746121] Ghost read: ghostALength ↪ 0x994
            [CVLExpInstance, 564127382] Ghost read: ghostAoLength ↪ 0x994
                # snippet DirectStorageLoad 849425630 ;
                 disp. path:  values
                  value sym:  CANON140!!322:bv256
                # local storage change 849425630
            [Load, 1533096030] Load from A.values ↪ 0x994
                # snippet DirectStorageLoad 1580533710 ;
                 disp. path:  activeIndices
                  value sym:  CANON143!!382:bv256
                # local storage change 1580533710
            [Load, 1167109239] Load from Ao.activeIndices ↪ 0x994
[LabelInstance, 1919620577] assert false
    [StorageTitleInstance, 740226668] Global State
        [StorageTitleInstance, 2125451377] Storage State
            [StorageTitleInstance, 1042036935] A
                [StorageStateValueInstance, 343074552] elementCount: 0 (changed)
                [StorageStateValueInstance, 1325715340] lastAdded: 0
                [StorageStateValueInstance, 1328067141] lastRemoved: 1 (changed)
                [StorageStateValueInstance, 271409511] operationCount: 1 (changed)
                [StorageStateValueInstance, 325783740] totalSum: 0 (changed)
                [StorageStateValueInstance, 2054870514] values: 0x994 (changed)
                [StorageStateValueInstance, 1892346466] values[0x993]: 0 (changed)
                [StorageStateValueInstance, 186092357] values[0x994]: 0 (changed)
            [StorageTitleInstance, 1077056619] Ao
                [StorageStateValueInstance, 1825250522] activeIndices: 0x994 (changed)
                [StorageStateValueInstance, 1274372827] activeIndices[0x993]: 0x2711 (changed)
                [StorageStateValueInstance, 2081391939] activeIndices[0x994]: 0 (changed)
                [StorageStateValueInstance, 684377957] elementCount: 0 (changed)
                [StorageStateValueInstance, 475214698] indexPosition[0x2711]: 0x993 (changed)
                [StorageStateValueInstance, 2085644673] indexPosition[0x44ac]: 0 (changed)
                [StorageStateValueInstance, 2096484053] lastAdded: 0
                [StorageStateValueInstance, 49995713] lastRemoved: 1 (changed)
                [StorageStateValueInstance, 129459351] operationCount: 1 (changed)
                [StorageStateValueInstance, 2027166081] totalSum: 0 (changed)
                [StorageStateValueInstance, 713421608] values[0x44ac]: 0 (changed)
        [StorageTitleInstance, 2127902062] Balances
            [BalanceValueInstance, 1123706367] A (0x3f9c).balance: 0x1ade
            [BalanceValueInstance, 440034352] Ao (0x3f9d).balance: 0x1adf
        [StorageTitleInstance, 530831596] Ghosts State
            [GhostValueInstance, 1217060915] ghostALength: 0x994 (changed)
            [GhostValueInstance, 1506713920] ghostAValues[0x993]: 0 (changed)
            [GhostValueInstance, 278676909] ghostAValues[0x994]: 0 (changed)
            [GhostValueInstance, 301566954] ghostActiveIndices[0x993]: 0x2711 (changed)
            [GhostValueInstance, 242051742] ghostActiveIndices[0x994]: 0 (changed)
            [GhostValueInstance, 570760882] ghostAoLength: 0x994 (changed)
            [GhostValueInstance, 1355187826] ghostAoValues[0x44ac]: 0 (changed)
            [GhostValueInstance, 222163291] ghostIndexPosition[0x2711]: 0x993 (changed)
            [GhostValueInstance, 1759597560] ghostIndexPosition[0x44ac]: 0 (changed)
    -------- CVL model begin ------------
    -- type: bool --
    CANON11!!169                                  ~~> false
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON305!!273                                 ~~>  true
       cvl                 : true
    CANON318!!285                                 ~~>  true
       cvl                 : true
    CANON4!!161                                   ~~> false
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON290!!262                                 ~~>  true
       cvl                 : true
    CANON287!!259                                 ~~>  true
       cvl                 : true
    CANON279!!253                                 ~~>  true
       cvl                 : true
    CANON3!!77                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON4!!78                                    ~~> false
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON5!!79                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON6!!81                                    ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON12!!170                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON322!!287                                 ~~>  true
       cvl                 : true
    CANON314!!282                                 ~~>  true
       cvl                 : true
    CANON5!!162                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON101                                      ~~>  true
       cvl                 : true
    CANON108                                      ~~>  true
       cvl                 : true
    CANON109                                      ~~>  true
       cvl                 : true
    CANON114                                      ~~>  true
       cvl                 : true
    CANON117                                      ~~>  true
       cvl                 : true
    CANON124                                      ~~>  true
       cvl                 : true
    CANON125                                      ~~>  true
       cvl                 : true
    CANON132                                      ~~>  true
       cvl                 : true
    CANON133                                      ~~>  true
       cvl                 : true
    CANON138                                      ~~>  true
       cvl                 : true
    CANON139                                      ~~>  true
       cvl                 : true
    CANON146                                      ~~>  true
       cvl                 : true
    CANON147                                      ~~>  true
       cvl                 : true
    CANON153                                      ~~>  true
       cvl                 : true
    CANON157                                      ~~>  true
       cvl                 : true
    CANON161                                      ~~>  true
       cvl                 : true
    CANON162                                      ~~>  true
       cvl                 : true
    CANON194                                      ~~>  true
       cvl                 : true
    CANON196                                      ~~>  true
       cvl                 : true
    CANON200                                      ~~>  true
       cvl                 : true
    CANON202                                      ~~>  true
       cvl                 : true
    CANON206                                      ~~>  true
       cvl                 : true
    CANON239                                      ~~>  true
       cvl                 : true
    CANON241                                      ~~>  true
       cvl                 : true
    CANON245                                      ~~>  true
       cvl                 : true
    CANON251                                      ~~>  true
       cvl                 : true
    CANON253                                      ~~>  true
       cvl                 : true
    CANON256                                      ~~>  true
       cvl                 : true
    CANON259                                      ~~>  true
       cvl                 : true
    CANON272                                      ~~>  true
       cvl                 : true
    CANON328                                      ~~>  true
       cvl                 : true
    CANON339                                      ~~>  true
       cvl                 : true
    CANON342                                      ~~>  true
       cvl                 : true
    CANON344                                      ~~>  true
       cvl                 : true
    CANON296!!266                                 ~~>  true
       cvl                 : true
    CANON13!!172                                  ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON315!!283                                 ~~>  true
       cvl                 : true
    CANON6!!164                                   ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON10!!84                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON11!!85                                   ~~> false
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON12!!86                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON13!!88                                   ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON48                                       ~~>  true
       cvl                 : true
    CANON51                                       ~~>  true
       cvl                 : true
    CANON58                                       ~~>  true
       cvl                 : true
    CANON63                                       ~~>  true
       cvl                 : true
    CANON68                                       ~~>  true
       cvl                 : true
    CANON73                                       ~~>  true
       cvl                 : true
    CANON78                                       ~~>  true
       cvl                 : true
    CANON83                                       ~~>  true
       cvl                 : true
    CANON88                                       ~~>  true
       cvl                 : true
    CANON93                                       ~~>  true
       cvl                 : true
    CANON94                                       ~~>  true
       cvl                 : true
    CANON308!!276                                 ~~>  true
       cvl                 : true
    CANON293!!263                                 ~~>  true
       cvl                 : true
    CANON10!!168                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON304!!272                                 ~~>  true
       cvl                 : true
    CANON325!!289                                 ~~>  true
       cvl                 : true
    CANON309!!277                                 ~~>  true
       cvl                 : true
    CANON3!!160                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON286!!258                                 ~~>  true
       cvl                 : true
    CANON299!!267                                 ~~>  true
       cvl                 : true
    -- type: int --
    CANON!!159                                    ~~>                                                         0x32fa92b2
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON9!!173                                   ~~>                                                             0x3f9d
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON1!!55                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON1!!80                                    ~~>                                                                0x1
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON2!!56                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON2!!82                                    ~~>                                                             0x3f9c
       cvl                 : true
       cvl.display         : f
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON7!!61                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON7!!83                                    ~~>                                                         0x32fa92b2
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON8!!62                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON8!!87                                    ~~>                                                                0x1
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON9!!63                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON9!!89                                    ~~>                                                             0x3f9d
       cvl                 : true
       cvl.display         : g
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON136!!383                                 ~~>                                                              0x994
       cvl                 : true
       cvl.display         : ghostAoLength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON1!!163                                   ~~>                                                                0x1
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON134!!13                                  ~~>                                                              0x995
       cvl                 : true
       cvl.display         : ghostALength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON!!67                                     ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON!!76                                     ~~>                                                         0x32fa92b2
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON136!!14                                  ~~>                                                              0x995
       cvl                 : true
       cvl.display         : ghostAoLength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON24                                       ~~>                                                             0x3f9d
       cvl                 : true
       cvl.display         : eA.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON25                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON26                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON27                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON28                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON29                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON30                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON31                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON32                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON33                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON34                                       ~~>                                                             0x3f9d
       cvl                 : true
       cvl.display         : eAo.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON35                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON36                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON37                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON38                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON39                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON40                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON41                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON42                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON43                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON2!!165                                   ~~>                                                             0x3f9c
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:147:43)
    CANON7!!167                                   ~~>                                                         0x32fa92b2
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    CANON134!!323                                 ~~>                                                              0x994
       cvl                 : true
       cvl.display         : ghostALength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON8!!171                                   ~~>                                                                0x1
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:147:53)
    -- type: bytemap --
    CANON167havocme17923                          ~~> {[x:bv256] ->
  Ite(
    x:bv256 == 0x4
    0x993
    0x0
  )
}
       cvl                 : true
       cvl.display         : args
       cvl.type            : calldataarg
       cvl.def.site        : Function(range=mappingarray.spec:118:5)
    -- type: bv256 --
    CANON164                                      ~~>                                                               0x24
       cvl                 : true
       cvl.display         : args.length
       cvl.type            : uint256
       cvl.def.site        : Function(range=mappingarray.spec:118:5)
    -------- CVL model end --------------
    -------- TAC model begin ------------
      OK_4_0_0_0_0_0:bool  -->                                                              false
      ReachabilityCertora3799_1016_0_2_0_3:bool  -->                                                              false
      CANON11!!169:bool  -->                                                              false
      ReachabilityCertora3_0_0_1_0_10:bool  -->                                                               true
      ReachabilityCertora1482_1020_0_2_0_5:bool  -->                                                               true
      tacCalldatabufCANON0@2:bv256  -->                                                                0x0
      tacCalldatabufCANON0@3:bv256  -->                                                                0x0
      tacCalldatabufCANON1@2:bv256  -->                                                              0x993
      tacCalldatabufCANON1@3:bv256  -->                                                              0x993
       CANON!!159:int  -->                                                         0x32fa92b2
      ReachabilityCertora1399_1020_0_2_0_4:bool  -->                                                               true
      from_skey:ghostmap((uninterp) skey->bv256)  -->                                          {[x:bv256] ->
  x:bv256
}
      CANON305!!273:bool  -->                                                               true
      sklm!certora__j_312025!callId0!42:bv256  -->                                                              0x993
      tacM0x40!!0:bv256  -->                                                                0x0
      tacM0x40!!1:bv256  -->                                                                0x0
      CANON318!!285:bool  -->                                                               true
      CANON122!!390:bv256  -->                                                                0x1
      CANON4!!161:bool  -->                                                              false
      CANON290!!262:bool  -->                                                               true
      CANON143!!382:bv256  -->                                                              0x994
      CANON9!!173:int  -->                                                             0x3f9d
      CANON119!!330:bv256  -->                                                                0x1
      to_skey:ghostmap(bv256->(uninterp) skey)  -->                                          {[x:bv256] ->
  x:bv256
}
      CANON287!!259:bool  -->                                                               true
       CANON1!!55:int  -->                                                                0x0
       CANON1!!80:int  -->                                                                0x1
      CANON279!!253:bool  -->                                                               true
       CANON2!!56:int  -->                                                                0x0
       CANON2!!82:int  -->                                                             0x3f9c
      CANON3!!77:bool  -->                                                              false
      CANON4!!78:bool  -->                                                              false
      CANON5!!79:bool  -->                                                              false
      CANON6!!81:bool  -->                                                              false
       CANON7!!61:int  -->                                                                0x0
       CANON7!!83:int  -->                                                         0x32fa92b2
       CANON8!!62:int  -->                                                                0x0
       CANON8!!87:int  -->                                                                0x1
       CANON9!!63:int  -->                                                                0x0
       CANON9!!89:int  -->                                                             0x3f9d
      CANON12!!170:bool  -->                                                              false
      ReachabilityCertora0_0_0_0_0_0:bool  -->                                                               true
      ReachabilityCertora0_0_0_2_0_2:bool  -->                                                               true
      ReachabilityCertora0_0_0_3_0_7:bool  -->                                                               true
      CANON322!!287:bool  -->                                                               true
      CANON314!!282:bool  -->                                                               true
      ReachabilityCertora1_0_0_1_0_1:bool  -->                                                               true
      CANON96!!38:bv256  -->                                                                0x1
      CANON167havocme17923:bytemap  -->    {[x:bv256] ->
  Ite(
    x:bv256 == 0x4
    0x993
    0x0
  )
}
      CANON102!!329:bv256  -->                                                                0x0
      OK_3_0_0_1_0_10:bool  -->                                                              false
      CANON96!!326:bv256  -->                                                                0x0
      CANON99!!39:bv256  -->                                                                0x1
      ReachabilityCertora2_0_0_1_0_6:bool  -->                                                               true
      CANON5!!162:bool  -->                                                              false
        CANON101:bool  -->                                                               true
        CANON108:bool  -->                                                               true
        CANON109:bool  -->                                                               true
        CANON114:bool  -->                                                               true
        CANON117:bool  -->                                                               true
        CANON124:bool  -->                                                               true
        CANON125:bool  -->                                                               true
        CANON132:bool  -->                                                               true
        CANON133:bool  -->                                                               true
        CANON138:bool  -->                                                               true
        CANON139:bool  -->                                                               true
        CANON146:bool  -->                                                               true
        CANON147:bool  -->                                                               true
        CANON153:bool  -->                                                               true
        CANON157:bool  -->                                                               true
        CANON161:bool  -->                                                               true
        CANON162:bool  -->                                                               true
       CANON164:bv256  -->                                                               0x24
       CANON169:bv256  -->                                                                0x0
        CANON194:bool  -->                                                               true
        CANON196:bool  -->                                                               true
         CANON199:int  -->                                                                0x1
        CANON200:bool  -->                                                               true
        CANON202:bool  -->                                                               true
        CANON206:bool  -->                                                               true
         CANON208:int  -->                                                                0x0
       CANON215:bv256  -->                                                                0x0
        CANON239:bool  -->                                                               true
        CANON241:bool  -->                                                               true
         CANON244:int  -->                                                             0x44ac
        CANON245:bool  -->                                                               true
         CANON250:int  -->                                                                0x1
        CANON251:bool  -->                                                               true
        CANON253:bool  -->                                                               true
        CANON256:bool  -->                                                               true
         CANON258:int  -->                                                             0x2711
        CANON259:bool  -->                                                               true
         CANON263:int  -->                                                                0x0
         CANON269:int  -->                                                                0x0
        CANON272:bool  -->                                                               true
         CANON274:int  -->                                                                0x0
        CANON328:bool  -->                                                               true
         CANON330:int  -->                                                             0x2711
         CANON335:int  -->                                                              0x993
        CANON339:bool  -->                                                               true
         CANON341:int  -->                                                                0x0
        CANON342:bool  -->                                                               true
        CANON344:bool  -->                                                               true
         CANON346:int  -->                                                                0x0
      CANON136!!383:int  -->                                                              0x994
      CANON122!!10:bv256  -->                                                                0x0
      OK_1865_1018_0_3_0_8:bool  -->                                                              false
      CANON296!!266:bool  -->                                                               true
      ReachabilityCertora4_0_0_0_0_0:bool  -->                                                               true
      CANON126!!11:bv256  -->                                                                0x0
      CANON129!!12:bv256  -->                                                                0x0
      sklm!certora__i_412179!callId0!44:bv256  --> 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1e6
      CANON13!!172:bool  -->                                                              false
      tacCalldatabuf@2:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) Eq(arg0:bv256 0x4))
    0x993
    0x0
  )
}
      tacCalldatabuf@3:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) Eq(arg0:bv256 0x4))
    0x993
    0x0
  )
}
      CANON315!!283:bool  -->                                                               true
             R2:bv256  -->                                                                0x1
             R3:bv256  -->                                                                0x1
             B74:bool  -->                                                               true
            R51:bv256  -->                                                             0x3f9d
            R52:bv256  -->                                                                0x1
            R53:bv256  -->                                                                0x2
            R54:bv256  -->                                                                0x4
            R64:bv256  -->                                                             0x3f9c
            R68:bv256  -->                                                                0x1
            R69:bv256  -->                                                                0x1
            R71:bv256  -->                                                                0x1
            R72:bv256  -->                                                                0x1
            R92:bv256  -->                                                             0x3f9d
            R94:bv256  -->                                                             0x1adf
            R97:bv256  -->                                                             0x1ade
            R99:bv256  -->                                                             0x1ade
      ReachabilityCertora1810_1018_0_3_0_9:bool  -->                                                               true
      CANON1!!163:int  -->                                                                0x1
            B118:bool  -->                                                              false
            B157:bool  -->                                                              false
            B236:bool  -->                                                               true
            B237:bool  -->                                                               true
            B238:bool  -->                                                               true
            B284:bool  -->                                                               true
            B286:bool  -->                                                               true
            B288:bool  -->                                                               true
            B290:bool  -->                                                              false
             I104:int  -->                                                              0x995
             I107:int  -->                                                              0x995
             I112:int  -->                                                              0x993
             I115:int  -->                                                              0x995
             I132:int  -->                                                              0x995
             I135:int  -->                                                              0x995
             I140:int  -->                                                              0x993
             I145:int  -->                                                             0x44ac
             I147:int  -->                                                              0x995
             I151:int  -->                                                              0x995
             I156:int  -->                                                              0x994
             I175:int  -->                                                             0x3f9d
             I177:int  -->                                                             0x3f9d
             I178:int  -->                                                                0x0
             I179:int  -->                                                                0x0
             I181:int  -->                                                                0x0
             I183:int  -->                                                                0x0
             I185:int  -->                                                                0x0
             I187:int  -->                                                                0x0
             I189:int  -->                                                                0x0
             I191:int  -->                                                                0x0
             I193:int  -->                                                                0x0
             I195:int  -->                                                                0x0
             I197:int  -->                                                                0x0
             I199:int  -->                                                                0x0
             I201:int  -->                                                                0x0
             I203:int  -->                                                                0x0
             I205:int  -->                                                                0x0
             I207:int  -->                                                                0x0
             I209:int  -->                                                                0x0
             I211:int  -->                                                                0x0
             I230:int  -->                                                              0x995
             I231:int  -->                                                              0x995
             I274:int  -->                                                              0x994
             I275:int  -->                                                              0x994
             I294:int  -->                                                              0x995
             I299:int  -->                                                              0x994
             I301:int  -->                                                              0x995
             I307:int  -->                                                              0x993
             I313:int  -->                                                              0x995
             I319:int  -->                                                              0x994
             I337:int  -->                                                              0x995
             I343:int  -->                                                              0x993
             I351:int  -->                                                             0x2711
             I362:int  -->                                                             0x44ac
             I370:int  -->                                                             0x44ac
             I373:int  -->                                                              0x995
             I379:int  -->                                                              0x994
           R101:bv256  -->                                                                0x1
      R109:(uninterp) skey  -->                                                             0x2fb4
      R110:(uninterp) skey  -->                                                             0x3947
           R111:bv256  -->                                                                0x1
           R116:bv256  -->                                                              0x994
           R121:bv256  -->                                                             0x3f9d
           R123:bv256  -->                                                             0x1adf
           R126:bv256  -->                                                             0x1adf
           R128:bv256  -->                                                             0x1adf
           R129:bv256  -->                                                                0x1
      R137:(uninterp) skey  -->                                                             0x2957
      R138:(uninterp) skey  -->                                                             0x32ea
           R139:bv256  -->                                                             0x44ac
      R142:(uninterp) skey  -->                                                             0x49a8
           R144:bv256  -->                                                                0x1
           R148:bv256  -->                                                              0x994
      R153:(uninterp) skey  -->                                                             0x2957
      R154:(uninterp) skey  -->                                                             0x32eb
           R155:bv256  -->                                                             0x2711
           R243:bv256  -->                                                                0x0
           R244:bv256  -->                                                              0x993
           R249:bv256  -->                                                                0x0
           R250:bv256  -->                                                              0x993
           R291:bv256  -->                                                              0x994
      R296:(uninterp) skey  -->                                                             0x2fb4
      R297:(uninterp) skey  -->                                                             0x3948
           R298:bv256  -->                                                                0x0
      R303:(uninterp) skey  -->                                                             0x2fb4
      R304:(uninterp) skey  -->                                                             0x3947
           R305:bv256  -->                                                                0x1
           R314:bv256  -->                                                              0x994
      R315:(uninterp) skey  -->                                                             0x2fb4
      R316:(uninterp) skey  -->                                                             0x3948
           R317:bv256  -->                                                                0x0
           R325:bv256  -->                                                                0x0
           R328:bv256  -->                                                                0x0
           R332:bv256  -->                                                                0x1
      R339:(uninterp) skey  -->                                                             0x2957
      R340:(uninterp) skey  -->                                                             0x32ea
           R341:bv256  -->                                                             0x44ac
           R346:bv256  -->                                                                0x2
      R347:(uninterp) skey  -->                                                             0x47be
           R349:bv256  -->                                                                0x0
      R358:(uninterp) skey  -->                                                             0x49a8
           R360:bv256  -->                                                                0x1
           R365:bv256  -->                                                                0x2
      R366:(uninterp) skey  -->                                                             0x47bf
           R368:bv256  -->                                                                0x0
           R374:bv256  -->                                                              0x994
      R375:(uninterp) skey  -->                                                             0x2957
      R376:(uninterp) skey  -->                                                             0x32eb
           R377:bv256  -->                                                             0x2711
           R385:bv256  -->                                                                0x0
           R388:bv256  -->                                                                0x0
           R392:bv256  -->                                                                0x1
      lastHasThrown!!119:bool  -->                                                              false
      lastHasThrown!!334:bool  -->                                                              false
      lastHasThrown!!394:bool  -->                                                              false
      CANON140!!322:bv256  -->                                                              0x994
      CANON6!!164:bool  -->                                                              false
      CANON129!!393:bv256  -->                                                                0x1
      CANON134!!13:int  -->                                                              0x995
        CANON!!67:int  -->                                                                0x0
        CANON!!76:int  -->                                                         0x32fa92b2
      CANON136!!14:int  -->                                                              0x995
      CANON10!!84:bool  -->                                                              false
      CANON102!!5:bv256  -->                                                                0x1
      CANON105!!6:bv256  -->                                                                0x1
      CANON11!!85:bool  -->                                                              false
      CANON111!!7:bv256  -->                                                                0x0
      CANON113!!8:bv256  -->                                                                0x0
      lastReverted!!335:bool  -->                                                              false
      lastReverted!!395:bool  -->                                                              false
      CANON119!!9:bv256  -->                                                                0x0
      CANON12!!86:bool  -->                                                              false
      sklm!certora__i_212022!callId0!43:bv256  -->                                                              0x994
      CANON13!!88:bool  -->                                                              false
          CANON24:int  -->                                                             0x3f9d
          CANON25:int  -->                                                                0x0
          CANON26:int  -->                                                                0x0
          CANON27:int  -->                                                                0x0
          CANON28:int  -->                                                                0x0
          CANON29:int  -->                                                                0x0
          CANON30:int  -->                                                                0x0
          CANON31:int  -->                                                                0x0
          CANON32:int  -->                                                                0x0
          CANON33:int  -->                                                                0x0
          CANON34:int  -->                                                             0x3f9d
          CANON35:int  -->                                                                0x0
          CANON36:int  -->                                                                0x0
          CANON37:int  -->                                                                0x0
          CANON38:int  -->                                                                0x0
          CANON39:int  -->                                                                0x0
          CANON40:int  -->                                                                0x0
          CANON41:int  -->                                                                0x0
          CANON42:int  -->                                                                0x0
          CANON43:int  -->                                                                0x0
         CANON48:bool  -->                                                               true
         CANON51:bool  -->                                                               true
         CANON58:bool  -->                                                               true
         CANON63:bool  -->                                                               true
         CANON68:bool  -->                                                               true
         CANON73:bool  -->                                                               true
         CANON78:bool  -->                                                               true
         CANON83:bool  -->                                                               true
         CANON88:bool  -->                                                               true
         CANON93:bool  -->                                                               true
         CANON94:bool  -->                                                               true
      ReachabilityCertora1865_1018_0_3_0_8:bool  -->                                                               true
      sklm!certora__i_111896!callId0!41:bv256  -->                                                              0x994
      CANON308!!276:bool  -->                                                               true
      CANON2!!165:int  -->                                                             0x3f9c
      CANON7!!167:int  -->                                                         0x32fa92b2
      CANON293!!263:bool  -->                                                               true
      OK_1482_1020_0_2_0_5:bool  -->                                                              false
      CANON140!!15:bv256  -->                                                              0x995
      CANON143!!16:bv256  -->                                                              0x995
      CANON10!!168:bool  -->                                                              false
      OK_0_0_0_0_0_0:bool  -->                                                              false
      CANON304!!272:bool  -->                                                               true
      lastHasThrown!!90:bool  -->                                                              false
      OK_0_0_0_2_0_2:bool  -->                                                              false
      ReachabilityCertora0_0_0_3_0_3393:bool  -->                                                              false
      OK_0_0_0_3_0_7:bool  -->                                                              false
      CANON325!!289:bool  -->                                                               true
      CANON309!!277:bool  -->                                                               true
      OK_1_0_0_1_0_1:bool  -->                                                              false
      CANON3!!160:bool  -->                                                              false
      CANON105!!389:bv256  -->                                                                0x0
      CANON99!!386:bv256  -->                                                                0x0
      CANON134!!323:int  -->                                                              0x994
      tacSighash!!65:bv256  -->                                                         0x32fa92b2
      tacSighash!!66:bv256  -->                                                         0x32fa92b2
      OK_2_0_0_1_0_6:bool  -->                                                              false
      CANON126!!333:bv256  -->                                                                0x1
      CANON8!!171:int  -->                                                                0x1
      CANON286!!258:bool  -->                                                               true
      CANON299!!267:bool  -->                                                               true
    -------- TAC model end --------------
    
