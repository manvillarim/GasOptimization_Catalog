Calltrace Debug Information
[StorageTitleInstance, 1968833877] Global State
    [StorageTitleInstance, 1364178237] Storage State
        [StorageTitleInstance, 840216482] A
            [StorageStateValueInstance, 1626519026] elementCount: 0
            [StorageStateValueInstance, 1160213524] lastAdded: 0
            [StorageStateValueInstance, 1768802256] lastRemoved: 0
            [StorageStateValueInstance, 2115177696] operationCount: 0
            [StorageStateValueInstance, 188443637] totalSum: 0
            [StorageStateValueInstance, 1975658834] values: 536
            [StorageStateValueInstance, 1914053501] values[535]: 0
        [StorageTitleInstance, 335828435] Ao
            [StorageStateValueInstance, 1144057957] activeIndices: 536
            [StorageStateValueInstance, 542951688] activeIndices[535]: 0x2ffb
            [StorageStateValueInstance, 1670519733] elementCount: 0
            [StorageStateValueInstance, 1427009753] lastAdded: 0
            [StorageStateValueInstance, 377360837] lastRemoved: 0
            [StorageStateValueInstance, 1345101451] operationCount: 0
            [StorageStateValueInstance, 596670600] totalSum: 0
            [StorageStateValueInstance, 87968923] values[0x2ffb]: 0
    [StorageTitleInstance, 1671988672] Balances
        [BalanceValueInstance, 1472501752] 0x47bf.balance: 0x4123
        [BalanceValueInstance, 1999692208] A (0x2c0b).balance: 0
        [BalanceValueInstance, 10297689] Ao (0x2c0c).balance: 0x4122
    [StorageTitleInstance, 658256399] Ghosts State
        [GhostValueInstance, 1421085255] ghostALength: 536
        [GhostValueInstance, 611933184] ghostAValues[535]: 0
        [GhostValueInstance, 1300706879] ghostActiveIndices[535]: 0x2ffb
        [GhostValueInstance, 191744458] ghostAoLength: 536
        [GhostValueInstance, 2139032786] ghostAoValues[0x2ffb]: 0
[LabelInstance, 294176353] Setup
    [LabelInstance, 1699364001] multi contract setup
    [LabelInstance, 9214555] rule parameters setup
    [LabelInstance, 118628100] contract address vars initialized
    [LabelInstance, 1358854729] setup read tracking instrumentation
    [LabelInstance, 1692793795] last storage initialize
    [LabelInstance, 14674758] assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero
    [LabelInstance, 388120166] assuming address(0).code has no code deployed
    [LabelInstance, 875373305] assumptions about contracts' addresses
    [LabelInstance, 2136865884] assumptions about static addresses
    [LabelInstance, 2600234] establish addresses of precompiled contracts
    [LabelInstance, 116417094] assumptions about uniqueness of contracts' addresses
    [LabelInstance, 1536664203] static links
    [LabelInstance, 1270356665] record starting nonces
    [LabelInstance, 1984667673] cloned contracts have no balances
    [LabelInstance, 1940655812] Linked immutable setup
    [LabelInstance, 357132736] Constrain immutables
    [LabelInstance, 514835458] establish equivalence of extension and base contract immutables
[LabelInstance, 894428326] gasOptimizationCorrectness(f, g)
    [CVLFunc, 637929189] 1 ; gasOptimizationCorrectness ; []; [] ; {} : [] 
        gasOptimizationCorrectness()
        [LabelInstance, 2027908236] env eA
        [LabelInstance, 405809217] env eAo
        [LabelInstance, 1385202997] calldataarg args
        [LabelInstance, 1152880812] require eA == eAo && (a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j])) && (forall uint256 i. to_mathint(i) < ghostAoLength => ghostIndexPosition[ghostActiveIndices[i]] == i))
                # snippet DirectStorageLoad -1834372961 ;
                 disp. path:  totalSum
                  value sym:  CANON96!!31:bv256
                # local storage change -1834372961
            [Load, 1192177594] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad 2096196987 ;
                 disp. path:  totalSum
                  value sym:  CANON98!!32:bv256
                # local storage change 2096196987
            [Load, 1583641914] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad 150619953 ;
                 disp. path:  elementCount
                  value sym:  CANON103!!5:bv256
                # local storage change 150619953
            [Load, 134998766] Load from A.elementCount ↪ 0
                # snippet DirectStorageLoad 859308113 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!6:bv256
                # local storage change 859308113
            [Load, 1891711411] Load from Ao.elementCount ↪ 0
                # snippet DirectStorageLoad 944531314 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944531314
            [Load, 1317911278] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653219378 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653219378
            [Load, 859691936] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad -608547910 ;
                 disp. path:  lastRemoved
                  value sym:  CANON119!!9:bv256
                # local storage change -608547910
            [Load, 1689656243] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -957515160 ;
                 disp. path:  lastRemoved
                  value sym:  CANON121!!10:bv256
                # local storage change -957515160
            [Load, 499362359] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad 1661896583 ;
                 disp. path:  operationCount
                  value sym:  CANON127!!11:bv256
                # local storage change 1661896583
            [Load, 1052387755] Load from A.operationCount ↪ 0
                # snippet DirectStorageLoad 1297499427 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!12:bv256
                # local storage change 1297499427
            [Load, 1669793031] Load from Ao.operationCount ↪ 0
            [CVLExpInstance, 934863175] Ghost read: ghostALength ↪ 536
            [CVLExpInstance, 933914517] Ghost read: ghostAoLength ↪ 536
                # snippet DirectStorageLoad -2046981165 ;
                 disp. path:  values
                  value sym:  CANON140!!13:bv256
                # local storage change -2046981165
            [Load, 1479735226] Load from A.values ↪ 536
                # snippet DirectStorageLoad -1614438953 ;
                 disp. path:  activeIndices
                  value sym:  CANON142!!14:bv256
                # local storage change -1614438953
            [Load, 63340166] Load from Ao.activeIndices ↪ 536
        [LabelInstance, 1938031968] A.f(eA, args)
            [External, 402018890] A.getValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@2:bv256)])
                [TransferInstance, 1479993385] sender: 0x47bf; receiver: A (0x2c0b); transferred amount: 0
                    # snippet WithLocSym 1331295695 ;
                       loc sym:  R46:bv256
                     value sym:  R83:bv256
                [Load, 1756663783] Load from A.[raw storage address] A (0x2c0b) ↪ 1
                [Start, 994584724] Evaluate branch condition
                [Start, 503925173] Evaluate branch condition
                [LabelInstance, 1896979965] Apply hook load len := A.values.length
                    [LabelInstance, 1024913295] With parameters:
                        [LabelInstance, 1197505585] len = ?
                    [CVLExpInstance, 326156681] Ghost read: ghostALength ↪ 536
                    # snippet LoadSnippet -622567007 ;
                     disp. path:  values
                      value sym:  CANON140!!13:bv256
                    # local storage change -622567007
                [Load, 1853053039] Load from A.values ↪ 536
                [Start, 1679009977] Evaluate branch condition
                [LabelInstance, 542560766] Apply hook load len := A.values.length
                    [LabelInstance, 893333748] With parameters:
                        [LabelInstance, 1098626588] len = ?
                    [CVLExpInstance, 953452778] Ghost read: ghostALength ↪ 536
                    # snippet LoadSnippet -622546144 ;
                     disp. path:  values
                      value sym:  CANON140!!13:bv256
                    # local storage change -622546144
                [Load, 773547823] Load from A.values ↪ 536
                [Start, 1659853448] Evaluate branch condition
                [LabelInstance, 2126044063] Apply hook load val := A.values[INDEX uint256 k]
                    [LabelInstance, 1647812474] With parameters:
                        [LabelInstance, 392211980] k = 0x217
                        [LabelInstance, 264473970] val = ?
                    [CVLExpInstance, 924834614] Ghost read: ghostAValues[535] ↪ 0
                    # snippet LoadSnippet -1416760850 ;
                     disp. path:  values[i = R202:bv256]
                      value sym:  R93:bv256
                    # local storage change -1416760850
                [Load, 1762483936] Load from A.values[535] ↪ 0
                [Return, 2064620803] Return
        [LabelInstance, 1748252429] Ao.g(eAo, args)
            [External, 557553494] Ao.getValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@3:bv256)])
                [TransferInstance, 574760911] sender: 0x47bf; receiver: Ao (0x2c0c); transferred amount: 0
                    # snippet WithLocSym -833209034 ;
                       loc sym:  R33:bv256
                     value sym:  R107:bv256
                [Load, 623001857] Load from Ao.[raw storage address] Ao (0x2c0c) ↪ 1
                [Start, 1818724087] Evaluate branch condition
                [Start, 295382282] Evaluate branch condition
                [LabelInstance, 584322217] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 357133243] With parameters:
                        [LabelInstance, 1162418139] len = ?
                    [CVLExpInstance, 225607941] Ghost read: ghostAoLength ↪ 536
                    # snippet LoadSnippet -1585282555 ;
                     disp. path:  activeIndices
                      value sym:  CANON142!!14:bv256
                    # local storage change -1585282555
                [Load, 255948102] Load from Ao.activeIndices ↪ 536
                [Start, 1368114086] Evaluate branch condition
                [LabelInstance, 1559359875] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1158822321] With parameters:
                        [LabelInstance, 1098751760] len = ?
                    [CVLExpInstance, 1323623018] Ghost read: ghostAoLength ↪ 536
                    # snippet LoadSnippet -1585248796 ;
                     disp. path:  activeIndices
                      value sym:  CANON142!!14:bv256
                    # local storage change -1585248796
                [Load, 499806172] Load from Ao.activeIndices ↪ 536
                [Start, 1237389925] Evaluate branch condition
                [LabelInstance, 1684635986] Apply hook load val := Ao.activeIndices[INDEX uint256 k]
                    [LabelInstance, 225953799] With parameters:
                        [LabelInstance, 1124983546] k = 0x217
                        [LabelInstance, 35553988] val = ?
                    [CVLExpInstance, 710275268] Ghost read: ghostActiveIndices[535] ↪ 0x2ffb
                    # snippet LoadSnippet 136673870 ;
                     disp. path:  activeIndices[i = R208:bv256]
                      value sym:  R117:bv256
                    # local storage change 136673870
                [Load, 424751737] Load from Ao.activeIndices[535] ↪ 0x2ffb
                [LocalAssignmentInstance, 895949211] realIndex  ↪  0x2ffb
                [LabelInstance, 1134146897] Apply hook load val := Ao.values[KEY uint256 k]
                    [LabelInstance, 1188015670] With parameters:
                        [LabelInstance, 1453170284] k = 0x2ffb
                        [LabelInstance, 1530654437] val = ?
                    [CVLExpInstance, 1426521070] Ghost read: ghostAoValues[0x2ffb] ↪ 0
                    # snippet LoadSnippet -471420089 ;
                     disp. path:  values[k = R117:bv256]
                      value sym:  R122:bv256
                    # local storage change -471420089
                [Load, 1854095718] Load from Ao.values[0x2ffb] ↪ 0
                [Return, 1423428644] Return
        [LabelInstance, 1352621213] assert a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j])) && (forall uint256 i. to_mathint(i) < ghostAoLength => ghostIndexPosition[ghostActiveIndices[i]] == i)
                # snippet DirectStorageLoad -1834372961 ;
                 disp. path:  totalSum
                  value sym:  CANON96!!31:bv256
                # local storage change -1834372961
            [Load, 849614059] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad 2096196987 ;
                 disp. path:  totalSum
                  value sym:  CANON98!!32:bv256
                # local storage change 2096196987
            [Load, 1188621224] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad 150619953 ;
                 disp. path:  elementCount
                  value sym:  CANON103!!5:bv256
                # local storage change 150619953
            [Load, 738503099] Load from A.elementCount ↪ 0
                # snippet DirectStorageLoad 859308113 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!6:bv256
                # local storage change 859308113
            [Load, 106263314] Load from Ao.elementCount ↪ 0
                # snippet DirectStorageLoad 944531314 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944531314
            [Load, 340012159] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653219378 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653219378
            [Load, 364908788] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad -608547910 ;
                 disp. path:  lastRemoved
                  value sym:  CANON119!!9:bv256
                # local storage change -608547910
            [Load, 469777030] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -957515160 ;
                 disp. path:  lastRemoved
                  value sym:  CANON121!!10:bv256
                # local storage change -957515160
            [Load, 836769783] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad 1661896583 ;
                 disp. path:  operationCount
                  value sym:  CANON127!!11:bv256
                # local storage change 1661896583
            [Load, 74637920] Load from A.operationCount ↪ 0
                # snippet DirectStorageLoad 1297499427 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!12:bv256
                # local storage change 1297499427
            [Load, 295699882] Load from Ao.operationCount ↪ 0
            [CVLExpInstance, 208263442] Ghost read: ghostALength ↪ 536
            [CVLExpInstance, 1023879367] Ghost read: ghostAoLength ↪ 536
                # snippet DirectStorageLoad -2046981165 ;
                 disp. path:  values
                  value sym:  CANON140!!13:bv256
                # local storage change -2046981165
            [Load, 779463909] Load from A.values ↪ 536
                # snippet DirectStorageLoad -1614438953 ;
                 disp. path:  activeIndices
                  value sym:  CANON142!!14:bv256
                # local storage change -1614438953
            [Load, 1072263636] Load from Ao.activeIndices ↪ 536
[LabelInstance, 2097847922] assert false
    [StorageTitleInstance, 2035269636] Global State
        [StorageTitleInstance, 2061392204] Storage State
            [StorageTitleInstance, 248377362] A
                [StorageStateValueInstance, 656217783] elementCount: 0
                [StorageStateValueInstance, 542485936] lastAdded: 0
                [StorageStateValueInstance, 675910863] lastRemoved: 0
                [StorageStateValueInstance, 1239788724] operationCount: 0
                [StorageStateValueInstance, 100836241] totalSum: 0
                [StorageStateValueInstance, 188200652] values: 536
                [StorageStateValueInstance, 1866249353] values[535]: 0
            [StorageTitleInstance, 198714838] Ao
                [StorageStateValueInstance, 416612631] activeIndices: 536
                [StorageStateValueInstance, 786580759] activeIndices[535]: 0x2ffb
                [StorageStateValueInstance, 611329214] elementCount: 0
                [StorageStateValueInstance, 1858880371] lastAdded: 0
                [StorageStateValueInstance, 1579231748] lastRemoved: 0
                [StorageStateValueInstance, 1658263082] operationCount: 0
                [StorageStateValueInstance, 1193777946] totalSum: 0
                [StorageStateValueInstance, 1274842966] values[0x2ffb]: 0
        [StorageTitleInstance, 484109607] Balances
            [BalanceValueInstance, 1181146832] 0x47bf.balance: 0x4123
            [BalanceValueInstance, 1029857869] A (0x2c0b).balance: 0
            [BalanceValueInstance, 315346056] Ao (0x2c0c).balance: 0x4122
        [StorageTitleInstance, 1496561699] Ghosts State
            [GhostValueInstance, 701721995] ghostALength: 536
            [GhostValueInstance, 118293238] ghostAValues[535]: 0
            [GhostValueInstance, 1265508627] ghostActiveIndices[535]: 0x2ffb
            [GhostValueInstance, 265841405] ghostAoLength: 536
            [GhostValueInstance, 1029042616] ghostAoValues[0x2ffb]: 0
    -------- CVL model begin ------------
    -- type: bool --
    CANON11!!137                                  ~~>  true
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON4!!129                                   ~~>  true
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON282!!235                                 ~~>  true
       cvl                 : true
    CANON266!!223                                 ~~>  true
       cvl                 : true
    CANON279!!234                                 ~~>  true
       cvl                 : true
    CANON3!!59                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON4!!60                                    ~~>  true
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON5!!61                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON6!!63                                    ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON12!!138                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON254!!215                                 ~~>  true
       cvl                 : true
    CANON5!!130                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON246!!211                                 ~~>  true
       cvl                 : true
    CANON106                                      ~~>  true
       cvl                 : true
    CANON109                                      ~~>  true
       cvl                 : true
    CANON114                                      ~~>  true
       cvl                 : true
    CANON117                                      ~~>  true
       cvl                 : true
    CANON122                                      ~~>  true
       cvl                 : true
    CANON125                                      ~~>  true
       cvl                 : true
    CANON130                                      ~~>  true
       cvl                 : true
    CANON133                                      ~~>  true
       cvl                 : true
    CANON138                                      ~~>  true
       cvl                 : true
    CANON139                                      ~~>  true
       cvl                 : true
    CANON144                                      ~~>  true
       cvl                 : true
    CANON147                                      ~~>  true
       cvl                 : true
    CANON153                                      ~~>  true
       cvl                 : true
    CANON157                                      ~~>  true
       cvl                 : true
    CANON161                                      ~~>  true
       cvl                 : true
    CANON162                                      ~~>  true
       cvl                 : true
    CANON194                                      ~~>  true
       cvl                 : true
    CANON196                                      ~~>  true
       cvl                 : true
    CANON200                                      ~~>  true
       cvl                 : true
    CANON230                                      ~~>  true
       cvl                 : true
    CANON232                                      ~~>  true
       cvl                 : true
    CANON236                                      ~~>  true
       cvl                 : true
    CANON242                                      ~~>  true
       cvl                 : true
    CANON275!!230                                 ~~>  true
       cvl                 : true
    CANON13!!140                                  ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON263!!222                                 ~~>  true
       cvl                 : true
    CANON6!!132                                   ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON292!!241                                 ~~>  true
       cvl                 : true
    CANON276!!231                                 ~~>  true
       cvl                 : true
    CANON289!!239                                 ~~>  true
       cvl                 : true
    CANON10!!66                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON11!!67                                   ~~>  true
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON12!!68                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON13!!70                                   ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON48                                       ~~>  true
       cvl                 : true
    CANON51                                       ~~>  true
       cvl                 : true
    CANON58                                       ~~>  true
       cvl                 : true
    CANON63                                       ~~>  true
       cvl                 : true
    CANON68                                       ~~>  true
       cvl                 : true
    CANON73                                       ~~>  true
       cvl                 : true
    CANON78                                       ~~>  true
       cvl                 : true
    CANON83                                       ~~>  true
       cvl                 : true
    CANON88                                       ~~>  true
       cvl                 : true
    CANON93                                       ~~>  true
       cvl                 : true
    CANON94                                       ~~>  true
       cvl                 : true
    CANON99                                       ~~>  true
       cvl                 : true
    CANON251!!214                                 ~~>  true
       cvl                 : true
    CANON272!!227                                 ~~>  true
       cvl                 : true
    CANON285!!237                                 ~~>  true
       cvl                 : true
    CANON269!!226                                 ~~>  true
       cvl                 : true
    CANON10!!136                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON260!!219                                 ~~>  true
       cvl                 : true
    CANON3!!128                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON257!!218                                 ~~>  true
       cvl                 : true
    -- type: int --
    CANON!!127                                    ~~>                                                          0xff4c916
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON9!!141                                   ~~>                                                             0x2c0c
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON1!!37                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON1!!62                                    ~~>                                                                0x1
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON2!!38                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON2!!64                                    ~~>                                                             0x2c0b
       cvl                 : true
       cvl.display         : f
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON7!!43                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON7!!65                                    ~~>                                                          0xff4c916
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON8!!44                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON8!!69                                    ~~>                                                                0x1
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON9!!45                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON9!!71                                    ~~>                                                             0x2c0c
       cvl                 : true
       cvl.display         : g
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON134                                      ~~>                                                              0x218
       cvl                 : true
       cvl.display         : ghostALength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON136                                      ~~>                                                              0x218
       cvl                 : true
       cvl.display         : ghostAoLength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON1!!131                                   ~~>                                                                0x1
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON!!49                                     ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON!!58                                     ~~>                                                          0xff4c916
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON24                                       ~~>                                                             0x47bf
       cvl                 : true
       cvl.display         : eA.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON25                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON26                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON27                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON28                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON29                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON30                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON31                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON32                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON33                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:116:5)
    CANON34                                       ~~>                                                             0x47bf
       cvl                 : true
       cvl.display         : eAo.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON35                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON36                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON37                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON38                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON39                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON40                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON41                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON42                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON43                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:117:5)
    CANON2!!133                                   ~~>                                                             0x2c0b
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:155:40)
    CANON7!!135                                   ~~>                                                          0xff4c916
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    CANON8!!139                                   ~~>                                                                0x1
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:155:50)
    -- type: bytemap --
    CANON167havocme17485                          ~~> {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    0x217
  )
}
       cvl                 : true
       cvl.display         : args
       cvl.type            : calldataarg
       cvl.def.site        : Function(range=mappingarray.spec:118:5)
    -- type: bv256 --
    CANON164                                      ~~>                                                               0x24
       cvl                 : true
       cvl.display         : args.length
       cvl.type            : uint256
       cvl.def.site        : Function(range=mappingarray.spec:118:5)
    -------- CVL model end --------------
    -------- TAC model begin ------------
      OK_4_0_0_0_0_0:bool  -->                                                              false
      sklm!certora__j_311288!callId0!34:bv256  -->                                                              0x21a
      sklm!certora__i_411465!callId0!36:bv256  -->                                                              0x21b
      CANON11!!137:bool  -->                                                               true
      tacCalldatabufCANON0@2:bv256  -->                                                                0x0
      tacCalldatabufCANON0@3:bv256  -->                                                                0x0
      tacCalldatabufCANON1@2:bv256  -->                                                              0x217
      tacCalldatabufCANON1@3:bv256  -->                                                              0x217
       CANON!!127:int  -->                                                          0xff4c916
      from_skey:ghostmap((uninterp) skey->bv256)  -->                                          {[x:bv256] ->
  x:bv256
}
      tacM0x40!!0:bv256  -->                                                                0x0
      tacM0x40!!1:bv256  -->                                                                0x0
      CANON4!!129:bool  -->                                                               true
      CANON282!!235:bool  -->                                                               true
      CANON266!!223:bool  -->                                                               true
      CANON9!!141:int  -->                                                             0x2c0c
      to_skey:ghostmap(bv256->(uninterp) skey)  -->                                          {[x:bv256] ->
  x:bv256
}
       CANON1!!37:int  -->                                                                0x0
       CANON1!!62:int  -->                                                                0x1
      CANON279!!234:bool  -->                                                               true
       CANON2!!38:int  -->                                                                0x0
       CANON2!!64:int  -->                                                             0x2c0b
      CANON3!!59:bool  -->                                                              false
      CANON4!!60:bool  -->                                                               true
      CANON5!!61:bool  -->                                                              false
      CANON6!!63:bool  -->                                                              false
       CANON7!!43:int  -->                                                                0x0
       CANON7!!65:int  -->                                                          0xff4c916
       CANON8!!44:int  -->                                                                0x0
       CANON8!!69:int  -->                                                                0x1
       CANON9!!45:int  -->                                                                0x0
       CANON9!!71:int  -->                                                             0x2c0c
      CANON12!!138:bool  -->                                                              false
      ReachabilityCertora0_0_0_0_0_0:bool  -->                                                               true
      ReachabilityCertora0_0_0_2_0_2:bool  -->                                                               true
      ReachabilityCertora0_0_0_3_0_4:bool  -->                                                               true
      ReachabilityCertora1_0_0_1_0_1:bool  -->                                                               true
      CANON96!!31:bv256  -->                                                                0x0
      CANON167havocme17485:bytemap  -->    {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    0x217
  )
}
      CANON98!!32:bv256  -->                                                                0x0
      ReachabilityCertora2_0_0_1_0_3:bool  -->                                                               true
      CANON254!!215:bool  -->                                                               true
      CANON5!!130:bool  -->                                                              false
      sklm!certora__i_111227!callId0!33:bv256  -->                                                              0x218
      CANON246!!211:bool  -->                                                               true
        CANON106:bool  -->                                                               true
        CANON109:bool  -->                                                               true
        CANON114:bool  -->                                                               true
        CANON117:bool  -->                                                               true
        CANON122:bool  -->                                                               true
        CANON125:bool  -->                                                               true
        CANON130:bool  -->                                                               true
        CANON133:bool  -->                                                               true
         CANON134:int  -->                                                              0x218
         CANON136:int  -->                                                              0x218
        CANON138:bool  -->                                                               true
        CANON139:bool  -->                                                               true
        CANON144:bool  -->                                                               true
        CANON147:bool  -->                                                               true
        CANON153:bool  -->                                                               true
        CANON157:bool  -->                                                               true
        CANON161:bool  -->                                                               true
        CANON162:bool  -->                                                               true
       CANON164:bv256  -->                                                               0x24
       CANON169:bv256  -->                                                                0x0
        CANON194:bool  -->                                                               true
        CANON196:bool  -->                                                               true
         CANON199:int  -->                                                                0x0
        CANON200:bool  -->                                                               true
       CANON206:bv256  -->                                                                0x0
        CANON230:bool  -->                                                               true
        CANON232:bool  -->                                                               true
         CANON235:int  -->                                                             0x2ffb
        CANON236:bool  -->                                                               true
         CANON241:int  -->                                                                0x0
        CANON242:bool  -->                                                               true
      CANON275!!230:bool  -->                                                               true
      CANON121!!10:bv256  -->                                                                0x0
      ReachabilityCertora3_0_0_1_0_5:bool  -->                                                               true
      ReachabilityCertora4_0_0_0_0_0:bool  -->                                                               true
      CANON127!!11:bv256  -->                                                                0x0
      CANON129!!12:bv256  -->                                                                0x0
      CANON13!!140:bool  -->                                                              false
      tacCalldatabuf@2:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    0x217
    0x0
  )
}
      tacCalldatabuf@3:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    0x217
    0x0
  )
}
             R2:bv256  -->                                                                0x1
             R3:bv256  -->                                                                0x1
             B56:bool  -->                                                               true
              I86:int  -->                                                              0x218
              I89:int  -->                                                              0x218
              I94:int  -->                                                              0x217
            R33:bv256  -->                                                             0x2c0c
            R34:bv256  -->                                                                0x1
            R35:bv256  -->                                                                0x2
            R36:bv256  -->                                                                0x4
            R46:bv256  -->                                                             0x2c0b
            R50:bv256  -->                                                                0x1
            R51:bv256  -->                                                                0x1
            R53:bv256  -->                                                                0x1
            R54:bv256  -->                                                                0x1
            R74:bv256  -->                                                             0x47bf
            R76:bv256  -->                                                             0x4123
            R79:bv256  -->                                                                0x0
            R81:bv256  -->                                                                0x0
            R83:bv256  -->                                                                0x1
      R91:(uninterp) skey  -->                                                             0x2711
      R92:(uninterp) skey  -->                                                             0x2928
            R93:bv256  -->                                                                0x0
            R99:bv256  -->                                                             0x47bf
      CANON1!!131:int  -->                                                                0x1
            B194:bool  -->                                                               true
            B195:bool  -->                                                               true
            B196:bool  -->                                                               true
            B236:bool  -->                                                               true
            B238:bool  -->                                                               true
            B240:bool  -->                                                               true
            B242:bool  -->                                                              false
             I110:int  -->                                                              0x218
             I113:int  -->                                                              0x218
             I118:int  -->                                                              0x217
             I123:int  -->                                                             0x2ffb
             I143:int  -->                                                             0x47bf
             I145:int  -->                                                             0x47bf
             I146:int  -->                                                                0x0
             I147:int  -->                                                                0x0
             I149:int  -->                                                                0x0
             I151:int  -->                                                                0x0
             I153:int  -->                                                                0x0
             I155:int  -->                                                                0x0
             I157:int  -->                                                                0x0
             I159:int  -->                                                                0x0
             I161:int  -->                                                                0x0
             I163:int  -->                                                                0x0
             I165:int  -->                                                                0x0
             I167:int  -->                                                                0x0
             I169:int  -->                                                                0x0
             I171:int  -->                                                                0x0
             I173:int  -->                                                                0x0
             I175:int  -->                                                                0x0
             I177:int  -->                                                                0x0
             I179:int  -->                                                                0x0
             I190:int  -->                                                              0x218
             I191:int  -->                                                              0x218
             I228:int  -->                                                              0x218
             I229:int  -->                                                              0x218
           R101:bv256  -->                                                             0x4123
           R104:bv256  -->                                                             0x4122
           R106:bv256  -->                                                             0x4122
           R107:bv256  -->                                                                0x1
      R115:(uninterp) skey  -->                                                             0x9200
      R116:(uninterp) skey  -->                                                             0x9417
           R117:bv256  -->                                                             0x2ffb
      R120:(uninterp) skey  -->                                                             0x97d8
           R122:bv256  -->                                                                0x0
           R201:bv256  -->                                                                0x0
           R202:bv256  -->                                                              0x217
           R207:bv256  -->                                                                0x0
           R208:bv256  -->                                                              0x217
      lastHasThrown!!124:bool  -->                                                              false
      CANON263!!222:bool  -->                                                               true
      sklm!certora__i_211285!callId0!35:bv256  -->                                                              0x219
      CANON6!!132:bool  -->                                                              false
      CANON292!!241:bool  -->                                                               true
      CANON276!!231:bool  -->                                                               true
        CANON!!49:int  -->                                                                0x0
        CANON!!58:int  -->                                                          0xff4c916
      CANON289!!239:bool  -->                                                               true
      CANON10!!66:bool  -->                                                              false
      CANON103!!5:bv256  -->                                                                0x0
      CANON105!!6:bv256  -->                                                                0x0
      CANON11!!67:bool  -->                                                               true
      CANON111!!7:bv256  -->                                                                0x0
      CANON113!!8:bv256  -->                                                                0x0
      lastReverted!!125:bool  -->                                                              false
      CANON119!!9:bv256  -->                                                                0x0
      CANON12!!68:bool  -->                                                              false
      CANON13!!70:bool  -->                                                              false
          CANON24:int  -->                                                             0x47bf
          CANON25:int  -->                                                                0x0
          CANON26:int  -->                                                                0x0
          CANON27:int  -->                                                                0x0
          CANON28:int  -->                                                                0x0
          CANON29:int  -->                                                                0x0
          CANON30:int  -->                                                                0x0
          CANON31:int  -->                                                                0x0
          CANON32:int  -->                                                                0x0
          CANON33:int  -->                                                                0x0
          CANON34:int  -->                                                             0x47bf
          CANON35:int  -->                                                                0x0
          CANON36:int  -->                                                                0x0
          CANON37:int  -->                                                                0x0
          CANON38:int  -->                                                                0x0
          CANON39:int  -->                                                                0x0
          CANON40:int  -->                                                                0x0
          CANON41:int  -->                                                                0x0
          CANON42:int  -->                                                                0x0
          CANON43:int  -->                                                                0x0
         CANON48:bool  -->                                                               true
         CANON51:bool  -->                                                               true
         CANON58:bool  -->                                                               true
         CANON63:bool  -->                                                               true
         CANON68:bool  -->                                                               true
         CANON73:bool  -->                                                               true
         CANON78:bool  -->                                                               true
         CANON83:bool  -->                                                               true
         CANON88:bool  -->                                                               true
         CANON93:bool  -->                                                               true
         CANON94:bool  -->                                                               true
         CANON99:bool  -->                                                               true
      CANON251!!214:bool  -->                                                               true
      CANON2!!133:int  -->                                                             0x2c0b
      CANON272!!227:bool  -->                                                               true
      CANON7!!135:int  -->                                                          0xff4c916
      CANON285!!237:bool  -->                                                               true
      CANON140!!13:bv256  -->                                                              0x218
      CANON142!!14:bv256  -->                                                              0x218
      CANON269!!226:bool  -->                                                               true
      lastReverted!!96:bool  -->                                                              false
      CANON10!!136:bool  -->                                                              false
      OK_0_0_0_0_0_0:bool  -->                                                              false
      lastHasThrown!!72:bool  -->                                                              false
      lastHasThrown!!95:bool  -->                                                              false
      lastHasThrown!!97:bool  -->                                                              false
      OK_0_0_0_2_0_2:bool  -->                                                              false
      OK_0_0_0_3_0_4:bool  -->                                                              false
      CANON260!!219:bool  -->                                                               true
      OK_1_0_0_1_0_1:bool  -->                                                              false
      CANON3!!128:bool  -->                                                              false
      tacSighash!!47:bv256  -->                                                          0xff4c916
      tacSighash!!48:bv256  -->                                                          0xff4c916
      OK_2_0_0_1_0_3:bool  -->                                                              false
      CANON257!!218:bool  -->                                                               true
      CANON8!!139:int  -->                                                                0x1
      OK_3_0_0_1_0_5:bool  -->                                                              false
    -------- TAC model end --------------
    
