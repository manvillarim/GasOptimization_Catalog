Calltrace Debug Information
[StorageTitleInstance, 517545433] Global State
    [StorageTitleInstance, 1726538083] Storage State
        [StorageTitleInstance, 1163896690] A
            [StorageStateValueInstance, 1099212046] elementCount: 0
            [StorageStateValueInstance, 400903986] lastAdded: 0
            [StorageStateValueInstance, 908547924] lastRemoved: 0
            [StorageStateValueInstance, 251331285] operationCount: 0
            [StorageStateValueInstance, 1781754577] totalSum: 0
            [StorageStateValueInstance, 1469199482] values: 0x91c
            [StorageStateValueInstance, 1526940715] values[0x91b]: 0
        [StorageTitleInstance, 230168628] Ao
            [StorageStateValueInstance, 2091683504] activeIndices: 0x91c
            [StorageStateValueInstance, 987448507] activeIndices[0x91b]: 0x9041
            [StorageStateValueInstance, 2067295703] elementCount: 0
            [StorageStateValueInstance, 906797884] lastAdded: 0
            [StorageStateValueInstance, 776827459] lastRemoved: 0
            [StorageStateValueInstance, 1322452397] operationCount: 0
            [StorageStateValueInstance, 1983750005] totalSum: 0
            [StorageStateValueInstance, 628869069] values[0x9041]: 0
    [StorageTitleInstance, 1617000011] Balances
        [BalanceValueInstance, 919206279] 0x5e4b.balance: 0x450
        [BalanceValueInstance, 747970076] A (0x5e49).balance: 0x44e (2^10 + 78)
        [BalanceValueInstance, 1462497772] Ao (0x5e4a).balance: 0x44f (2^10 + 79)
    [StorageTitleInstance, 1007883884] Ghosts State
        [GhostValueInstance, 1173345704] ghostALength: 0x91c
        [GhostValueInstance, 1091458807] ghostAValues[0x91b]: 0
        [GhostValueInstance, 1226992555] ghostActiveIndices[0x91b]: 0x9041
        [GhostValueInstance, 1831249045] ghostAoLength: 0x91c
        [GhostValueInstance, 1457487372] ghostAoValues[0x9041]: 0
[LabelInstance, 1700082638] Setup
    [LabelInstance, 1072718844] multi contract setup
    [LabelInstance, 1739221659] rule parameters setup
    [LabelInstance, 1252546428] contract address vars initialized
    [LabelInstance, 103798436] setup read tracking instrumentation
    [LabelInstance, 981252638] last storage initialize
    [LabelInstance, 246866296] assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero
    [LabelInstance, 112022629] assuming address(0).code has no code deployed
    [LabelInstance, 2119117026] assumptions about contracts' addresses
    [LabelInstance, 566022527] assumptions about static addresses
    [LabelInstance, 406346001] establish addresses of precompiled contracts
    [LabelInstance, 1960458255] assumptions about uniqueness of contracts' addresses
    [LabelInstance, 1934952014] static links
    [LabelInstance, 874841714] record starting nonces
    [LabelInstance, 1854878006] cloned contracts have no balances
    [LabelInstance, 1261467304] Linked immutable setup
    [LabelInstance, 269250294] Constrain immutables
    [LabelInstance, 210168851] establish equivalence of extension and base contract immutables
[LabelInstance, 454523444] gasOptimizationCorrectness(f, g)
    [CVLFunc, 1398459080] 1 ; gasOptimizationCorrectness ; []; [] ; {} : [] 
        gasOptimizationCorrectness()
        [LabelInstance, 542274955] env eA
        [LabelInstance, 454030310] env eAo
        [LabelInstance, 996797545] calldataarg args
        [LabelInstance, 1046510918] require eA == eAo && (a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j])))
                # snippet DirectStorageLoad -1777122595 ;
                 disp. path:  totalSum
                  value sym:  CANON96!!33:bv256
                # local storage change -1777122595
            [Load, 229488940] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad 1956933848 ;
                 disp. path:  totalSum
                  value sym:  CANON99!!34:bv256
                # local storage change 1956933848
            [Load, 1767504828] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad 150612017 ;
                 disp. path:  elementCount
                  value sym:  CANON103!!5:bv256
                # local storage change 150612017
            [Load, 497502298] Load from A.elementCount ↪ 0
                # snippet DirectStorageLoad 859300177 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!6:bv256
                # local storage change 859300177
            [Load, 546344165] Load from Ao.elementCount ↪ 0
                # snippet DirectStorageLoad 944523378 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944523378
            [Load, 1075062018] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653211442 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653211442
            [Load, 1723249319] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad -608555846 ;
                 disp. path:  lastRemoved
                  value sym:  CANON119!!9:bv256
                # local storage change -608555846
            [Load, 1098171315] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -957523096 ;
                 disp. path:  lastRemoved
                  value sym:  CANON121!!10:bv256
                # local storage change -957523096
            [Load, 1705482460] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad 1858402152 ;
                 disp. path:  operationCount
                  value sym:  CANON126!!11:bv256
                # local storage change 1858402152
            [Load, 75144543] Load from A.operationCount ↪ 0
                # snippet DirectStorageLoad 1297491491 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!12:bv256
                # local storage change 1297491491
            [Load, 1468671229] Load from Ao.operationCount ↪ 0
            [CVLExpInstance, 805575908] Ghost read: ghostALength ↪ 0x91c
            [CVLExpInstance, 1765544768] Ghost read: ghostAoLength ↪ 0x91c
                # snippet DirectStorageLoad -2046989101 ;
                 disp. path:  values
                  value sym:  CANON140!!13:bv256
                # local storage change -2046989101
            [Load, 972880733] Load from A.values ↪ 0x91c
                # snippet DirectStorageLoad -1614446889 ;
                 disp. path:  activeIndices
                  value sym:  CANON142!!14:bv256
                # local storage change -1614446889
            [Load, 1062702419] Load from Ao.activeIndices ↪ 0x91c
        [LabelInstance, 790906209] A.f(eA, args)
            [External, 646706646] A.updateValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@2:bv256)])
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=36, value=tacCalldatabufCANON2@2:bv256)])
                [TransferInstance, 2029241417] sender: 0x5e4b; receiver: A (0x5e49); transferred amount: 0
                    # snippet WithLocSym 2047143634 ;
                       loc sym:  R50:bv256
                     value sym:  R87:bv256
                [Load, 2077090577] Load from A.[raw storage address] A (0x5e49) ↪ 1
                [Start, 1993322052] Evaluate branch condition
                [Start, 261341198] Evaluate branch condition
                [LabelInstance, 1772395577] Apply hook load len := A.values.length
                    [LabelInstance, 2103787383] With parameters:
                        [LabelInstance, 1993544465] len = ?
                    [CVLExpInstance, 1741762165] Ghost read: ghostALength ↪ 0x91c
                    # snippet LoadSnippet -622382495 ;
                     disp. path:  values
                      value sym:  CANON140!!13:bv256
                    # local storage change -622382495
                [Load, 710489058] Load from A.values ↪ 0x91c
                [Start, 2115190617] Evaluate branch condition
                [LabelInstance, 272031761] Apply hook load len := A.values.length
                    [LabelInstance, 2121975524] With parameters:
                        [LabelInstance, 501169386] len = ?
                    [CVLExpInstance, 2060530175] Ghost read: ghostALength ↪ 0x91c
                    # snippet LoadSnippet -622318976 ;
                     disp. path:  values
                      value sym:  CANON140!!13:bv256
                    # local storage change -622318976
                [Load, 1564500188] Load from A.values ↪ 0x91c
                [Start, 1965412470] Evaluate branch condition
                [LabelInstance, 293182036] Apply hook load val := A.values[INDEX uint256 k]
                    [LabelInstance, 1658068813] With parameters:
                        [LabelInstance, 1011668299] k = 0x91b
                        [LabelInstance, 1731265748] val = ?
                    [CVLExpInstance, 986159452] Ghost read: ghostAValues[0x91b] ↪ 0
                    # snippet LoadSnippet 514787790 ;
                     disp. path:  values[i = R241:bv256]
                      value sym:  R98:bv256
                    # local storage change 514787790
                [Load, 2016134974] Load from A.values[0x91b] ↪ 0
                [LocalAssignmentInstance, 571978749] oldValue  ↪  0
                [LabelInstance, 1307509967] Apply hook load len := A.values.length
                    [LabelInstance, 1273260375] With parameters:
                        [LabelInstance, 1833981218] len = ?
                    [CVLExpInstance, 1917291310] Ghost read: ghostALength ↪ 0x91c
                    # snippet LoadSnippet -622307072 ;
                     disp. path:  values
                      value sym:  CANON140!!13:bv256
                    # local storage change -622307072
                [Load, 1195057365] Load from A.values ↪ 0x91c
                [Start, 796743604] Evaluate branch condition
                [LabelInstance, 1080819260] Apply hook store A.values[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 247141348] With parameters:
                        [LabelInstance, 270055278] k = 0x91b
                        [LabelInstance, 1436385838] newValue = 0x20d6
                        [LabelInstance, 1243090111] oldValue = 0x0
                    [CVLExpInstance, 476713515] Ghost assignment: ghostAValues[0x91b] = 0x20d6
                    # snippet StoreSnippet -1920318935 ;
                     disp. path:  values[i = R241:bv256]
                      value sym:  R242:bv256
                    # local storage change -1920318935
                [Store, 1226601743] Store at A.values[0x91b] ↪ 0x20d6
                    # snippet LoadSnippet -846019913 ;
                     disp. path:  totalSum
                      value sym:  CANON96!!33:bv256
                    # local storage change -846019913
                [Load, 1881740016] Load from A.totalSum ↪ 0
                [Start, 2061407678] Evaluate branch condition
                [Start, 912866180] Evaluate branch condition
                    # snippet StoreSnippet -1396446288 ;
                     disp. path:  totalSum
                      value sym:  R111:bv256
                    # local storage change -1396446288
                [Store, 485987403] Store at A.totalSum ↪ 0x20d6
                    # snippet LoadSnippet 185994442 ;
                     disp. path:  operationCount
                      value sym:  CANON126!!11:bv256
                    # local storage change 185994442
                [Load, 611429303] Load from A.operationCount ↪ 0
                [Start, 705472994] Evaluate branch condition
                    # snippet StoreSnippet 207248946 ;
                     disp. path:  operationCount
                      value sym:  R114:bv256
                    # local storage change 207248946
                [Store, 1430655548] Store at A.operationCount ↪ 1
                [Return, 1966309651] Return
        [LabelInstance, 1547087889] Ao.g(eAo, args)
            [External, 330973644] Ao.updateValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@3:bv256)])
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=36, value=tacCalldatabufCANON2@3:bv256)])
                [TransferInstance, 1980266101] sender: 0x5e4b; receiver: Ao (0x5e4a); transferred amount: 0
                    # snippet WithLocSym -716815597 ;
                       loc sym:  R37:bv256
                     value sym:  R128:bv256
                [Load, 534399678] Load from Ao.[raw storage address] Ao (0x5e4a) ↪ 1
                [Start, 1988478828] Evaluate branch condition
                [Start, 930106449] Evaluate branch condition
                [LabelInstance, 41828116] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1329334879] With parameters:
                        [LabelInstance, 391776883] len = ?
                    [CVLExpInstance, 578674189] Ghost read: ghostAoLength ↪ 0x91c
                    # snippet LoadSnippet -1585282555 ;
                     disp. path:  activeIndices
                      value sym:  CANON142!!14:bv256
                    # local storage change -1585282555
                [Load, 1359528905] Load from Ao.activeIndices ↪ 0x91c
                [Start, 2118731077] Evaluate branch condition
                [LabelInstance, 965198189] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1975975398] With parameters:
                        [LabelInstance, 1648852508] len = ?
                    [CVLExpInstance, 1452309628] Ghost read: ghostAoLength ↪ 0x91c
                    # snippet LoadSnippet -1585248796 ;
                     disp. path:  activeIndices
                      value sym:  CANON142!!14:bv256
                    # local storage change -1585248796
                [Load, 1360741226] Load from Ao.activeIndices ↪ 0x91c
                [Start, 334544226] Evaluate branch condition
                [LabelInstance, 1243518622] Apply hook load val := Ao.activeIndices[INDEX uint256 k]
                    [LabelInstance, 523792445] With parameters:
                        [LabelInstance, 338911395] k = 0x91b
                        [LabelInstance, 46060778] val = ?
                    [CVLExpInstance, 1017776197] Ghost read: ghostActiveIndices[0x91b] ↪ 0x9041
                    # snippet LoadSnippet -516358646 ;
                     disp. path:  activeIndices[i = R248:bv256]
                      value sym:  R139:bv256
                    # local storage change -516358646
                [Load, 1624190581] Load from Ao.activeIndices[0x91b] ↪ 0x9041
                [LocalAssignmentInstance, 1870036151] realIndex  ↪  0x9041
                [LabelInstance, 454814775] Apply hook load val := Ao.values[KEY uint256 k]
                    [LabelInstance, 2006918961] With parameters:
                        [LabelInstance, 1857688369] k = 0x9041
                        [LabelInstance, 854940053] val = ?
                    [CVLExpInstance, 1984655784] Ghost read: ghostAoValues[0x9041] ↪ 0
                    # snippet LoadSnippet 364995047 ;
                     disp. path:  values[k = R139:bv256]
                      value sym:  R144:bv256
                    # local storage change 364995047
                [Load, 2019780351] Load from Ao.values[0x9041] ↪ 0
                [LocalAssignmentInstance, 1182716249] oldValue  ↪  0
                [LabelInstance, 1591677426] Apply hook store Ao.values[KEY uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 1941241264] With parameters:
                        [LabelInstance, 277035431] k = 0x9041
                        [LabelInstance, 549967607] newValue = 0x20d6
                        [LabelInstance, 112268188] oldValue = 0x0
                    [CVLExpInstance, 1379673991] Ghost assignment: ghostAoValues[0x9041] = 0x20d6
                    # snippet StoreSnippet 1284486263 ;
                     disp. path:  values[k = R139:bv256]
                      value sym:  R249:bv256
                    # local storage change 1284486263
                [Store, 1534812774] Store at Ao.values[0x9041] ↪ 0x20d6
                    # snippet LoadSnippet 1753790244 ;
                     disp. path:  totalSum
                      value sym:  CANON99!!34:bv256
                    # local storage change 1753790244
                [Load, 1167423376] Load from Ao.totalSum ↪ 0
                [Start, 1270264141] Evaluate branch condition
                [Start, 2013640611] Evaluate branch condition
                    # snippet StoreSnippet 2081577255 ;
                     disp. path:  totalSum
                      value sym:  R155:bv256
                    # local storage change 2081577255
                [Store, 2028831383] Store at Ao.totalSum ↪ 0x20d6
                    # snippet LoadSnippet -1509162697 ;
                     disp. path:  operationCount
                      value sym:  CANON129!!12:bv256
                    # local storage change -1509162697
                [Load, 380257261] Load from Ao.operationCount ↪ 0
                [Start, 1760081068] Evaluate branch condition
                    # snippet StoreSnippet -609694807 ;
                     disp. path:  operationCount
                      value sym:  R158:bv256
                    # local storage change -609694807
                [Store, 1023786685] Store at Ao.operationCount ↪ 1
                [Return, 694708912] Return
        [LabelInstance, 1830416731] assert a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j]))
                # snippet DirectStorageLoad -1147560022 ;
                 disp. path:  totalSum
                  value sym:  R111:bv256
                # local storage change -1147560022
            [Load, 1090090368] Load from A.totalSum ↪ 0x20d6
                # snippet DirectStorageLoad -1777995479 ;
                 disp. path:  totalSum
                  value sym:  R155:bv256
                # local storage change -1777995479
            [Load, 1352260468] Load from Ao.totalSum ↪ 0x20d6
                # snippet DirectStorageLoad 150612017 ;
                 disp. path:  elementCount
                  value sym:  CANON103!!5:bv256
                # local storage change 150612017
            [Load, 986584637] Load from A.elementCount ↪ 0
                # snippet DirectStorageLoad 859300177 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!6:bv256
                # local storage change 859300177
            [Load, 411024150] Load from Ao.elementCount ↪ 0
                # snippet DirectStorageLoad 944523378 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944523378
            [Load, 329353452] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653211442 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653211442
            [Load, 234730391] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad -608555846 ;
                 disp. path:  lastRemoved
                  value sym:  CANON119!!9:bv256
                # local storage change -608555846
            [Load, 1195914219] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -957523096 ;
                 disp. path:  lastRemoved
                  value sym:  CANON121!!10:bv256
                # local storage change -957523096
            [Load, 579503903] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad -44963041 ;
                 disp. path:  operationCount
                  value sym:  CANON126!!115:bv256
                # local storage change -44963041
            [Load, 1030987082] Load from A.operationCount ↪ 1
                # snippet DirectStorageLoad -1771285087 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!159:bv256
                # local storage change -1771285087
            [Load, 1576198264] Load from Ao.operationCount ↪ 1
            [CVLExpInstance, 1537431366] Ghost read: ghostALength ↪ 0x91c
            [CVLExpInstance, 770146642] Ghost read: ghostAoLength ↪ 0x91c
                # snippet DirectStorageLoad -2046989101 ;
                 disp. path:  values
                  value sym:  CANON140!!13:bv256
                # local storage change -2046989101
            [Load, 207605865] Load from A.values ↪ 0x91c
                # snippet DirectStorageLoad -1614446889 ;
                 disp. path:  activeIndices
                  value sym:  CANON142!!14:bv256
                # local storage change -1614446889
            [Load, 1180958906] Load from Ao.activeIndices ↪ 0x91c
[LabelInstance, 129787479] assert false
    [StorageTitleInstance, 373332707] Global State
        [StorageTitleInstance, 1684987098] Storage State
            [StorageTitleInstance, 48853309] A
                [StorageStateValueInstance, 1719869929] elementCount: 0
                [StorageStateValueInstance, 1946560600] lastAdded: 0
                [StorageStateValueInstance, 1713156622] lastRemoved: 0
                [StorageStateValueInstance, 792020841] operationCount: 1 (changed)
                [StorageStateValueInstance, 1346807567] totalSum: 0x20d6 (changed)
                [StorageStateValueInstance, 365367735] values: 0x91c
                [StorageStateValueInstance, 382229955] values[0x91b]: 0x20d6 (changed)
            [StorageTitleInstance, 323178108] Ao
                [StorageStateValueInstance, 1993928132] activeIndices: 0x91c
                [StorageStateValueInstance, 1539248129] activeIndices[0x91b]: 0x9041
                [StorageStateValueInstance, 256731376] elementCount: 0
                [StorageStateValueInstance, 108328907] lastAdded: 0
                [StorageStateValueInstance, 938707980] lastRemoved: 0
                [StorageStateValueInstance, 351251947] operationCount: 1 (changed)
                [StorageStateValueInstance, 1887522158] totalSum: 0x20d6 (changed)
                [StorageStateValueInstance, 1374299674] values[0x9041]: 0x20d6 (changed)
        [StorageTitleInstance, 2060600263] Balances
            [BalanceValueInstance, 322648451] 0x5e4b.balance: 0x450
            [BalanceValueInstance, 1772874935] A (0x5e49).balance: 0x44e (2^10 + 78)
            [BalanceValueInstance, 1777454446] Ao (0x5e4a).balance: 0x44f (2^10 + 79)
        [StorageTitleInstance, 30762988] Ghosts State
            [GhostValueInstance, 1273540980] ghostALength: 0x91c
            [GhostValueInstance, 2098213610] ghostAValues[0x91b]: 0x20d6 (changed)
            [GhostValueInstance, 451742363] ghostActiveIndices[0x91b]: 0x9041
            [GhostValueInstance, 816706605] ghostAoLength: 0x91c
            [GhostValueInstance, 1044414557] ghostAoValues[0x9041]: 0x20d6 (changed)
    -------- CVL model begin ------------
    -- type: bool --
    CANON11!!173                                  ~~> false
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON4!!165                                   ~~> false
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON282!!274                                 ~~>  true
       cvl                 : true
    CANON266!!260                                 ~~>  true
       cvl                 : true
    CANON295!!282                                 ~~>  true
       cvl                 : true
    CANON3!!63                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON4!!64                                    ~~> false
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON5!!65                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON6!!67                                    ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON12!!174                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON5!!166                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON291!!280                                 ~~>  true
       cvl                 : true
    CANON101                                      ~~>  true
       cvl                 : true
    CANON106                                      ~~>  true
       cvl                 : true
    CANON109                                      ~~>  true
       cvl                 : true
    CANON114                                      ~~>  true
       cvl                 : true
    CANON117                                      ~~>  true
       cvl                 : true
    CANON122                                      ~~>  true
       cvl                 : true
    CANON125                                      ~~>  true
       cvl                 : true
    CANON132                                      ~~>  true
       cvl                 : true
    CANON133                                      ~~>  true
       cvl                 : true
    CANON138                                      ~~>  true
       cvl                 : true
    CANON139                                      ~~>  true
       cvl                 : true
    CANON144                                      ~~>  true
       cvl                 : true
    CANON147                                      ~~>  true
       cvl                 : true
    CANON153                                      ~~>  true
       cvl                 : true
    CANON157                                      ~~>  true
       cvl                 : true
    CANON158                                      ~~>  true
       cvl                 : true
    CANON191                                      ~~>  true
       cvl                 : true
    CANON193                                      ~~>  true
       cvl                 : true
    CANON197                                      ~~>  true
       cvl                 : true
    CANON199                                      ~~>  true
       cvl                 : true
    CANON232                                      ~~>  true
       cvl                 : true
    CANON234                                      ~~>  true
       cvl                 : true
    CANON238                                      ~~>  true
       cvl                 : true
    CANON244                                      ~~>  true
       cvl                 : true
    CANON288!!278                                 ~~>  true
       cvl                 : true
    CANON13!!176                                  ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON263!!259                                 ~~>  true
       cvl                 : true
    CANON6!!168                                   ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON10!!70                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON11!!71                                   ~~> false
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON12!!72                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON13!!74                                   ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON48                                       ~~>  true
       cvl                 : true
    CANON51                                       ~~>  true
       cvl                 : true
    CANON58                                       ~~>  true
       cvl                 : true
    CANON63                                       ~~>  true
       cvl                 : true
    CANON68                                       ~~>  true
       cvl                 : true
    CANON73                                       ~~>  true
       cvl                 : true
    CANON78                                       ~~>  true
       cvl                 : true
    CANON83                                       ~~>  true
       cvl                 : true
    CANON88                                       ~~>  true
       cvl                 : true
    CANON93                                       ~~>  true
       cvl                 : true
    CANON94                                       ~~>  true
       cvl                 : true
    CANON272!!264                                 ~~>  true
       cvl                 : true
    CANON285!!277                                 ~~>  true
       cvl                 : true
    CANON277!!269                                 ~~>  true
       cvl                 : true
    CANON269!!263                                 ~~>  true
       cvl                 : true
    CANON10!!172                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON260!!256                                 ~~>  true
       cvl                 : true
    CANON252!!252                                 ~~>  true
       cvl                 : true
    CANON3!!164                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON281!!273                                 ~~>  true
       cvl                 : true
    CANON257!!255                                 ~~>  true
       cvl                 : true
    CANON278!!270                                 ~~>  true
       cvl                 : true
    -- type: int --
    CANON!!163                                    ~~>                                                         0x5b500826
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON9!!177                                   ~~>                                                             0x5e4a
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON1!!41                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON1!!66                                    ~~>                                                                0x2
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON2!!42                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON2!!68                                    ~~>                                                             0x5e49
       cvl                 : true
       cvl.display         : f
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON7!!47                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON7!!69                                    ~~>                                                         0x5b500826
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON8!!48                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON8!!73                                    ~~>                                                                0x2
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON9!!49                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON9!!75                                    ~~>                                                             0x5e4a
       cvl                 : true
       cvl.display         : g
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON134                                      ~~>                                                              0x91c
       cvl                 : true
       cvl.display         : ghostALength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON136                                      ~~>                                                              0x91c
       cvl                 : true
       cvl.display         : ghostAoLength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON1!!167                                   ~~>                                                                0x2
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON!!53                                     ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON!!62                                     ~~>                                                         0x5b500826
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON24                                       ~~>                                                             0x5e4b
       cvl                 : true
       cvl.display         : eA.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON25                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON26                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON27                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON28                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON29                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON30                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON31                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON32                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON33                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:102:5)
    CANON34                                       ~~>                                                             0x5e4b
       cvl                 : true
       cvl.display         : eAo.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON35                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON36                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON37                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON38                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON39                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON40                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON41                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON42                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON43                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON2!!169                                   ~~>                                                             0x5e49
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:125:43)
    CANON7!!171                                   ~~>                                                         0x5b500826
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    CANON8!!175                                   ~~>                                                                0x2
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:125:53)
    -- type: bv256 --
    CANON160                                      ~~>                                                               0x44
       cvl                 : true
       cvl.display         : args.length
       cvl.type            : uint256
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    -- type: bytemap --
    CANON163havocme16633                          ~~> {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    Ite(
      x:bv256 == 0x24
      0x20d6
      0x91b
    )
  )
}
       cvl                 : true
       cvl.display         : args
       cvl.type            : calldataarg
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    -------- CVL model end --------------
    -------- TAC model begin ------------
      OK_4_0_0_0_0_0:bool  -->                                                              false
      CANON11!!173:bool  -->                                                              false
      tacCalldatabufCANON0@2:bv256  -->                                                                0x0
      tacCalldatabufCANON0@3:bv256  -->                                                                0x0
      tacCalldatabufCANON1@2:bv256  -->                                                              0x91b
      tacCalldatabufCANON1@3:bv256  -->                                                              0x91b
      tacCalldatabufCANON2@2:bv256  -->                                                             0x20d6
      tacCalldatabufCANON2@3:bv256  -->                                                             0x20d6
       CANON!!163:int  -->                                                         0x5b500826
      from_skey:ghostmap((uninterp) skey->bv256)  -->                                          {[x:bv256] ->
  x:bv256
}
      tacM0x40!!0:bv256  -->                                                                0x0
      tacM0x40!!1:bv256  -->                                                                0x0
      CANON4!!165:bool  -->                                                              false
      CANON282!!274:bool  -->                                                               true
      CANON266!!260:bool  -->                                                               true
      CANON9!!177:int  -->                                                             0x5e4a
      CANON295!!282:bool  -->                                                               true
      to_skey:ghostmap(bv256->(uninterp) skey)  -->                                          {[x:bv256] ->
  x:bv256
}
       CANON1!!41:int  -->                                                                0x0
       CANON1!!66:int  -->                                                                0x2
       CANON2!!42:int  -->                                                                0x0
       CANON2!!68:int  -->                                                             0x5e49
      CANON3!!63:bool  -->                                                              false
      CANON4!!64:bool  -->                                                              false
      CANON5!!65:bool  -->                                                              false
      CANON6!!67:bool  -->                                                              false
       CANON7!!47:int  -->                                                                0x0
       CANON7!!69:int  -->                                                         0x5b500826
       CANON8!!48:int  -->                                                                0x0
       CANON8!!73:int  -->                                                                0x2
       CANON9!!49:int  -->                                                                0x0
       CANON9!!75:int  -->                                                             0x5e4a
      CANON12!!174:bool  -->                                                              false
      ReachabilityCertora0_0_0_0_0_0:bool  -->                                                               true
      ReachabilityCertora0_0_0_2_0_2:bool  -->                                                               true
      ReachabilityCertora0_0_0_3_0_4:bool  -->                                                               true
      ReachabilityCertora1_0_0_1_0_1:bool  -->                                                               true
      CANON96!!33:bv256  -->                                                                0x0
      CANON96!!112:bv256  -->                                                             0x20d6
      CANON99!!34:bv256  -->                                                                0x0
      ReachabilityCertora2_0_0_1_0_3:bool  -->                                                               true
      sklm!certora__i_110880!callId0!28:bv256  -->                                                              0x91c
      CANON5!!166:bool  -->                                                              false
      CANON291!!280:bool  -->                                                               true
        CANON101:bool  -->                                                               true
        CANON106:bool  -->                                                               true
        CANON109:bool  -->                                                               true
        CANON114:bool  -->                                                               true
        CANON117:bool  -->                                                               true
        CANON122:bool  -->                                                               true
        CANON125:bool  -->                                                               true
        CANON132:bool  -->                                                               true
        CANON133:bool  -->                                                               true
         CANON134:int  -->                                                              0x91c
         CANON136:int  -->                                                              0x91c
        CANON138:bool  -->                                                               true
        CANON139:bool  -->                                                               true
        CANON144:bool  -->                                                               true
        CANON147:bool  -->                                                               true
        CANON153:bool  -->                                                               true
        CANON157:bool  -->                                                               true
        CANON158:bool  -->                                                               true
       CANON160:bv256  -->                                                               0x44
       CANON165:bv256  -->                                                                0x0
        CANON191:bool  -->                                                               true
        CANON193:bool  -->                                                               true
         CANON196:int  -->                                                                0x0
        CANON197:bool  -->                                                               true
        CANON199:bool  -->                                                               true
         CANON201:int  -->                                                             0x20d6
       CANON207:bv256  -->                                                                0x0
        CANON232:bool  -->                                                               true
        CANON234:bool  -->                                                               true
         CANON237:int  -->                                                             0x9041
        CANON238:bool  -->                                                               true
         CANON243:int  -->                                                                0x0
        CANON244:bool  -->                                                               true
         CANON248:int  -->                                                             0x20d6
      CANON121!!10:bv256  -->                                                                0x0
      ReachabilityCertora3_0_0_1_0_5:bool  -->                                                               true
      CANON288!!278:bool  -->                                                               true
      ReachabilityCertora4_0_0_0_0_0:bool  -->                                                               true
      CANON126!!11:bv256  -->                                                                0x0
      CANON129!!12:bv256  -->                                                                0x0
      sklm!certora__i_211060!callId0!30:bv256  -->                                                              0x91d
      CANON13!!176:bool  -->                                                              false
      tacCalldatabuf@2:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x44 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    Ite(
      arg0:bv256 == 0x24
      0x20d6
      0x91b
    )
    0x0
  )
}
      tacCalldatabuf@3:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x44 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    Ite(
      arg0:bv256 == 0x24
      0x20d6
      0x91b
    )
    0x0
  )
}
             R2:bv256  -->                                                                0x1
             R3:bv256  -->                                                                0x1
             B60:bool  -->                                                               true
              I91:int  -->                                                              0x91c
              I94:int  -->                                                              0x91c
              I99:int  -->                                                              0x91b
            R37:bv256  -->                                                             0x5e4a
            R38:bv256  -->                                                                0x1
            R39:bv256  -->                                                                0x2
            R40:bv256  -->                                                                0x4
            R50:bv256  -->                                                             0x5e49
            R54:bv256  -->                                                                0x1
            R55:bv256  -->                                                                0x1
            R57:bv256  -->                                                                0x1
            R58:bv256  -->                                                                0x1
            R78:bv256  -->                                                             0x5e4b
            R80:bv256  -->                                                              0x450
            R83:bv256  -->                                                              0x44e
            R85:bv256  -->                                                              0x44e
            R87:bv256  -->                                                                0x1
      R96:(uninterp) skey  -->                                                             0x7251
      R97:(uninterp) skey  -->                                                             0x7b6c
            R98:bv256  -->                                                                0x0
      CANON1!!167:int  -->                                                                0x2
            B234:bool  -->                                                               true
            B235:bool  -->                                                               true
            B279:bool  -->                                                               true
            B281:bool  -->                                                               true
            B283:bool  -->                                                              false
             I101:int  -->                                                              0x91c
             I107:int  -->                                                              0x91b
             I132:int  -->                                                              0x91c
             I135:int  -->                                                              0x91c
             I140:int  -->                                                              0x91b
             I145:int  -->                                                             0x9041
             I151:int  -->                                                             0x9041
             I179:int  -->                                                             0x5e4b
             I181:int  -->                                                             0x5e4b
             I182:int  -->                                                                0x0
             I183:int  -->                                                                0x0
             I185:int  -->                                                                0x0
             I187:int  -->                                                                0x0
             I189:int  -->                                                                0x0
             I191:int  -->                                                                0x0
             I193:int  -->                                                                0x0
             I195:int  -->                                                                0x0
             I197:int  -->                                                                0x0
             I199:int  -->                                                                0x0
             I201:int  -->                                                                0x0
             I203:int  -->                                                                0x0
             I205:int  -->                                                                0x0
             I207:int  -->                                                                0x0
             I209:int  -->                                                                0x0
             I211:int  -->                                                                0x0
             I213:int  -->                                                                0x0
             I215:int  -->                                                                0x0
             I230:int  -->                                                              0x91c
             I231:int  -->                                                              0x91c
             I271:int  -->                                                              0x91c
             I272:int  -->                                                              0x91c
      R103:(uninterp) skey  -->                                                             0x7251
      R104:(uninterp) skey  -->                                                             0x7b6c
           R105:bv256  -->                                                                0x0
           R110:bv256  -->                                                                0x0
           R111:bv256  -->                                                             0x20d6
           R114:bv256  -->                                                                0x1
           R120:bv256  -->                                                             0x5e4b
           R122:bv256  -->                                                              0x450
           R125:bv256  -->                                                              0x44f
           R127:bv256  -->                                                              0x44f
           R128:bv256  -->                                                                0x1
      R137:(uninterp) skey  -->                                                             0x2711
      R138:(uninterp) skey  -->                                                             0x302c
           R139:bv256  -->                                                             0x9041
      R142:(uninterp) skey  -->                                                             0x7d73
           R144:bv256  -->                                                                0x0
      R147:(uninterp) skey  -->                                                             0x7d73
           R149:bv256  -->                                                                0x0
           R154:bv256  -->                                                                0x0
           R155:bv256  -->                                                             0x20d6
           R158:bv256  -->                                                                0x1
           R240:bv256  -->                                                                0x0
           R241:bv256  -->                                                              0x91b
           R242:bv256  -->                                                             0x20d6
           R247:bv256  -->                                                                0x0
           R248:bv256  -->                                                              0x91b
           R249:bv256  -->                                                             0x20d6
      lastHasThrown!!116:bool  -->                                                              false
      lastHasThrown!!118:bool  -->                                                              false
      lastHasThrown!!160:bool  -->                                                              false
      CANON263!!259:bool  -->                                                               true
      CANON6!!168:bool  -->                                                              false
      CANON129!!159:bv256  -->                                                                0x1
        CANON!!53:int  -->                                                                0x0
        CANON!!62:int  -->                                                         0x5b500826
      sklm!certora__j_311067!callId0!29:bv256  -->                                                              0x91e
      CANON10!!70:bool  -->                                                              false
      CANON103!!5:bv256  -->                                                                0x0
      CANON105!!6:bv256  -->                                                                0x0
      CANON11!!71:bool  -->                                                              false
      CANON111!!7:bv256  -->                                                                0x0
      CANON113!!8:bv256  -->                                                                0x0
      lastReverted!!117:bool  -->                                                              false
      lastReverted!!161:bool  -->                                                              false
      CANON119!!9:bv256  -->                                                                0x0
      CANON12!!72:bool  -->                                                              false
      CANON13!!74:bool  -->                                                              false
          CANON24:int  -->                                                             0x5e4b
          CANON25:int  -->                                                                0x0
          CANON26:int  -->                                                                0x0
          CANON27:int  -->                                                                0x0
          CANON28:int  -->                                                                0x0
          CANON29:int  -->                                                                0x0
          CANON30:int  -->                                                                0x0
          CANON31:int  -->                                                                0x0
          CANON32:int  -->                                                                0x0
          CANON33:int  -->                                                                0x0
          CANON34:int  -->                                                             0x5e4b
          CANON35:int  -->                                                                0x0
          CANON36:int  -->                                                                0x0
          CANON37:int  -->                                                                0x0
          CANON38:int  -->                                                                0x0
          CANON39:int  -->                                                                0x0
          CANON40:int  -->                                                                0x0
          CANON41:int  -->                                                                0x0
          CANON42:int  -->                                                                0x0
          CANON43:int  -->                                                                0x0
         CANON48:bool  -->                                                               true
         CANON51:bool  -->                                                               true
         CANON58:bool  -->                                                               true
         CANON63:bool  -->                                                               true
         CANON68:bool  -->                                                               true
         CANON73:bool  -->                                                               true
         CANON78:bool  -->                                                               true
         CANON83:bool  -->                                                               true
         CANON88:bool  -->                                                               true
         CANON93:bool  -->                                                               true
         CANON94:bool  -->                                                               true
      CANON2!!169:int  -->                                                             0x5e49
      CANON272!!264:bool  -->                                                               true
      CANON7!!171:int  -->                                                         0x5b500826
      CANON285!!277:bool  -->                                                               true
      CANON140!!13:bv256  -->                                                              0x91c
      CANON277!!269:bool  -->                                                               true
      CANON142!!14:bv256  -->                                                              0x91c
      CANON269!!263:bool  -->                                                               true
      CANON163havocme16633:bytemap  --> {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    Ite(
      x:bv256 == 0x24
      0x20d6
      0x91b
    )
  )
}
      CANON10!!172:bool  -->                                                              false
      OK_0_0_0_0_0_0:bool  -->                                                              false
      lastHasThrown!!76:bool  -->                                                              false
      OK_0_0_0_2_0_2:bool  -->                                                              false
      OK_0_0_0_3_0_4:bool  -->                                                              false
      CANON260!!256:bool  -->                                                               true
      OK_1_0_0_1_0_1:bool  -->                                                              false
      CANON252!!252:bool  -->                                                               true
      CANON3!!164:bool  -->                                                              false
      CANON281!!273:bool  -->                                                               true
      CANON99!!156:bv256  -->                                                             0x20d6
      tacSighash!!51:bv256  -->                                                         0x5b500826
      tacSighash!!52:bv256  -->                                                         0x5b500826
      OK_2_0_0_1_0_3:bool  -->                                                              false
      CANON126!!115:bv256  -->                                                                0x1
      CANON257!!255:bool  -->                                                               true
      CANON8!!175:int  -->                                                                0x2
      CANON278!!270:bool  -->                                                               true
      OK_3_0_0_1_0_5:bool  -->                                                              false
    -------- TAC model end --------------
    
