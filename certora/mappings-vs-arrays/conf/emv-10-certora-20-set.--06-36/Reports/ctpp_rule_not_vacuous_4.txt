Calltrace Debug Information
[StorageTitleInstance, 1433876030] Global State
    [StorageTitleInstance, 469005730] Storage State
        [StorageTitleInstance, 1325365870] A
            [StorageStateValueInstance, 987734675] elementCount: 1
            [StorageStateValueInstance, 1450550576] lastAdded: 0
            [StorageStateValueInstance, 1855230777] lastRemoved: 0
            [StorageStateValueInstance, 1527621775] operationCount: 0
            [StorageStateValueInstance, 469848647] totalSum: 0
            [StorageStateValueInstance, 1738946770] values: 0x3ba1
            [StorageStateValueInstance, 769745476] values[0x3b9f]: 0
            [StorageStateValueInstance, 463404711] values[0x3ba0]: 0
        [StorageTitleInstance, 228263161] Ao
            [StorageStateValueInstance, 1538121008] activeIndices: 0x3ba1
            [StorageStateValueInstance, 2105046851] activeIndices[0x3b9f]: 0x3364
            [StorageStateValueInstance, 301974925] activeIndices[0x3ba0]: 0x3361
            [StorageStateValueInstance, 1142339463] elementCount: 1
            [StorageStateValueInstance, 1911006824] indexPosition[0x3361]: *
            [StorageStateValueInstance, 1327175032] indexPosition[0x3364]: *
            [StorageStateValueInstance, 539456187] lastAdded: 0
            [StorageStateValueInstance, 1367102391] lastRemoved: 0
            [StorageStateValueInstance, 493124374] operationCount: 0
            [StorageStateValueInstance, 180559127] totalSum: 0
            [StorageStateValueInstance, 292160606] values[0x3364]: 0
    [StorageTitleInstance, 582487087] Balances
        [BalanceValueInstance, 473595813] 0x6d67.balance: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff78 (2^256 - 136)
        [BalanceValueInstance, 235139728] A (0x6d65).balance: 0x2da4
        [BalanceValueInstance, 1326075898] Ao (0x6d66).balance: 0x2da5
    [StorageTitleInstance, 758246208] Ghosts State
        [GhostValueInstance, 1647930900] ghostALength: 0x3ba1
        [GhostValueInstance, 1941931953] ghostAValues[0x3b9f]: 0
        [GhostValueInstance, 1859609507] ghostAValues[0x3ba0]: 0
        [GhostValueInstance, 1285484242] ghostActiveIndices[0x3b9f]: 0x3364
        [GhostValueInstance, 1702781083] ghostActiveIndices[0x3ba0]: 0x3361
        [GhostValueInstance, 1785983370] ghostAoLength: 0x3ba1
        [GhostValueInstance, 1064062236] ghostAoValues[0x3364]: 0
[LabelInstance, 71289949] Setup
    [LabelInstance, 307433209] multi contract setup
    [LabelInstance, 1733907096] rule parameters setup
    [LabelInstance, 981526466] contract address vars initialized
    [LabelInstance, 1076337131] setup read tracking instrumentation
    [LabelInstance, 1250517968] last storage initialize
    [LabelInstance, 1734948235] assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero
    [LabelInstance, 1525313619] assuming address(0).code has no code deployed
    [LabelInstance, 654201380] assumptions about contracts' addresses
    [LabelInstance, 661140168] assumptions about static addresses
    [LabelInstance, 159616707] establish addresses of precompiled contracts
    [LabelInstance, 14819144] assumptions about uniqueness of contracts' addresses
    [LabelInstance, 1423512066] static links
    [LabelInstance, 851543075] record starting nonces
    [LabelInstance, 664920366] cloned contracts have no balances
    [LabelInstance, 925479629] Linked immutable setup
    [LabelInstance, 729612072] Constrain immutables
    [LabelInstance, 362972920] establish equivalence of extension and base contract immutables
[LabelInstance, 1034075635] gasOptimizationCorrectness(f, g)
    [CVLFunc, 1197985616] 1 ; gasOptimizationCorrectness ; []; [] ; {} : [] 
        gasOptimizationCorrectness()
        [LabelInstance, 187624747] env eA
        [LabelInstance, 179978224] env eAo
        [LabelInstance, 576673393] calldataarg args
        [LabelInstance, 1538986021] require eA == eAo && (a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j])))
                # snippet DirectStorageLoad -1662604999 ;
                 disp. path:  totalSum
                  value sym:  CANON96!!37:bv256
                # local storage change -1662604999
            [Load, 662759884] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad 2071451444 ;
                 disp. path:  totalSum
                  value sym:  CANON99!!38:bv256
                # local storage change 2071451444
            [Load, 2082346867] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad 1958067472 ;
                 disp. path:  elementCount
                  value sym:  CANON102!!5:bv256
                # local storage change 1958067472
            [Load, 615135839] Load from A.elementCount ↪ 1
                # snippet DirectStorageLoad 859301169 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!6:bv256
                # local storage change 859301169
            [Load, 655568087] Load from Ao.elementCount ↪ 1
                # snippet DirectStorageLoad 944524370 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944524370
            [Load, 134049648] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653212434 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653212434
            [Load, 190072179] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad -608554854 ;
                 disp. path:  lastRemoved
                  value sym:  CANON119!!9:bv256
                # local storage change -608554854
            [Load, 2128215684] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -1154035609 ;
                 disp. path:  lastRemoved
                  value sym:  CANON122!!10:bv256
                # local storage change -1154035609
            [Load, 1074921500] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad 1858403144 ;
                 disp. path:  operationCount
                  value sym:  CANON126!!11:bv256
                # local storage change 1858403144
            [Load, 746086785] Load from A.operationCount ↪ 0
                # snippet DirectStorageLoad 1297492483 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!12:bv256
                # local storage change 1297492483
            [Load, 95344288] Load from Ao.operationCount ↪ 0
            [CVLExpInstance, 884090191] Ghost read: ghostALength ↪ 0x3ba1
            [CVLExpInstance, 1685115173] Ghost read: ghostAoLength ↪ 0x3ba1
                # snippet DirectStorageLoad -1989729807 ;
                 disp. path:  values
                  value sym:  CANON140!!15:bv256
                # local storage change -1989729807
            [Load, 191615043] Load from A.values ↪ 0x3ba1
                # snippet DirectStorageLoad -1753701100 ;
                 disp. path:  activeIndices
                  value sym:  CANON143!!16:bv256
                # local storage change -1753701100
            [Load, 2013465688] Load from Ao.activeIndices ↪ 0x3ba1
        [LabelInstance, 1564399178] A.f(eA, args)
            [External, 1067834673] A.removeValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@2:bv256)])
                [TransferInstance, 1788476238] sender: 0x6d67; receiver: A (0x6d65); transferred amount: 0
                    # snippet WithLocSym 1829033890 ;
                       loc sym:  R63:bv256
                     value sym:  R100:bv256
                [Load, 169364361] Load from A.[raw storage address] A (0x6d65) ↪ 1
                [Start, 557793286] Evaluate branch condition
                [Start, 811748677] Evaluate branch condition
                [LabelInstance, 352621452] Apply hook load len := A.values.length
                    [LabelInstance, 1569244838] With parameters:
                        [LabelInstance, 116163169] len = ?
                    [CVLExpInstance, 608628636] Ghost read: ghostALength ↪ 0x3ba1
                    # snippet LoadSnippet 1153055395 ;
                     disp. path:  values
                      value sym:  CANON140!!15:bv256
                    # local storage change 1153055395
                [Load, 359633003] Load from A.values ↪ 0x3ba1
                [Start, 248109462] Evaluate branch condition
                [LabelInstance, 1817488804] Apply hook load len := A.values.length
                    [LabelInstance, 2147325373] With parameters:
                        [LabelInstance, 377007841] len = ?
                    [CVLExpInstance, 1446891729] Ghost read: ghostALength ↪ 0x3ba1
                    # snippet LoadSnippet 1153122882 ;
                     disp. path:  values
                      value sym:  CANON140!!15:bv256
                    # local storage change 1153122882
                [Load, 533560895] Load from A.values ↪ 0x3ba1
                [Start, 210653190] Evaluate branch condition
                [LabelInstance, 1607661776] Apply hook load val := A.values[INDEX uint256 k]
                    [LabelInstance, 1733365923] With parameters:
                        [LabelInstance, 320448240] k = 0x3b9f
                        [LabelInstance, 1835649781] val = ?
                    [CVLExpInstance, 632663024] Ghost read: ghostAValues[0x3b9f] ↪ 0
                    # snippet LoadSnippet -1877700068 ;
                     disp. path:  values[i = R242:bv256]
                      value sym:  R110:bv256
                    # local storage change -1877700068
                [Load, 1250845677] Load from A.values[0x3b9f] ↪ 0
                [LocalAssignmentInstance, 343827050] removedValue  ↪  0
                [Start, 929246322] Loop at A.sol: line: 65: values.length - 1
                    [LabelInstance, 1065483077] Apply hook load len := A.values.length
                        [LabelInstance, 103380563] With parameters:
                            [LabelInstance, 1629698510] len = ?
                        [CVLExpInstance, 1334679844] Ghost read: ghostALength ↪ 0x3ba1
                        # snippet LoadSnippet 1153221059 ;
                         disp. path:  values
                          value sym:  CANON140!!15:bv256
                        # local storage change 1153221059
                    [Load, 2137397315] Load from A.values ↪ 0x3ba1
                    [Start, 842035730] Evaluate branch condition
                    [Iteration, 1243992275] Loop Iteration 1
                        [Start, 1765946378] Evaluate branch condition
                        [LabelInstance, 640257377] Apply hook load len := A.values.length
                            [LabelInstance, 389598036] With parameters:
                                [LabelInstance, 1937715752] len = ?
                            [CVLExpInstance, 191216169] Ghost read: ghostALength ↪ 0x3ba1
                            # snippet LoadSnippet 1153238915 ;
                             disp. path:  values
                              value sym:  CANON140!!15:bv256
                            # local storage change 1153238915
                        [Load, 1632464033] Load from A.values ↪ 0x3ba1
                        [Start, 813595063] Evaluate branch condition
                        [LabelInstance, 974844898] Apply hook load val := A.values[INDEX uint256 k]
                            [LabelInstance, 470332026] With parameters:
                                [LabelInstance, 380300606] k = 0x3ba0
                                [LabelInstance, 1432001949] val = ?
                            [CVLExpInstance, 942862647] Ghost read: ghostAValues[0x3ba0] ↪ 0
                            # snippet LoadSnippet -553585125 ;
                             disp. path:  values[i = R287:bv256]
                              value sym:  R294:bv256
                            # local storage change -553585125
                        [Load, 1634737961] Load from A.values[0x3ba0] ↪ 0
                        [LabelInstance, 552783140] Apply hook load len := A.values.length
                            [LabelInstance, 566561490] With parameters:
                                [LabelInstance, 240250004] len = ?
                            [CVLExpInstance, 1866015520] Ghost read: ghostALength ↪ 0x3ba1
                            # snippet LoadSnippet 1153226887 ;
                             disp. path:  values
                              value sym:  CANON140!!15:bv256
                            # local storage change 1153226887
                        [Load, 1494505486] Load from A.values ↪ 0x3ba1
                        [Start, 1343113828] Evaluate branch condition
                        [LabelInstance, 1362770365] Apply hook store A.values[INDEX uint256 k] := newValue (old: oldValue)
                            [LabelInstance, 2008821913] With parameters:
                                [LabelInstance, 202625608] k = 0x3b9f
                                [LabelInstance, 778892484] newValue = 0x0
                                [LabelInstance, 773572453] oldValue = 0x0
                            [CVLExpInstance, 942998215] Ghost assignment: ghostAValues[0x3b9f] = 0
                            # snippet StoreSnippet -1691863382 ;
                             disp. path:  values[i = R242:bv256]
                              value sym:  R294:bv256
                            # local storage change -1691863382
                        [Store, 715527707] Store at A.values[0x3b9f] ↪ 0
                [LabelInstance, 1671761247] Apply hook load len := A.values.length
                    [LabelInstance, 326491809] With parameters:
                        [LabelInstance, 63358258] len = ?
                    [CVLExpInstance, 432672159] Ghost read: ghostALength ↪ 0x3ba1
                    # snippet LoadSnippet 1153284516 ;
                     disp. path:  values
                      value sym:  CANON140!!15:bv256
                    # local storage change 1153284516
                [Load, 1389241356] Load from A.values ↪ 0x3ba1
                [Start, 1878226978] Evaluate branch condition
                [LabelInstance, 1521082299] Apply hook store A.values[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 331777924] With parameters:
                        [LabelInstance, 806043572] k = 0x3ba0
                        [LabelInstance, 1145926655] newValue = 0x0
                        [LabelInstance, 1343043786] oldValue = 0x0
                    [CVLExpInstance, 2001764328] Ghost assignment: ghostAValues[0x3ba0] = 0
                    # snippet StoreSnippet -1865568226 ;
                     disp. path:  values[i = R310:bv256]
                      value sym:  0x0
                    # local storage change -1865568226
                [Store, 508500009] Store at A.values[0x3ba0] ↪ 0
                [LabelInstance, 825381524] Apply hook store A.values.length := newLen (old: oldLen)
                    [LabelInstance, 138475280] With parameters:
                        [LabelInstance, 2082174671] newLen = 0x3ba0
                        [LabelInstance, 443787061] oldLen = 0x3ba1
                    [CVLExpInstance, 964091933] Ghost assignment: ghostALength = 0x3ba0
                    # snippet StoreSnippet 2030535702 ;
                     disp. path:  values
                      value sym:  R310:bv256
                    # local storage change 2030535702
                [Store, 906061908] Store at A.values ↪ 0x3ba0
                    # snippet LoadSnippet -1590429365 ;
                     disp. path:  totalSum
                      value sym:  CANON96!!37:bv256
                    # local storage change -1590429365
                [Load, 285990229] Load from A.totalSum ↪ 0
                [Start, 373725774] Evaluate branch condition
                    # snippet StoreSnippet -1318271395 ;
                     disp. path:  totalSum
                      value sym:  R321:bv256
                    # local storage change -1318271395
                [Store, 415164051] Store at A.totalSum ↪ 0
                    # snippet LoadSnippet -1018732894 ;
                     disp. path:  elementCount
                      value sym:  CANON102!!5:bv256
                    # local storage change -1018732894
                [Load, 624983576] Load from A.elementCount ↪ 1
                [Start, 1794043536] Evaluate branch condition
                    # snippet StoreSnippet -767091324 ;
                     disp. path:  elementCount
                      value sym:  R324:bv256
                    # local storage change -767091324
                [Store, 1213767017] Store at A.elementCount ↪ 0
                    # snippet StoreSnippet 617855262 ;
                     disp. path:  lastRemoved
                      value sym:  R110:bv256
                    # local storage change 617855262
                [Store, 666722447] Store at A.lastRemoved ↪ 0
                    # snippet LoadSnippet 186609482 ;
                     disp. path:  operationCount
                      value sym:  CANON126!!11:bv256
                    # local storage change 186609482
                [Load, 19622622] Load from A.operationCount ↪ 0
                [Start, 481074693] Evaluate branch condition
                    # snippet StoreSnippet 399942445 ;
                     disp. path:  operationCount
                      value sym:  R328:bv256
                    # local storage change 399942445
                [Store, 278133548] Store at A.operationCount ↪ 1
                [Return, 1558595753] Return
        [LabelInstance, 113353841] Ao.g(eAo, args)
            [External, 2128956954] Ao.removeValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@3:bv256)])
                [TransferInstance, 1906348145] sender: 0x6d67; receiver: Ao (0x6d66); transferred amount: 0
                    # snippet WithLocSym 857787708 ;
                       loc sym:  R50:bv256
                     value sym:  R128:bv256
                [Load, 527252972] Load from Ao.[raw storage address] Ao (0x6d66) ↪ 1
                [Start, 344256604] Evaluate branch condition
                [Start, 1078327624] Evaluate branch condition
                [LabelInstance, 890489385] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1139217210] With parameters:
                        [LabelInstance, 1892814090] len = ?
                    [CVLExpInstance, 523384289] Ghost read: ghostAoLength ↪ 0x3ba1
                    # snippet LoadSnippet -1606580760 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606580760
                [Load, 886830764] Load from Ao.activeIndices ↪ 0x3ba1
                [Start, 1339973070] Evaluate branch condition
                [LabelInstance, 797221730] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 563545678] With parameters:
                        [LabelInstance, 1251142214] len = ?
                    [CVLExpInstance, 2006970103] Ghost read: ghostAoLength ↪ 0x3ba1
                    # snippet LoadSnippet -1606516249 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606516249
                [Load, 2097863893] Load from Ao.activeIndices ↪ 0x3ba1
                [Start, 1689653324] Evaluate branch condition
                [LabelInstance, 959125062] Apply hook load val := Ao.activeIndices[INDEX uint256 k]
                    [LabelInstance, 835436482] With parameters:
                        [LabelInstance, 445395290] k = 0x3b9f
                        [LabelInstance, 1324119607] val = ?
                    [CVLExpInstance, 798277770] Ghost read: ghostActiveIndices[0x3b9f] ↪ 0x3364
                    # snippet LoadSnippet -1403185783 ;
                     disp. path:  activeIndices[i = R248:bv256]
                      value sym:  R138:bv256
                    # local storage change -1403185783
                [Load, 1129139989] Load from Ao.activeIndices[0x3b9f] ↪ 0x3364
                [LocalAssignmentInstance, 942710983] realIndex  ↪  0x3364
                [LabelInstance, 356529208] Apply hook load val := Ao.values[KEY uint256 k]
                    [LabelInstance, 483997322] With parameters:
                        [LabelInstance, 902162403] k = 0x3364
                        [LabelInstance, 139349764] val = ?
                    [CVLExpInstance, 482036673] Ghost read: ghostAoValues[0x3364] ↪ 0
                    # snippet LoadSnippet 2030298087 ;
                     disp. path:  values[k = R138:bv256]
                      value sym:  R143:bv256
                    # local storage change 2030298087
                [Load, 1224954810] Load from Ao.values[0x3364] ↪ 0
                [LocalAssignmentInstance, 1407410054] removedValue  ↪  0
                [LabelInstance, 690949265] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1871494966] With parameters:
                        [LabelInstance, 1010941950] len = ?
                    [CVLExpInstance, 1964497055] Ghost read: ghostAoLength ↪ 0x3ba1
                    # snippet LoadSnippet -1606426008 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606426008
                [Load, 613222696] Load from Ao.activeIndices ↪ 0x3ba1
                [Start, 779253632] Evaluate branch condition
                [LocalAssignmentInstance, 528323583] lastPos  ↪  0x3ba0
                [LabelInstance, 1424319407] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 409855058] With parameters:
                        [LabelInstance, 631135912] len = ?
                    [CVLExpInstance, 1452266383] Ghost read: ghostAoLength ↪ 0x3ba1
                    # snippet LoadSnippet -1606389242 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606389242
                [Load, 688401130] Load from Ao.activeIndices ↪ 0x3ba1
                [Start, 1580205293] Evaluate branch condition
                [LabelInstance, 160197277] Apply hook load val := Ao.activeIndices[INDEX uint256 k]
                    [LabelInstance, 557306760] With parameters:
                        [LabelInstance, 1233183294] k = 0x3ba0
                        [LabelInstance, 399085711] val = ?
                    [CVLExpInstance, 2105264233] Ghost read: ghostActiveIndices[0x3ba0] ↪ 0x3361
                    # snippet LoadSnippet -547502048 ;
                     disp. path:  activeIndices[i = R147:bv256]
                      value sym:  R154:bv256
                    # local storage change -547502048
                [Load, 1657798621] Load from Ao.activeIndices[0x3ba0] ↪ 0x3361
                [LocalAssignmentInstance, 739274920] lastRealIndex  ↪  0x3361
                [Start, 1996935245] Evaluate branch condition
                [LabelInstance, 1419601476] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1236359709] With parameters:
                        [LabelInstance, 1720444595] len = ?
                    [CVLExpInstance, 659478167] Ghost read: ghostAoLength ↪ 0x3ba1
                    # snippet LoadSnippet -1606316857 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606316857
                [Load, 417217404] Load from Ao.activeIndices ↪ 0x3ba1
                [Start, 1543302088] Evaluate branch condition
                [LabelInstance, 1652236410] Apply hook store Ao.activeIndices[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 869316812] With parameters:
                        [LabelInstance, 1513906193] k = 0x3b9f
                        [LabelInstance, 1713533493] newValue = 0x3361
                        [LabelInstance, 1575089787] oldValue = 0x3364
                    [CVLExpInstance, 1799431123] Ghost assignment: ghostActiveIndices[0x3b9f] = 0x3361
                    # snippet StoreSnippet -1907505083 ;
                     disp. path:  activeIndices[i = R248:bv256]
                      value sym:  R154:bv256
                    # local storage change -1907505083
                [Store, 1380252226] Store at Ao.activeIndices[0x3b9f] ↪ 0x3361
                    # snippet StoreSnippet -1415425824 ;
                     disp. path:  indexPosition[k = R154:bv256]
                      value sym:  R248:bv256
                    # local storage change -1415425824
                [Store, 662870501] Store at Ao.indexPosition[0x3361] ↪ 0x3b9f
                [LabelInstance, 1963123008] Apply hook store Ao.values[KEY uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 390011784] With parameters:
                        [LabelInstance, 1658615239] k = 0x3364
                        [LabelInstance, 1369609672] newValue = 0x0
                        [LabelInstance, 860382813] oldValue = 0x0
                    [CVLExpInstance, 1556404455] Ghost assignment: ghostAoValues[0x3364] = 0
                    # snippet StoreSnippet 1199670014 ;
                     disp. path:  values[k = R138:bv256]
                      value sym:  0x0
                    # local storage change 1199670014
                [Store, 1572334837] Store at Ao.values[0x3364] ↪ 0
                    # snippet StoreSnippet -519741108 ;
                     disp. path:  indexPosition[k = R138:bv256]
                      value sym:  0x0
                    # local storage change -519741108
                [Store, 410926686] Store at Ao.indexPosition[0x3364] ↪ 0
                [LabelInstance, 1752488322] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 302851979] With parameters:
                        [LabelInstance, 1883218299] len = ?
                    [CVLExpInstance, 433778156] Ghost read: ghostAoLength ↪ 0x3ba1
                    # snippet LoadSnippet -1606136375 ;
                     disp. path:  activeIndices
                      value sym:  CANON143!!16:bv256
                    # local storage change -1606136375
                [Load, 1462542236] Load from Ao.activeIndices ↪ 0x3ba1
                [Start, 753326989] Evaluate branch condition
                [LabelInstance, 559907603] Apply hook store Ao.activeIndices[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 1864679257] With parameters:
                        [LabelInstance, 1556548958] k = 0x3ba0
                        [LabelInstance, 1181196280] newValue = 0x0
                        [LabelInstance, 469617468] oldValue = 0x3361
                    [CVLExpInstance, 1374253421] Ghost assignment: ghostActiveIndices[0x3ba0] = 0
                    # snippet StoreSnippet -1026684545 ;
                     disp. path:  activeIndices[i = R363:bv256]
                      value sym:  0x0
                    # local storage change -1026684545
                [Store, 899689459] Store at Ao.activeIndices[0x3ba0] ↪ 0
                [LabelInstance, 1329789664] Apply hook store Ao.activeIndices.length := newLen (old: oldLen)
                    [LabelInstance, 982739999] With parameters:
                        [LabelInstance, 552271929] newLen = 0x3ba0
                        [LabelInstance, 346052708] oldLen = 0x3ba1
                    [CVLExpInstance, 1290614250] Ghost assignment: ghostAoLength = 0x3ba0
                    # snippet StoreSnippet -1425547913 ;
                     disp. path:  activeIndices
                      value sym:  R363:bv256
                    # local storage change -1425547913
                [Store, 1832864764] Store at Ao.activeIndices ↪ 0x3ba0
                    # snippet LoadSnippet 1009811320 ;
                     disp. path:  totalSum
                      value sym:  CANON99!!38:bv256
                    # local storage change 1009811320
                [Load, 355300522] Load from Ao.totalSum ↪ 0
                [Start, 56126739] Evaluate branch condition
                    # snippet StoreSnippet -1276326730 ;
                     disp. path:  totalSum
                      value sym:  R374:bv256
                    # local storage change -1276326730
                [Store, 650070775] Store at Ao.totalSum ↪ 0
                    # snippet LoadSnippet 2087854057 ;
                     disp. path:  elementCount
                      value sym:  CANON105!!6:bv256
                    # local storage change 2087854057
                [Load, 835229047] Load from Ao.elementCount ↪ 1
                [Start, 1329475520] Evaluate branch condition
                    # snippet StoreSnippet -725146659 ;
                     disp. path:  elementCount
                      value sym:  R377:bv256
                    # local storage change -725146659
                [Store, 265221057] Store at Ao.elementCount ↪ 0
                    # snippet StoreSnippet -1115207435 ;
                     disp. path:  lastRemoved
                      value sym:  R143:bv256
                    # local storage change -1115207435
                [Store, 1400563773] Store at Ao.lastRemoved ↪ 0
                    # snippet LoadSnippet -1508117129 ;
                     disp. path:  operationCount
                      value sym:  CANON129!!12:bv256
                    # local storage change -1508117129
                [Load, 653044744] Load from Ao.operationCount ↪ 0
                [Start, 412276538] Evaluate branch condition
                    # snippet StoreSnippet 1043099281 ;
                     disp. path:  operationCount
                      value sym:  R381:bv256
                    # local storage change 1043099281
                [Store, 1622830866] Store at Ao.operationCount ↪ 1
                [Return, 1678067768] Return
        [LabelInstance, 659170396] assert a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j]))
                # snippet DirectStorageLoad -1069401975 ;
                 disp. path:  totalSum
                  value sym:  R321:bv256
                # local storage change -1069401975
            [Load, 695147656] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad -840962902 ;
                 disp. path:  totalSum
                  value sym:  R374:bv256
                # local storage change -840962902
            [Load, 446575688] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad 1615349551 ;
                 disp. path:  elementCount
                  value sym:  CANON102!!325:bv256
                # local storage change 1615349551
            [Load, 1419045803] Load from A.elementCount ↪ 0
                # snippet DirectStorageLoad 747901971 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!378:bv256
                # local storage change 747901971
            [Load, 571104673] Load from Ao.elementCount ↪ 0
                # snippet DirectStorageLoad 944524370 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944524370
            [Load, 1934659124] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653212434 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653212434
            [Load, 403167330] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad 866725675 ;
                 disp. path:  lastRemoved
                  value sym:  R110:bv256
                # local storage change 866725675
            [Load, 1807593850] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -679842518 ;
                 disp. path:  lastRemoved
                  value sym:  R143:bv256
                # local storage change -679842518
            [Load, 455745273] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad 147711610 ;
                 disp. path:  operationCount
                  value sym:  CANON126!!329:bv256
                # local storage change 147711610
            [Load, 1820066438] Load from A.operationCount ↪ 1
                # snippet DirectStorageLoad -118523735 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!382:bv256
                # local storage change -118523735
            [Load, 1243485091] Load from Ao.operationCount ↪ 1
            [CVLExpInstance, 1278103035] Ghost read: ghostALength ↪ 0x3ba0
            [CVLExpInstance, 121130833] Ghost read: ghostAoLength ↪ 0x3ba0
                # snippet DirectStorageLoad 133689911 ;
                 disp. path:  values
                  value sym:  CANON140!!318:bv256
                # local storage change 133689911
            [Load, 190579970] Load from A.values ↪ 0x3ba0
                # snippet DirectStorageLoad 664393934 ;
                 disp. path:  activeIndices
                  value sym:  CANON143!!371:bv256
                # local storage change 664393934
            [Load, 828742849] Load from Ao.activeIndices ↪ 0x3ba0
[LabelInstance, 253382275] assert false
    [StorageTitleInstance, 1243466486] Global State
        [StorageTitleInstance, 553820834] Storage State
            [StorageTitleInstance, 1016902103] A
                [StorageStateValueInstance, 1630506641] elementCount: 0 (changed)
                [StorageStateValueInstance, 1170317880] lastAdded: 0
                [StorageStateValueInstance, 1910640528] lastRemoved: 0 (changed)
                [StorageStateValueInstance, 673782386] operationCount: 1 (changed)
                [StorageStateValueInstance, 904876768] totalSum: 0 (changed)
                [StorageStateValueInstance, 2105009671] values: 0x3ba0 (changed)
                [StorageStateValueInstance, 478738614] values[0x3b9f]: 0 (changed)
                [StorageStateValueInstance, 2089978847] values[0x3ba0]: 0 (changed)
            [StorageTitleInstance, 866500351] Ao
                [StorageStateValueInstance, 1897935186] activeIndices: 0x3ba0 (changed)
                [StorageStateValueInstance, 708197000] activeIndices[0x3b9f]: 0x3361 (changed)
                [StorageStateValueInstance, 1116897378] activeIndices[0x3ba0]: 0 (changed)
                [StorageStateValueInstance, 1549704329] elementCount: 0 (changed)
                [StorageStateValueInstance, 746884337] indexPosition[0x3361]: 0x3b9f (changed)
                [StorageStateValueInstance, 939327891] indexPosition[0x3364]: 0 (changed)
                [StorageStateValueInstance, 1639581342] lastAdded: 0
                [StorageStateValueInstance, 1227388148] lastRemoved: 0 (changed)
                [StorageStateValueInstance, 1094945316] operationCount: 1 (changed)
                [StorageStateValueInstance, 510519814] totalSum: 0 (changed)
                [StorageStateValueInstance, 802324899] values[0x3364]: 0 (changed)
        [StorageTitleInstance, 634900345] Balances
            [BalanceValueInstance, 2023256909] 0x6d67.balance: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff78 (2^256 - 136)
            [BalanceValueInstance, 156539778] A (0x6d65).balance: 0x2da4
            [BalanceValueInstance, 850447506] Ao (0x6d66).balance: 0x2da5
        [StorageTitleInstance, 696742330] Ghosts State
            [GhostValueInstance, 306081244] ghostALength: 0x3ba0 (changed)
            [GhostValueInstance, 1067154578] ghostAValues[0x3b9f]: 0 (changed)
            [GhostValueInstance, 192668591] ghostAValues[0x3ba0]: 0 (changed)
            [GhostValueInstance, 425941467] ghostActiveIndices[0x3b9f]: 0x3361 (changed)
            [GhostValueInstance, 2018678694] ghostActiveIndices[0x3ba0]: 0 (changed)
            [GhostValueInstance, 474553298] ghostAoLength: 0x3ba0 (changed)
            [GhostValueInstance, 1216083311] ghostAoValues[0x3364]: 0 (changed)
    -------- CVL model begin ------------
    -- type: bool --
    CANON11!!168                                  ~~> false
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON4!!160                                   ~~> false
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON279!!256                                 ~~>  true
       cvl                 : true
    CANON3!!76                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON4!!77                                    ~~> false
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON5!!78                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON6!!80                                    ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON12!!169                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON301!!274                                 ~~>  true
       cvl                 : true
    CANON5!!161                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON101                                      ~~>  true
       cvl                 : true
    CANON108                                      ~~>  true
       cvl                 : true
    CANON109                                      ~~>  true
       cvl                 : true
    CANON114                                      ~~>  true
       cvl                 : true
    CANON117                                      ~~>  true
       cvl                 : true
    CANON124                                      ~~>  true
       cvl                 : true
    CANON125                                      ~~>  true
       cvl                 : true
    CANON132                                      ~~>  true
       cvl                 : true
    CANON133                                      ~~>  true
       cvl                 : true
    CANON138                                      ~~>  true
       cvl                 : true
    CANON139                                      ~~>  true
       cvl                 : true
    CANON146                                      ~~>  true
       cvl                 : true
    CANON147                                      ~~>  true
       cvl                 : true
    CANON153                                      ~~>  true
       cvl                 : true
    CANON157                                      ~~>  true
       cvl                 : true
    CANON158                                      ~~>  true
       cvl                 : true
    CANON190                                      ~~>  true
       cvl                 : true
    CANON192                                      ~~>  true
       cvl                 : true
    CANON196                                      ~~>  true
       cvl                 : true
    CANON198                                      ~~>  true
       cvl                 : true
    CANON202                                      ~~>  true
       cvl                 : true
    CANON235                                      ~~>  true
       cvl                 : true
    CANON237                                      ~~>  true
       cvl                 : true
    CANON241                                      ~~>  true
       cvl                 : true
    CANON247                                      ~~>  true
       cvl                 : true
    CANON249                                      ~~>  true
       cvl                 : true
    CANON252                                      ~~>  true
       cvl                 : true
    CANON255                                      ~~>  true
       cvl                 : true
    CANON265                                      ~~>  true
       cvl                 : true
    CANON318                                      ~~>  true
       cvl                 : true
    CANON326                                      ~~>  true
       cvl                 : true
    CANON329                                      ~~>  true
       cvl                 : true
    CANON331                                      ~~>  true
       cvl                 : true
    CANON283!!260                                 ~~>  true
       cvl                 : true
    CANON13!!171                                  ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON302!!275                                 ~~>  true
       cvl                 : true
    CANON315!!285                                 ~~>  true
       cvl                 : true
    CANON307!!280                                 ~~>  true
       cvl                 : true
    CANON6!!163                                   ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON292!!265                                 ~~>  true
       cvl                 : true
    CANON297!!270                                 ~~>  true
       cvl                 : true
    CANON289!!264                                 ~~>  true
       cvl                 : true
    CANON10!!83                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON11!!84                                   ~~> false
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON12!!85                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON13!!87                                   ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON48                                       ~~>  true
       cvl                 : true
    CANON51                                       ~~>  true
       cvl                 : true
    CANON58                                       ~~>  true
       cvl                 : true
    CANON63                                       ~~>  true
       cvl                 : true
    CANON68                                       ~~>  true
       cvl                 : true
    CANON73                                       ~~>  true
       cvl                 : true
    CANON78                                       ~~>  true
       cvl                 : true
    CANON83                                       ~~>  true
       cvl                 : true
    CANON88                                       ~~>  true
       cvl                 : true
    CANON93                                       ~~>  true
       cvl                 : true
    CANON94                                       ~~>  true
       cvl                 : true
    CANON311!!283                                 ~~>  true
       cvl                 : true
    CANON308!!281                                 ~~>  true
       cvl                 : true
    CANON280!!257                                 ~~>  true
       cvl                 : true
    CANON272!!251                                 ~~>  true
       cvl                 : true
    CANON298!!271                                 ~~>  true
       cvl                 : true
    CANON10!!167                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON3!!159                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON286!!261                                 ~~>  true
       cvl                 : true
    -- type: int --
    CANON!!158                                    ~~>                                                         0x32fa92b2
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON9!!172                                   ~~>                                                             0x6d66
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON1!!54                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON1!!79                                    ~~>                                                                0x1
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON2!!55                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON2!!81                                    ~~>                                                             0x6d65
       cvl                 : true
       cvl.display         : f
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON7!!60                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON7!!82                                    ~~>                                                         0x32fa92b2
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON8!!61                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON8!!86                                    ~~>                                                                0x1
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON9!!62                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON9!!88                                    ~~>                                                             0x6d66
       cvl                 : true
       cvl.display         : g
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON136!!372                                 ~~>                                                             0x3ba0
       cvl                 : true
       cvl.display         : ghostAoLength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON1!!162                                   ~~>                                                                0x1
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON134!!13                                  ~~>                                                             0x3ba1
       cvl                 : true
       cvl.display         : ghostALength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON!!66                                     ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON!!75                                     ~~>                                                         0x32fa92b2
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON136!!14                                  ~~>                                                             0x3ba1
       cvl                 : true
       cvl.display         : ghostAoLength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON24                                       ~~>                                                             0x6d67
       cvl                 : true
       cvl.display         : eA.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON25                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON26                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON27                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON28                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON29                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON30                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON31                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON32                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON33                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON34                                       ~~>                                                             0x6d67
       cvl                 : true
       cvl.display         : eAo.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON35                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON36                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON37                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON38                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON39                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON40                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON41                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON42                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON43                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON2!!164                                   ~~>                                                             0x6d65
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:134:43)
    CANON7!!166                                   ~~>                                                         0x32fa92b2
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    CANON134!!319                                 ~~>                                                             0x3ba0
       cvl                 : true
       cvl.display         : ghostALength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON8!!170                                   ~~>                                                                0x1
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:134:53)
    -- type: bv256 --
    CANON160                                      ~~>                                                               0x24
       cvl                 : true
       cvl.display         : args.length
       cvl.type            : uint256
       cvl.def.site        : Function(range=mappingarray.spec:105:5)
    -- type: bytemap --
    CANON163havocme16889                          ~~> {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    0x3b9f
  )
}
       cvl                 : true
       cvl.display         : args
       cvl.type            : calldataarg
       cvl.def.site        : Function(range=mappingarray.spec:105:5)
    -------- CVL model end --------------
    -------- TAC model begin ------------
      OK_4_0_0_0_0_0:bool  -->                                                              false
      ReachabilityCertora3799_1016_0_2_0_3:bool  -->                                                              false
      CANON11!!168:bool  -->                                                              false
      ReachabilityCertora3_0_0_1_0_10:bool  -->                                                               true
      ReachabilityCertora1482_1020_0_2_0_5:bool  -->                                                               true
      tacCalldatabufCANON0@2:bv256  -->                                                                0x0
      tacCalldatabufCANON0@3:bv256  -->                                                                0x0
      tacCalldatabufCANON1@2:bv256  -->                                                             0x3b9f
      tacCalldatabufCANON1@3:bv256  -->                                                             0x3b9f
       CANON!!158:int  -->                                                         0x32fa92b2
      ReachabilityCertora1399_1020_0_2_0_4:bool  -->                                                               true
      from_skey:ghostmap((uninterp) skey->bv256)  -->                                          {[x:bv256] ->
  x:bv256
}
      tacM0x40!!0:bv256  -->                                                                0x0
      tacM0x40!!1:bv256  -->                                                                0x0
      CANON122!!379:bv256  -->                                                                0x0
      CANON4!!160:bool  -->                                                              false
      CANON143!!371:bv256  -->                                                             0x3ba0
      CANON9!!172:int  -->                                                             0x6d66
      CANON119!!326:bv256  -->                                                                0x0
      to_skey:ghostmap(bv256->(uninterp) skey)  -->                                          {[x:bv256] ->
  x:bv256
}
       CANON1!!54:int  -->                                                                0x0
       CANON1!!79:int  -->                                                                0x1
      CANON279!!256:bool  -->                                                               true
       CANON2!!55:int  -->                                                                0x0
       CANON2!!81:int  -->                                                             0x6d65
      CANON3!!76:bool  -->                                                              false
      CANON4!!77:bool  -->                                                              false
      sklm!certora__j_311505!callId0!35:bv256  -->                                                             0x3b9e
      CANON5!!78:bool  -->                                                              false
      CANON6!!80:bool  -->                                                              false
       CANON7!!60:int  -->                                                                0x0
       CANON7!!82:int  -->                                                         0x32fa92b2
       CANON8!!61:int  -->                                                                0x0
       CANON8!!86:int  -->                                                                0x1
       CANON9!!62:int  -->                                                                0x0
       CANON9!!88:int  -->                                                             0x6d66
      CANON12!!169:bool  -->                                                              false
      ReachabilityCertora0_0_0_0_0_0:bool  -->                                                               true
      CANON301!!274:bool  -->                                                               true
      ReachabilityCertora0_0_0_2_0_2:bool  -->                                                               true
      ReachabilityCertora0_0_0_3_0_7:bool  -->                                                               true
      ReachabilityCertora1_0_0_1_0_1:bool  -->                                                               true
      CANON96!!37:bv256  -->                                                                0x0
      CANON102!!325:bv256  -->                                                                0x0
      OK_3_0_0_1_0_10:bool  -->                                                              false
      CANON96!!322:bv256  -->                                                                0x0
      CANON99!!38:bv256  -->                                                                0x0
      ReachabilityCertora2_0_0_1_0_6:bool  -->                                                               true
      CANON5!!161:bool  -->                                                              false
        CANON101:bool  -->                                                               true
        CANON108:bool  -->                                                               true
        CANON109:bool  -->                                                               true
        CANON114:bool  -->                                                               true
        CANON117:bool  -->                                                               true
        CANON124:bool  -->                                                               true
        CANON125:bool  -->                                                               true
        CANON132:bool  -->                                                               true
        CANON133:bool  -->                                                               true
        CANON138:bool  -->                                                               true
        CANON139:bool  -->                                                               true
        CANON146:bool  -->                                                               true
        CANON147:bool  -->                                                               true
        CANON153:bool  -->                                                               true
        CANON157:bool  -->                                                               true
        CANON158:bool  -->                                                               true
       CANON160:bv256  -->                                                               0x24
       CANON165:bv256  -->                                                                0x0
        CANON190:bool  -->                                                               true
        CANON192:bool  -->                                                               true
         CANON195:int  -->                                                                0x0
        CANON196:bool  -->                                                               true
        CANON198:bool  -->                                                               true
        CANON202:bool  -->                                                               true
         CANON204:int  -->                                                                0x0
       CANON211:bv256  -->                                                                0x0
        CANON235:bool  -->                                                               true
        CANON237:bool  -->                                                               true
         CANON240:int  -->                                                             0x3364
        CANON241:bool  -->                                                               true
         CANON246:int  -->                                                                0x0
        CANON247:bool  -->                                                               true
        CANON249:bool  -->                                                               true
        CANON252:bool  -->                                                               true
         CANON254:int  -->                                                             0x3361
        CANON255:bool  -->                                                               true
         CANON259:int  -->                                                                0x0
        CANON265:bool  -->                                                               true
         CANON267:int  -->                                                                0x0
        CANON318:bool  -->                                                               true
         CANON320:int  -->                                                             0x3361
        CANON326:bool  -->                                                               true
         CANON328:int  -->                                                                0x0
        CANON329:bool  -->                                                               true
        CANON331:bool  -->                                                               true
         CANON333:int  -->                                                                0x0
      CANON283!!260:bool  -->                                                               true
      CANON136!!372:int  -->                                                             0x3ba0
      CANON122!!10:bv256  -->                                                                0x0
      OK_1865_1018_0_3_0_8:bool  -->                                                              false
      ReachabilityCertora4_0_0_0_0_0:bool  -->                                                               true
      CANON126!!11:bv256  -->                                                                0x0
      CANON129!!12:bv256  -->                                                                0x0
      CANON13!!171:bool  -->                                                              false
      CANON302!!275:bool  -->                                                               true
      tacCalldatabuf@2:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    0x3b9f
    0x0
  )
}
      tacCalldatabuf@3:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x24 arg0:bv256)) LNot(Eq(arg0:bv256 0x0)))
    0x3b9f
    0x0
  )
}
      CANON315!!285:bool  -->                                                               true
             R2:bv256  -->                                                                0x1
             R3:bv256  -->                                                                0x1
             B73:bool  -->                                                               true
            R50:bv256  -->                                                             0x6d66
            R51:bv256  -->                                                                0x1
            R52:bv256  -->                                                                0x2
            R53:bv256  -->                                                                0x4
            R63:bv256  -->                                                             0x6d65
            R67:bv256  -->                                                                0x1
            R68:bv256  -->                                                                0x1
            R70:bv256  -->                                                                0x1
            R71:bv256  -->                                                                0x1
            R91:bv256  -->                                                             0x6d67
            R93:bv256  --> 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff78
            R96:bv256  -->                                                             0x2da4
            R98:bv256  -->                                                             0x2da4
      CANON307!!280:bool  -->                                                               true
      ReachabilityCertora1810_1018_0_3_0_9:bool  -->                                                               true
      CANON1!!162:int  -->                                                                0x1
            B117:bool  -->                                                              false
            B156:bool  -->                                                              false
            B235:bool  -->                                                               true
            B236:bool  -->                                                               true
            B282:bool  -->                                                               true
            B284:bool  -->                                                               true
            B286:bool  -->                                                              false
             I103:int  -->                                                             0x3ba1
             I106:int  -->                                                             0x3ba1
             I111:int  -->                                                             0x3b9f
             I114:int  -->                                                             0x3ba1
             I131:int  -->                                                             0x3ba1
             I134:int  -->                                                             0x3ba1
             I139:int  -->                                                             0x3b9f
             I144:int  -->                                                             0x3364
             I146:int  -->                                                             0x3ba1
             I150:int  -->                                                             0x3ba1
             I155:int  -->                                                             0x3ba0
             I174:int  -->                                                             0x6d67
             I176:int  -->                                                             0x6d67
             I177:int  -->                                                                0x0
             I178:int  -->                                                                0x0
             I180:int  -->                                                                0x0
             I182:int  -->                                                                0x0
             I184:int  -->                                                                0x0
             I186:int  -->                                                                0x0
             I188:int  -->                                                                0x0
             I190:int  -->                                                                0x0
             I192:int  -->                                                                0x0
             I194:int  -->                                                                0x0
             I196:int  -->                                                                0x0
             I198:int  -->                                                                0x0
             I200:int  -->                                                                0x0
             I202:int  -->                                                                0x0
             I204:int  -->                                                                0x0
             I206:int  -->                                                                0x0
             I208:int  -->                                                                0x0
             I210:int  -->                                                                0x0
             I229:int  -->                                                             0x3ba1
             I230:int  -->                                                             0x3ba1
             I272:int  -->                                                             0x3ba0
             I273:int  -->                                                             0x3ba0
             I290:int  -->                                                             0x3ba1
             I295:int  -->                                                             0x3ba0
             I297:int  -->                                                             0x3ba1
             I303:int  -->                                                             0x3b9f
             I309:int  -->                                                             0x3ba1
             I315:int  -->                                                             0x3ba0
             I333:int  -->                                                             0x3ba1
             I339:int  -->                                                             0x3b9f
             I354:int  -->                                                             0x3364
             I362:int  -->                                                             0x3ba1
             I368:int  -->                                                             0x3ba0
           R100:bv256  -->                                                                0x1
      R108:(uninterp) skey  -->                                                             0x6557
      R109:(uninterp) skey  -->                                                             0xa0f6
           R110:bv256  -->                                                                0x0
           R115:bv256  -->                                                             0x3ba0
           R120:bv256  -->                                                             0x6d67
           R122:bv256  --> 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff78
           R125:bv256  -->                                                             0x2da5
           R127:bv256  -->                                                             0x2da5
           R128:bv256  -->                                                                0x1
      R136:(uninterp) skey  -->                                                             0x2711
      R137:(uninterp) skey  -->                                                             0x62b0
           R138:bv256  -->                                                             0x3364
      R141:(uninterp) skey  -->                                                             0x31cc
           R143:bv256  -->                                                                0x0
           R147:bv256  -->                                                             0x3ba0
      R152:(uninterp) skey  -->                                                             0x2711
      R153:(uninterp) skey  -->                                                             0x62b1
           R154:bv256  -->                                                             0x3361
           R241:bv256  -->                                                                0x0
           R242:bv256  -->                                                             0x3b9f
           R247:bv256  -->                                                                0x0
           R248:bv256  -->                                                             0x3b9f
           R287:bv256  -->                                                             0x3ba0
      R292:(uninterp) skey  -->                                                             0x6557
      R293:(uninterp) skey  -->                                                             0xa0f7
           R294:bv256  -->                                                                0x0
      R299:(uninterp) skey  -->                                                             0x6557
      R300:(uninterp) skey  -->                                                             0xa0f6
           R301:bv256  -->                                                                0x0
           R310:bv256  -->                                                             0x3ba0
      R311:(uninterp) skey  -->                                                             0x6557
      R312:(uninterp) skey  -->                                                             0xa0f7
           R313:bv256  -->                                                                0x0
           R321:bv256  -->                                                                0x0
           R324:bv256  -->                                                                0x0
           R328:bv256  -->                                                                0x1
      R335:(uninterp) skey  -->                                                             0x2711
      R336:(uninterp) skey  -->                                                             0x62b0
           R337:bv256  -->                                                             0x3364
           R342:bv256  -->                                                                0x2
      R343:(uninterp) skey  -->                                                             0x9200
      R350:(uninterp) skey  -->                                                             0x31cc
           R352:bv256  -->                                                                0x0
           R357:bv256  -->                                                                0x2
      R358:(uninterp) skey  -->                                                             0x97d8
           R363:bv256  -->                                                             0x3ba0
      R364:(uninterp) skey  -->                                                             0x2711
      R365:(uninterp) skey  -->                                                             0x62b1
           R366:bv256  -->                                                             0x3361
           R374:bv256  -->                                                                0x0
           R377:bv256  -->                                                                0x0
           R381:bv256  -->                                                                0x1
      lastHasThrown!!118:bool  -->                                                              false
      lastHasThrown!!330:bool  -->                                                              false
      lastHasThrown!!383:bool  -->                                                              false
      CANON140!!318:bv256  -->                                                             0x3ba0
      CANON6!!163:bool  -->                                                              false
      CANON292!!265:bool  -->                                                               true
      CANON129!!382:bv256  -->                                                                0x1
      CANON297!!270:bool  -->                                                               true
      CANON134!!13:int  -->                                                             0x3ba1
        CANON!!66:int  -->                                                                0x0
        CANON!!75:int  -->                                                         0x32fa92b2
      CANON289!!264:bool  -->                                                               true
      CANON136!!14:int  -->                                                             0x3ba1
      CANON10!!83:bool  -->                                                              false
      CANON102!!5:bv256  -->                                                                0x1
      CANON105!!6:bv256  -->                                                                0x1
      CANON11!!84:bool  -->                                                              false
      CANON111!!7:bv256  -->                                                                0x0
      CANON113!!8:bv256  -->                                                                0x0
      lastReverted!!331:bool  -->                                                              false
      lastReverted!!384:bool  -->                                                              false
      CANON119!!9:bv256  -->                                                                0x0
      CANON12!!85:bool  -->                                                              false
      CANON13!!87:bool  -->                                                              false
          CANON24:int  -->                                                             0x6d67
          CANON25:int  -->                                                                0x0
          CANON26:int  -->                                                                0x0
          CANON27:int  -->                                                                0x0
          CANON28:int  -->                                                                0x0
          CANON29:int  -->                                                                0x0
          CANON30:int  -->                                                                0x0
          CANON31:int  -->                                                                0x0
          CANON32:int  -->                                                                0x0
          CANON33:int  -->                                                                0x0
          CANON34:int  -->                                                             0x6d67
          CANON35:int  -->                                                                0x0
          CANON36:int  -->                                                                0x0
          CANON37:int  -->                                                                0x0
          CANON38:int  -->                                                                0x0
          CANON39:int  -->                                                                0x0
          CANON40:int  -->                                                                0x0
          CANON41:int  -->                                                                0x0
          CANON42:int  -->                                                                0x0
          CANON43:int  -->                                                                0x0
         CANON48:bool  -->                                                               true
         CANON51:bool  -->                                                               true
         CANON58:bool  -->                                                               true
         CANON63:bool  -->                                                               true
         CANON68:bool  -->                                                               true
         CANON73:bool  -->                                                               true
         CANON78:bool  -->                                                               true
         CANON83:bool  -->                                                               true
         CANON88:bool  -->                                                               true
         CANON93:bool  -->                                                               true
         CANON94:bool  -->                                                               true
      ReachabilityCertora1865_1018_0_3_0_8:bool  -->                                                               true
      CANON311!!283:bool  -->                                                               true
      CANON308!!281:bool  -->                                                               true
      CANON2!!164:int  -->                                                             0x6d65
      CANON280!!257:bool  -->                                                               true
      CANON272!!251:bool  -->                                                               true
      sklm!certora__i_211502!callId0!36:bv256  -->                                                             0x3b9d
      CANON7!!166:int  -->                                                         0x32fa92b2
      OK_1482_1020_0_2_0_5:bool  -->                                                              false
      CANON140!!15:bv256  -->                                                             0x3ba1
      CANON163havocme16889:bytemap  -->   {[x:bv256] ->
  Ite(
    x:bv256 == 0x0
    0x0
    0x3b9f
  )
}
      CANON143!!16:bv256  -->                                                             0x3ba1
      CANON298!!271:bool  -->                                                               true
      CANON10!!167:bool  -->                                                              false
      OK_0_0_0_0_0_0:bool  -->                                                              false
      lastHasThrown!!89:bool  -->                                                              false
      OK_0_0_0_2_0_2:bool  -->                                                              false
      ReachabilityCertora0_0_0_3_0_3335:bool  -->                                                              false
      OK_0_0_0_3_0_7:bool  -->                                                              false
      OK_1_0_0_1_0_1:bool  -->                                                              false
      CANON3!!159:bool  -->                                                              false
      CANON105!!378:bv256  -->                                                                0x0
      CANON99!!375:bv256  -->                                                                0x0
      CANON134!!319:int  -->                                                             0x3ba0
      tacSighash!!64:bv256  -->                                                         0x32fa92b2
      tacSighash!!65:bv256  -->                                                         0x32fa92b2
      OK_2_0_0_1_0_6:bool  -->                                                              false
      CANON126!!329:bv256  -->                                                                0x1
      CANON8!!170:int  -->                                                                0x1
      sklm!certora__i_111453!callId0!34:bv256  -->                                                             0x3b9c
      CANON286!!261:bool  -->                                                               true
    -------- TAC model end --------------
    
