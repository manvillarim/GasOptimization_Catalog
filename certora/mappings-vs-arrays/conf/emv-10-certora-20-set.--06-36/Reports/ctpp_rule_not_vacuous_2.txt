Calltrace Debug Information
[StorageTitleInstance, 1260626120] Global State
    [StorageTitleInstance, 1976020187] Storage State
        [StorageTitleInstance, 88062859] A
            [StorageStateValueInstance, 2001912527] elementCount: 0
            [StorageStateValueInstance, 555813133] lastAdded: 0
            [StorageStateValueInstance, 1766381702] lastRemoved: 0
            [StorageStateValueInstance, 290702791] operationCount: 0
            [StorageStateValueInstance, 1895184792] totalSum: 0
            [StorageStateValueInstance, 1505112042] values: 0x5f45
            [StorageStateValueInstance, 1989497010] values[0x5f44]: 0
        [StorageTitleInstance, 2036850266] Ao
            [StorageStateValueInstance, 941359639] activeIndices: 0x5f45
            [StorageStateValueInstance, 1354605441] activeIndices[0x5f44]: 0x302c
            [StorageStateValueInstance, 208759268] elementCount: 0
            [StorageStateValueInstance, 1260647230] lastAdded: 0
            [StorageStateValueInstance, 326589687] lastRemoved: 0
            [StorageStateValueInstance, 787170483] operationCount: 0
            [StorageStateValueInstance, 693249731] totalSum: 0
            [StorageStateValueInstance, 2101123796] values[0x302c]: 0
    [StorageTitleInstance, 1418064224] Balances
        [BalanceValueInstance, 549452191] 0x431a.balance: 0x5663
        [BalanceValueInstance, 409184117] A (0x4319).balance: 0x5662
        [BalanceValueInstance, 26240151] Ao (0x431b).balance: 0x3738
    [StorageTitleInstance, 2053475124] Ghosts State
        [GhostValueInstance, 633992934] ghostALength: 0x5f45
        [GhostValueInstance, 538228005] ghostAValues[0x5f44]: 0
        [GhostValueInstance, 581097836] ghostActiveIndices[0x5f44]: 0x302c
        [GhostValueInstance, 1959316007] ghostAoLength: 0x5f45
        [GhostValueInstance, 509377694] ghostAoValues[0x302c]: 0
[LabelInstance, 459558893] Setup
    [LabelInstance, 792304724] multi contract setup
    [LabelInstance, 496169574] rule parameters setup
    [LabelInstance, 1616364998] contract address vars initialized
    [LabelInstance, 1500902662] setup read tracking instrumentation
    [LabelInstance, 978131264] last storage initialize
    [LabelInstance, 818335149] assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero
    [LabelInstance, 1851869062] assuming address(0).code has no code deployed
    [LabelInstance, 407519881] assumptions about contracts' addresses
    [LabelInstance, 1243602905] assumptions about static addresses
    [LabelInstance, 1286785170] establish addresses of precompiled contracts
    [LabelInstance, 671874037] assumptions about uniqueness of contracts' addresses
    [LabelInstance, 1646242423] static links
    [LabelInstance, 1456099578] record starting nonces
    [LabelInstance, 208073961] cloned contracts have no balances
    [LabelInstance, 2076537539] Linked immutable setup
    [LabelInstance, 1679172574] Constrain immutables
    [LabelInstance, 1616900646] establish equivalence of extension and base contract immutables
[LabelInstance, 1537577848] gasOptimizationCorrectness(f, g)
    [CVLFunc, 195473829] 1 ; gasOptimizationCorrectness ; []; [] ; {} : [] 
        gasOptimizationCorrectness()
        [LabelInstance, 1593539548] env eA
        [LabelInstance, 1093299431] env eAo
        [LabelInstance, 920852969] calldataarg args
        [LabelInstance, 141995273] require eA == eAo && (a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j])))
                # snippet DirectStorageLoad -1777121603 ;
                 disp. path:  totalSum
                  value sym:  CANON96!!33:bv256
                # local storage change -1777121603
            [Load, 223740480] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad 1956934840 ;
                 disp. path:  totalSum
                  value sym:  CANON99!!34:bv256
                # local storage change 1956934840
            [Load, 529074777] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad 150613009 ;
                 disp. path:  elementCount
                  value sym:  CANON103!!5:bv256
                # local storage change 150613009
            [Load, 831222800] Load from A.elementCount ↪ 0
                # snippet DirectStorageLoad 859301169 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!6:bv256
                # local storage change 859301169
            [Load, 212371917] Load from Ao.elementCount ↪ 0
                # snippet DirectStorageLoad 944524370 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944524370
            [Load, 835833370] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653212434 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653212434
            [Load, 1717424571] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad -608554854 ;
                 disp. path:  lastRemoved
                  value sym:  CANON119!!9:bv256
                # local storage change -608554854
            [Load, 203162260] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -957522104 ;
                 disp. path:  lastRemoved
                  value sym:  CANON121!!10:bv256
                # local storage change -957522104
            [Load, 1152517179] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad 1858403144 ;
                 disp. path:  operationCount
                  value sym:  CANON126!!11:bv256
                # local storage change 1858403144
            [Load, 2074915753] Load from A.operationCount ↪ 0
                # snippet DirectStorageLoad 1297492483 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!12:bv256
                # local storage change 1297492483
            [Load, 1945400686] Load from Ao.operationCount ↪ 0
            [CVLExpInstance, 521195814] Ghost read: ghostALength ↪ 0x5f45
            [CVLExpInstance, 1264028963] Ghost read: ghostAoLength ↪ 0x5f45
                # snippet DirectStorageLoad -2046988109 ;
                 disp. path:  values
                  value sym:  CANON140!!13:bv256
                # local storage change -2046988109
            [Load, 1442336283] Load from A.values ↪ 0x5f45
                # snippet DirectStorageLoad -1614445897 ;
                 disp. path:  activeIndices
                  value sym:  CANON142!!14:bv256
                # local storage change -1614445897
            [Load, 91688655] Load from Ao.activeIndices ↪ 0x5f45
        [LabelInstance, 485979814] A.f(eA, args)
            [External, 1799282318] A.updateValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@2:bv256)])
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=36, value=tacCalldatabufCANON2@2:bv256)])
                [TransferInstance, 2090982756] sender: 0x431a; receiver: A (0x4319); transferred amount: 0
                    # snippet WithLocSym 2047143634 ;
                       loc sym:  R50:bv256
                     value sym:  R87:bv256
                [Load, 1092465993] Load from A.[raw storage address] A (0x4319) ↪ 1
                [Start, 1727576458] Evaluate branch condition
                [Start, 2066727285] Evaluate branch condition
                [LabelInstance, 160917897] Apply hook load len := A.values.length
                    [LabelInstance, 629940751] With parameters:
                        [LabelInstance, 110881757] len = ?
                    [CVLExpInstance, 54179346] Ghost read: ghostALength ↪ 0x5f45
                    # snippet LoadSnippet -622382495 ;
                     disp. path:  values
                      value sym:  CANON140!!13:bv256
                    # local storage change -622382495
                [Load, 827542749] Load from A.values ↪ 0x5f45
                [Start, 1963695266] Evaluate branch condition
                [LabelInstance, 748115165] Apply hook load len := A.values.length
                    [LabelInstance, 2060189051] With parameters:
                        [LabelInstance, 1372943195] len = ?
                    [CVLExpInstance, 2014448463] Ghost read: ghostALength ↪ 0x5f45
                    # snippet LoadSnippet -622318976 ;
                     disp. path:  values
                      value sym:  CANON140!!13:bv256
                    # local storage change -622318976
                [Load, 1857394988] Load from A.values ↪ 0x5f45
                [Start, 1261474212] Evaluate branch condition
                [LabelInstance, 822438962] Apply hook load val := A.values[INDEX uint256 k]
                    [LabelInstance, 1495613742] With parameters:
                        [LabelInstance, 463200223] k = 0x5f44
                        [LabelInstance, 1416220857] val = ?
                    [CVLExpInstance, 1318535930] Ghost read: ghostAValues[0x5f44] ↪ 0
                    # snippet LoadSnippet 514787790 ;
                     disp. path:  values[i = R241:bv256]
                      value sym:  R98:bv256
                    # local storage change 514787790
                [Load, 1028146743] Load from A.values[0x5f44] ↪ 0
                [LocalAssignmentInstance, 2028471142] oldValue  ↪  0
                [LabelInstance, 1646192858] Apply hook load len := A.values.length
                    [LabelInstance, 384493297] With parameters:
                        [LabelInstance, 1777103845] len = ?
                    [CVLExpInstance, 1369943693] Ghost read: ghostALength ↪ 0x5f45
                    # snippet LoadSnippet -622307072 ;
                     disp. path:  values
                      value sym:  CANON140!!13:bv256
                    # local storage change -622307072
                [Load, 1156236379] Load from A.values ↪ 0x5f45
                [Start, 100040537] Evaluate branch condition
                [LabelInstance, 252659545] Apply hook store A.values[INDEX uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 1672500211] With parameters:
                        [LabelInstance, 1902808002] k = 0x5f44
                        [LabelInstance, 1196441089] newValue = 0x0
                        [LabelInstance, 839945277] oldValue = 0x0
                    [CVLExpInstance, 1407086151] Ghost assignment: ghostAValues[0x5f44] = 0
                    # snippet StoreSnippet -1920318935 ;
                     disp. path:  values[i = R241:bv256]
                      value sym:  R242:bv256
                    # local storage change -1920318935
                [Store, 1993333605] Store at A.values[0x5f44] ↪ 0
                    # snippet LoadSnippet -846019913 ;
                     disp. path:  totalSum
                      value sym:  CANON96!!33:bv256
                    # local storage change -846019913
                [Load, 816403339] Load from A.totalSum ↪ 0
                [Start, 107888839] Evaluate branch condition
                [Start, 652388891] Evaluate branch condition
                    # snippet StoreSnippet -1396446288 ;
                     disp. path:  totalSum
                      value sym:  R111:bv256
                    # local storage change -1396446288
                [Store, 780032337] Store at A.totalSum ↪ 0
                    # snippet LoadSnippet 185994442 ;
                     disp. path:  operationCount
                      value sym:  CANON126!!11:bv256
                    # local storage change 185994442
                [Load, 1412522526] Load from A.operationCount ↪ 0
                [Start, 548239399] Evaluate branch condition
                    # snippet StoreSnippet 207248946 ;
                     disp. path:  operationCount
                      value sym:  R114:bv256
                    # local storage change 207248946
                [Store, 330083419] Store at A.operationCount ↪ 1
                [Return, 1338297262] Return
        [LabelInstance, 272261594] Ao.g(eAo, args)
            [External, 1537036218] Ao.updateValue()
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=4, value=tacCalldatabufCANON1@3:bv256)])
                    -> call data movement CalldataScalars(scalars=[Scalar(byteOffset=36, value=tacCalldatabufCANON2@3:bv256)])
                [TransferInstance, 757460710] sender: 0x431a; receiver: Ao (0x431b); transferred amount: 0
                    # snippet WithLocSym -716815597 ;
                       loc sym:  R37:bv256
                     value sym:  R128:bv256
                [Load, 1146476887] Load from Ao.[raw storage address] Ao (0x431b) ↪ 1
                [Start, 128079030] Evaluate branch condition
                [Start, 913521511] Evaluate branch condition
                [LabelInstance, 883138961] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 1591105843] With parameters:
                        [LabelInstance, 1262789051] len = ?
                    [CVLExpInstance, 1690502071] Ghost read: ghostAoLength ↪ 0x5f45
                    # snippet LoadSnippet -1585067291 ;
                     disp. path:  activeIndices
                      value sym:  CANON142!!14:bv256
                    # local storage change -1585067291
                [Load, 1296402839] Load from Ao.activeIndices ↪ 0x5f45
                [Start, 557211341] Evaluate branch condition
                [LabelInstance, 1326541353] Apply hook load len := Ao.activeIndices.length
                    [LabelInstance, 867370695] With parameters:
                        [LabelInstance, 1390098455] len = ?
                    [CVLExpInstance, 1099482295] Ghost read: ghostAoLength ↪ 0x5f45
                    # snippet LoadSnippet -1585033532 ;
                     disp. path:  activeIndices
                      value sym:  CANON142!!14:bv256
                    # local storage change -1585033532
                [Load, 84721293] Load from Ao.activeIndices ↪ 0x5f45
                [Start, 773981653] Evaluate branch condition
                [LabelInstance, 632458118] Apply hook load val := Ao.activeIndices[INDEX uint256 k]
                    [LabelInstance, 580411131] With parameters:
                        [LabelInstance, 1107322099] k = 0x5f44
                        [LabelInstance, 2092096971] val = ?
                    [CVLExpInstance, 1307412320] Ghost read: ghostActiveIndices[0x5f44] ↪ 0x302c
                    # snippet LoadSnippet -516143382 ;
                     disp. path:  activeIndices[i = R248:bv256]
                      value sym:  R139:bv256
                    # local storage change -516143382
                [Load, 769816480] Load from Ao.activeIndices[0x5f44] ↪ 0x302c
                [LocalAssignmentInstance, 1812248851] realIndex  ↪  0x302c
                [LabelInstance, 112356829] Apply hook load val := Ao.values[KEY uint256 k]
                    [LabelInstance, 667233516] With parameters:
                        [LabelInstance, 421789891] k = 0x302c
                        [LabelInstance, 1352793813] val = ?
                    [CVLExpInstance, 1164492185] Ghost read: ghostAoValues[0x302c] ↪ 0
                    # snippet LoadSnippet 365210311 ;
                     disp. path:  values[k = R139:bv256]
                      value sym:  R144:bv256
                    # local storage change 365210311
                [Load, 1271155604] Load from Ao.values[0x302c] ↪ 0
                [LocalAssignmentInstance, 1918855223] oldValue  ↪  0
                [LabelInstance, 769091583] Apply hook store Ao.values[KEY uint256 k] := newValue (old: oldValue)
                    [LabelInstance, 768836521] With parameters:
                        [LabelInstance, 1151530348] k = 0x302c
                        [LabelInstance, 1295328031] newValue = 0x0
                        [LabelInstance, 1540054489] oldValue = 0x0
                    [CVLExpInstance, 1790202818] Ghost assignment: ghostAoValues[0x302c] = 0
                    # snippet StoreSnippet 1284493207 ;
                     disp. path:  values[k = R139:bv256]
                      value sym:  R249:bv256
                    # local storage change 1284493207
                [Store, 963564141] Store at Ao.values[0x302c] ↪ 0
                    # snippet LoadSnippet 1754005508 ;
                     disp. path:  totalSum
                      value sym:  CANON99!!34:bv256
                    # local storage change 1754005508
                [Load, 1571234692] Load from Ao.totalSum ↪ 0
                [Start, 1552124028] Evaluate branch condition
                [Start, 350354029] Evaluate branch condition
                    # snippet StoreSnippet 2081584199 ;
                     disp. path:  totalSum
                      value sym:  R155:bv256
                    # local storage change 2081584199
                [Store, 1532210982] Store at Ao.totalSum ↪ 0
                    # snippet LoadSnippet -1508947433 ;
                     disp. path:  operationCount
                      value sym:  CANON129!!12:bv256
                    # local storage change -1508947433
                [Load, 1057754315] Load from Ao.operationCount ↪ 0
                [Start, 2131534654] Evaluate branch condition
                    # snippet StoreSnippet -609687863 ;
                     disp. path:  operationCount
                      value sym:  R158:bv256
                    # local storage change -609687863
                [Store, 1688542240] Store at Ao.operationCount ↪ 1
                [Return, 583640333] Return
        [LabelInstance, 2113707979] assert a.totalSum == ao.totalSum && a.elementCount == ao.elementCount && a.lastAdded == ao.lastAdded && a.lastRemoved == ao.lastRemoved && a.operationCount == ao.operationCount && ghostALength == ghostAoLength && to_mathint(a.values.length) == to_mathint(ao.activeIndices.length) && (forall uint256 i. to_mathint(i) < ghostALength => ghostAValues[i] == ghostAoValues[ghostActiveIndices[i]]) && (forall uint256 i. (forall uint256 j. to_mathint(i) < ghostAoLength && to_mathint(j) < ghostAoLength && i != j => ghostActiveIndices[i] != ghostActiveIndices[j]))
                # snippet DirectStorageLoad -1147559030 ;
                 disp. path:  totalSum
                  value sym:  R111:bv256
                # local storage change -1147559030
            [Load, 1735644697] Load from A.totalSum ↪ 0
                # snippet DirectStorageLoad -1777994487 ;
                 disp. path:  totalSum
                  value sym:  R155:bv256
                # local storage change -1777994487
            [Load, 729518795] Load from Ao.totalSum ↪ 0
                # snippet DirectStorageLoad 150613009 ;
                 disp. path:  elementCount
                  value sym:  CANON103!!5:bv256
                # local storage change 150613009
            [Load, 1156950884] Load from A.elementCount ↪ 0
                # snippet DirectStorageLoad 859301169 ;
                 disp. path:  elementCount
                  value sym:  CANON105!!6:bv256
                # local storage change 859301169
            [Load, 1567520502] Load from Ao.elementCount ↪ 0
                # snippet DirectStorageLoad 944524370 ;
                 disp. path:  lastAdded
                  value sym:  CANON111!!7:bv256
                # local storage change 944524370
            [Load, 617914460] Load from A.lastAdded ↪ 0
                # snippet DirectStorageLoad 1653212434 ;
                 disp. path:  lastAdded
                  value sym:  CANON113!!8:bv256
                # local storage change 1653212434
            [Load, 1397654471] Load from Ao.lastAdded ↪ 0
                # snippet DirectStorageLoad -608554854 ;
                 disp. path:  lastRemoved
                  value sym:  CANON119!!9:bv256
                # local storage change -608554854
            [Load, 982101057] Load from A.lastRemoved ↪ 0
                # snippet DirectStorageLoad -957522104 ;
                 disp. path:  lastRemoved
                  value sym:  CANON121!!10:bv256
                # local storage change -957522104
            [Load, 343847968] Load from Ao.lastRemoved ↪ 0
                # snippet DirectStorageLoad -44962049 ;
                 disp. path:  operationCount
                  value sym:  CANON126!!115:bv256
                # local storage change -44962049
            [Load, 355016883] Load from A.operationCount ↪ 1
                # snippet DirectStorageLoad -1771284095 ;
                 disp. path:  operationCount
                  value sym:  CANON129!!159:bv256
                # local storage change -1771284095
            [Load, 845076842] Load from Ao.operationCount ↪ 1
            [CVLExpInstance, 1170374852] Ghost read: ghostALength ↪ 0x5f45
            [CVLExpInstance, 620557288] Ghost read: ghostAoLength ↪ 0x5f45
                # snippet DirectStorageLoad -2046988109 ;
                 disp. path:  values
                  value sym:  CANON140!!13:bv256
                # local storage change -2046988109
            [Load, 2014077820] Load from A.values ↪ 0x5f45
                # snippet DirectStorageLoad -1614445897 ;
                 disp. path:  activeIndices
                  value sym:  CANON142!!14:bv256
                # local storage change -1614445897
            [Load, 1021141150] Load from Ao.activeIndices ↪ 0x5f45
[LabelInstance, 1841828705] assert false
    [StorageTitleInstance, 778620547] Global State
        [StorageTitleInstance, 904155057] Storage State
            [StorageTitleInstance, 1651113987] A
                [StorageStateValueInstance, 1326728244] elementCount: 0
                [StorageStateValueInstance, 669026179] lastAdded: 0
                [StorageStateValueInstance, 812567817] lastRemoved: 0
                [StorageStateValueInstance, 37136671] operationCount: 1 (changed)
                [StorageStateValueInstance, 1877895305] totalSum: 0 (changed)
                [StorageStateValueInstance, 1284580968] values: 0x5f45
                [StorageStateValueInstance, 173128822] values[0x5f44]: 0 (changed)
            [StorageTitleInstance, 1025020530] Ao
                [StorageStateValueInstance, 565059448] activeIndices: 0x5f45
                [StorageStateValueInstance, 1682562883] activeIndices[0x5f44]: 0x302c
                [StorageStateValueInstance, 1669098928] elementCount: 0
                [StorageStateValueInstance, 437188783] lastAdded: 0
                [StorageStateValueInstance, 1258975561] lastRemoved: 0
                [StorageStateValueInstance, 1637026988] operationCount: 1 (changed)
                [StorageStateValueInstance, 1635974339] totalSum: 0 (changed)
                [StorageStateValueInstance, 203733980] values[0x302c]: 0 (changed)
        [StorageTitleInstance, 347865896] Balances
            [BalanceValueInstance, 1840487295] 0x431a.balance: 0x5663
            [BalanceValueInstance, 463537902] A (0x4319).balance: 0x5662
            [BalanceValueInstance, 846378013] Ao (0x431b).balance: 0x3738
        [StorageTitleInstance, 1176716344] Ghosts State
            [GhostValueInstance, 926566368] ghostALength: 0x5f45
            [GhostValueInstance, 608149919] ghostAValues[0x5f44]: 0 (changed)
            [GhostValueInstance, 63585113] ghostActiveIndices[0x5f44]: 0x302c
            [GhostValueInstance, 1603579292] ghostAoLength: 0x5f45
            [GhostValueInstance, 980743369] ghostAoValues[0x302c]: 0 (changed)
    -------- CVL model begin ------------
    -- type: bool --
    CANON11!!173                                  ~~> false
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON4!!165                                   ~~> false
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON282!!274                                 ~~>  true
       cvl                 : true
    CANON266!!260                                 ~~>  true
       cvl                 : true
    CANON295!!282                                 ~~>  true
       cvl                 : true
    CANON3!!63                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON4!!64                                    ~~> false
       cvl                 : true
       cvl.display         : f.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON5!!65                                    ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON6!!67                                    ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON12!!174                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON5!!166                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON291!!280                                 ~~>  true
       cvl                 : true
    CANON101                                      ~~>  true
       cvl                 : true
    CANON106                                      ~~>  true
       cvl                 : true
    CANON109                                      ~~>  true
       cvl                 : true
    CANON114                                      ~~>  true
       cvl                 : true
    CANON117                                      ~~>  true
       cvl                 : true
    CANON122                                      ~~>  true
       cvl                 : true
    CANON125                                      ~~>  true
       cvl                 : true
    CANON132                                      ~~>  true
       cvl                 : true
    CANON133                                      ~~>  true
       cvl                 : true
    CANON138                                      ~~>  true
       cvl                 : true
    CANON139                                      ~~>  true
       cvl                 : true
    CANON144                                      ~~>  true
       cvl                 : true
    CANON147                                      ~~>  true
       cvl                 : true
    CANON153                                      ~~>  true
       cvl                 : true
    CANON157                                      ~~>  true
       cvl                 : true
    CANON158                                      ~~>  true
       cvl                 : true
    CANON191                                      ~~>  true
       cvl                 : true
    CANON193                                      ~~>  true
       cvl                 : true
    CANON197                                      ~~>  true
       cvl                 : true
    CANON199                                      ~~>  true
       cvl                 : true
    CANON232                                      ~~>  true
       cvl                 : true
    CANON234                                      ~~>  true
       cvl                 : true
    CANON238                                      ~~>  true
       cvl                 : true
    CANON244                                      ~~>  true
       cvl                 : true
    CANON288!!278                                 ~~>  true
       cvl                 : true
    CANON13!!176                                  ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON263!!259                                 ~~>  true
       cvl                 : true
    CANON6!!168                                   ~~> false
       cvl                 : true
       cvl.display         : f.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON10!!70                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON11!!71                                   ~~> false
       cvl                 : true
       cvl.display         : g.isView
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isView])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON12!!72                                   ~~> false
       cvl                 : true
       cvl.display         : g.isPayable
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPayable])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON13!!74                                   ~~> false
       cvl                 : true
       cvl.display         : g.isFallback
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isFallback])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON48                                       ~~>  true
       cvl                 : true
    CANON51                                       ~~>  true
       cvl                 : true
    CANON58                                       ~~>  true
       cvl                 : true
    CANON63                                       ~~>  true
       cvl                 : true
    CANON68                                       ~~>  true
       cvl                 : true
    CANON73                                       ~~>  true
       cvl                 : true
    CANON78                                       ~~>  true
       cvl                 : true
    CANON83                                       ~~>  true
       cvl                 : true
    CANON88                                       ~~>  true
       cvl                 : true
    CANON93                                       ~~>  true
       cvl                 : true
    CANON94                                       ~~>  true
       cvl                 : true
    CANON272!!264                                 ~~>  true
       cvl                 : true
    CANON285!!277                                 ~~>  true
       cvl                 : true
    CANON277!!269                                 ~~>  true
       cvl                 : true
    CANON269!!263                                 ~~>  true
       cvl                 : true
    CANON10!!172                                  ~~> false
       cvl                 : true
       cvl.display         : g.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON260!!256                                 ~~>  true
       cvl                 : true
    CANON252!!252                                 ~~>  true
       cvl                 : true
    CANON3!!164                                   ~~> false
       cvl                 : true
       cvl.display         : f.isPure
       cvl.type            : bool
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[isPure])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON281!!273                                 ~~>  true
       cvl                 : true
    CANON257!!255                                 ~~>  true
       cvl                 : true
    CANON278!!270                                 ~~>  true
       cvl                 : true
    -- type: int --
    CANON!!163                                    ~~>                                                         0x5b500826
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON9!!177                                   ~~>                                                             0x431b
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON1!!41                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON1!!66                                    ~~>                                                                0x2
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON2!!42                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON2!!68                                    ~~>                                                             0x4319
       cvl                 : true
       cvl.display         : f
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON7!!47                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON7!!69                                    ~~>                                                         0x5b500826
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON8!!48                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON8!!73                                    ~~>                                                                0x2
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON9!!49                                    ~~>                                                                0x0
       cvl                 : true
       cvl.display         : g.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON9!!75                                    ~~>                                                             0x431b
       cvl                 : true
       cvl.display         : g
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON134                                      ~~>                                                             0x5f45
       cvl                 : true
       cvl.display         : ghostALength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON136                                      ~~>                                                             0x5f45
       cvl                 : true
       cvl.display         : ghostAoLength
       cvl.ghost           : NoValue
       cvl.type            : mathint
    CANON1!!167                                   ~~>                                                                0x2
       cvl                 : true
       cvl.display         : f.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON!!53                                     ~~>                                                                0x0
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON!!62                                     ~~>                                                         0x5b500826
       cvl                 : true
       cvl.display         : f.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON24                                       ~~>                                                             0x431a
       cvl                 : true
       cvl.display         : eA.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON25                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON26                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON27                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON28                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON29                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON30                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON31                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON32                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON33                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eA.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:103:5)
    CANON34                                       ~~>                                                             0x431a
       cvl                 : true
       cvl.display         : eAo.msg.sender
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, sender])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON35                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.msg.value
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[msg, value])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON36                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.tx.origin
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[tx, origin])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON37                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.basefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, basefee])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON38                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.blobbasefee
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, blobbasefee])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON39                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.coinbase
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, coinbase])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON40                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.difficulty
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, difficulty])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON41                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.gaslimit
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, gaslimit])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON42                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.number
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, number])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON43                                       ~~>                                                                0x0
       cvl                 : true
       cvl.display         : eAo.block.timestamp
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=env, fields=[block, timestamp])
       cvl.def.site        : Function(range=mappingarray.spec:104:5)
    CANON2!!169                                   ~~>                                                             0x4319
       cvl                 : true
       cvl.display         : f.contract
       cvl.type            : address
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[contract])
       cvl.def.site        : Rule(range=mappingarray.spec:126:43)
    CANON7!!171                                   ~~>                                                         0x5b500826
       cvl                 : true
       cvl.display         : g.selector
       cvl.type            : uint32
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[selector])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    CANON8!!175                                   ~~>                                                                0x2
       cvl                 : true
       cvl.display         : g.numberOfArguments
       cvl.type            : uint256
       cvl.struct.path     : CVLStructPathNode(rootStructType=method, fields=[numberOfArguments])
       cvl.def.site        : Rule(range=mappingarray.spec:126:53)
    -- type: bv256 --
    CANON160                                      ~~>                                                               0x44
       cvl                 : true
       cvl.display         : args.length
       cvl.type            : uint256
       cvl.def.site        : Function(range=mappingarray.spec:105:5)
    -- type: bytemap --
    CANON163havocme16643                          ~~> {[x:bv256] ->
  Ite(
    x:bv256 == 0x4
    0x5f44
    0x0
  )
}
       cvl                 : true
       cvl.display         : args
       cvl.type            : calldataarg
       cvl.def.site        : Function(range=mappingarray.spec:105:5)
    -------- CVL model end --------------
    -------- TAC model begin ------------
      OK_4_0_0_0_0_0:bool  -->                                                              false
      CANON11!!173:bool  -->                                                              false
      tacCalldatabufCANON0@2:bv256  -->                                                                0x0
      tacCalldatabufCANON0@3:bv256  -->                                                                0x0
      tacCalldatabufCANON1@2:bv256  -->                                                             0x5f44
      tacCalldatabufCANON1@3:bv256  -->                                                             0x5f44
      tacCalldatabufCANON2@2:bv256  -->                                                                0x0
      tacCalldatabufCANON2@3:bv256  -->                                                                0x0
       CANON!!163:int  -->                                                         0x5b500826
      from_skey:ghostmap((uninterp) skey->bv256)  -->                                          {[x:bv256] ->
  x:bv256
}
      tacM0x40!!0:bv256  -->                                                                0x0
      tacM0x40!!1:bv256  -->                                                                0x0
      CANON4!!165:bool  -->                                                              false
      CANON282!!274:bool  -->                                                               true
      CANON266!!260:bool  -->                                                               true
      CANON9!!177:int  -->                                                             0x431b
      CANON295!!282:bool  -->                                                               true
      to_skey:ghostmap(bv256->(uninterp) skey)  -->                                          {[x:bv256] ->
  x:bv256
}
       CANON1!!41:int  -->                                                                0x0
       CANON1!!66:int  -->                                                                0x2
       CANON2!!42:int  -->                                                                0x0
       CANON2!!68:int  -->                                                             0x4319
      CANON3!!63:bool  -->                                                              false
      CANON4!!64:bool  -->                                                              false
      CANON5!!65:bool  -->                                                              false
      CANON6!!67:bool  -->                                                              false
       CANON7!!47:int  -->                                                                0x0
       CANON7!!69:int  -->                                                         0x5b500826
       CANON8!!48:int  -->                                                                0x0
       CANON8!!73:int  -->                                                                0x2
       CANON9!!49:int  -->                                                                0x0
       CANON9!!75:int  -->                                                             0x431b
      CANON12!!174:bool  -->                                                              false
      ReachabilityCertora0_0_0_0_0_0:bool  -->                                                               true
      ReachabilityCertora0_0_0_2_0_2:bool  -->                                                               true
      ReachabilityCertora0_0_0_3_0_4:bool  -->                                                               true
      ReachabilityCertora1_0_0_1_0_1:bool  -->                                                               true
      CANON96!!33:bv256  -->                                                                0x0
      CANON96!!112:bv256  -->                                                                0x0
      CANON99!!34:bv256  -->                                                                0x0
      ReachabilityCertora2_0_0_1_0_3:bool  -->                                                               true
      CANON5!!166:bool  -->                                                              false
      CANON291!!280:bool  -->                                                               true
        CANON101:bool  -->                                                               true
        CANON106:bool  -->                                                               true
        CANON109:bool  -->                                                               true
        CANON114:bool  -->                                                               true
        CANON117:bool  -->                                                               true
        CANON122:bool  -->                                                               true
        CANON125:bool  -->                                                               true
        CANON132:bool  -->                                                               true
        CANON133:bool  -->                                                               true
         CANON134:int  -->                                                             0x5f45
         CANON136:int  -->                                                             0x5f45
        CANON138:bool  -->                                                               true
        CANON139:bool  -->                                                               true
        CANON144:bool  -->                                                               true
        CANON147:bool  -->                                                               true
        CANON153:bool  -->                                                               true
        CANON157:bool  -->                                                               true
        CANON158:bool  -->                                                               true
       CANON160:bv256  -->                                                               0x44
       CANON165:bv256  -->                                                                0x0
        CANON191:bool  -->                                                               true
        CANON193:bool  -->                                                               true
         CANON196:int  -->                                                                0x0
        CANON197:bool  -->                                                               true
        CANON199:bool  -->                                                               true
         CANON201:int  -->                                                                0x0
       CANON207:bv256  -->                                                                0x0
        CANON232:bool  -->                                                               true
        CANON234:bool  -->                                                               true
         CANON237:int  -->                                                             0x302c
        CANON238:bool  -->                                                               true
         CANON243:int  -->                                                                0x0
        CANON244:bool  -->                                                               true
         CANON248:int  -->                                                                0x0
      CANON121!!10:bv256  -->                                                                0x0
      ReachabilityCertora3_0_0_1_0_5:bool  -->                                                               true
      CANON288!!278:bool  -->                                                               true
      ReachabilityCertora4_0_0_0_0_0:bool  -->                                                               true
      CANON126!!11:bv256  -->                                                                0x0
      CANON129!!12:bv256  -->                                                                0x0
      CANON13!!176:bool  -->                                                              false
      tacCalldatabuf@2:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x44 arg0:bv256)) Eq(arg0:bv256 0x4))
    0x5f44
    0x0
  )
}
      tacCalldatabuf@3:bytemap  --> {[arg0:bv256] ->
  Ite(
    LAnd(Ge(arg0:bv256 0x0) LNot(Le(0x44 arg0:bv256)) Eq(arg0:bv256 0x4))
    0x5f44
    0x0
  )
}
             R2:bv256  -->                                                                0x1
             R3:bv256  -->                                                                0x1
             B60:bool  -->                                                               true
              I91:int  -->                                                             0x5f45
              I94:int  -->                                                             0x5f45
              I99:int  -->                                                             0x5f44
            R37:bv256  -->                                                             0x431b
            R38:bv256  -->                                                                0x1
            R39:bv256  -->                                                                0x2
            R40:bv256  -->                                                                0x4
            R50:bv256  -->                                                             0x4319
            R54:bv256  -->                                                                0x1
            R55:bv256  -->                                                                0x1
            R57:bv256  -->                                                                0x1
            R58:bv256  -->                                                                0x1
            R78:bv256  -->                                                             0x431a
            R80:bv256  -->                                                             0x5663
            R83:bv256  -->                                                             0x5662
            R85:bv256  -->                                                             0x5662
            R87:bv256  -->                                                                0x1
      R96:(uninterp) skey  -->                                                             0x5492
      R97:(uninterp) skey  -->                                                             0xb3d6
            R98:bv256  -->                                                                0x0
      CANON1!!167:int  -->                                                                0x2
            B234:bool  -->                                                               true
            B235:bool  -->                                                               true
            B279:bool  -->                                                               true
            B281:bool  -->                                                               true
            B283:bool  -->                                                              false
             I101:int  -->                                                             0x5f45
             I107:int  -->                                                             0x5f44
             I132:int  -->                                                             0x5f45
             I135:int  -->                                                             0x5f45
             I140:int  -->                                                             0x5f44
             I145:int  -->                                                             0x302c
             I151:int  -->                                                             0x302c
             I179:int  -->                                                             0x431a
             I181:int  -->                                                             0x431a
             I182:int  -->                                                                0x0
             I183:int  -->                                                                0x0
             I185:int  -->                                                                0x0
             I187:int  -->                                                                0x0
             I189:int  -->                                                                0x0
             I191:int  -->                                                                0x0
             I193:int  -->                                                                0x0
             I195:int  -->                                                                0x0
             I197:int  -->                                                                0x0
             I199:int  -->                                                                0x0
             I201:int  -->                                                                0x0
             I203:int  -->                                                                0x0
             I205:int  -->                                                                0x0
             I207:int  -->                                                                0x0
             I209:int  -->                                                                0x0
             I211:int  -->                                                                0x0
             I213:int  -->                                                                0x0
             I215:int  -->                                                                0x0
             I230:int  -->                                                             0x5f45
             I231:int  -->                                                             0x5f45
             I271:int  -->                                                             0x5f45
             I272:int  -->                                                             0x5f45
      R103:(uninterp) skey  -->                                                             0x5492
      R104:(uninterp) skey  -->                                                             0xb3d6
           R105:bv256  -->                                                                0x0
           R110:bv256  -->                                                                0x0
           R111:bv256  -->                                                                0x0
           R114:bv256  -->                                                                0x1
           R120:bv256  -->                                                             0x431a
           R122:bv256  -->                                                             0x5663
           R125:bv256  -->                                                             0x3738
           R127:bv256  -->                                                             0x3738
           R128:bv256  -->                                                                0x1
      R137:(uninterp) skey  -->                                                             0x2711
      R138:(uninterp) skey  -->                                                             0x8655
           R139:bv256  -->                                                             0x302c
      R142:(uninterp) skey  -->                                                             0x573a
           R144:bv256  -->                                                                0x0
      R147:(uninterp) skey  -->                                                             0x573a
           R149:bv256  -->                                                                0x0
           R154:bv256  -->                                                                0x0
           R155:bv256  -->                                                                0x0
           R158:bv256  -->                                                                0x1
           R240:bv256  -->                                                                0x0
           R241:bv256  -->                                                             0x5f44
           R242:bv256  -->                                                                0x0
           R247:bv256  -->                                                                0x0
           R248:bv256  -->                                                             0x5f44
           R249:bv256  -->                                                                0x0
      lastHasThrown!!116:bool  -->                                                              false
      lastHasThrown!!118:bool  -->                                                              false
      lastHasThrown!!160:bool  -->                                                              false
      CANON263!!259:bool  -->                                                               true
      CANON6!!168:bool  -->                                                              false
      CANON129!!159:bv256  -->                                                                0x1
        CANON!!53:int  -->                                                                0x0
        CANON!!62:int  -->                                                         0x5b500826
      CANON10!!70:bool  -->                                                              false
      CANON103!!5:bv256  -->                                                                0x0
      CANON105!!6:bv256  -->                                                                0x0
      CANON11!!71:bool  -->                                                              false
      CANON111!!7:bv256  -->                                                                0x0
      CANON113!!8:bv256  -->                                                                0x0
      lastReverted!!117:bool  -->                                                              false
      lastReverted!!161:bool  -->                                                              false
      CANON119!!9:bv256  -->                                                                0x0
      CANON12!!72:bool  -->                                                              false
      CANON13!!74:bool  -->                                                              false
          CANON24:int  -->                                                             0x431a
          CANON25:int  -->                                                                0x0
          CANON26:int  -->                                                                0x0
          CANON27:int  -->                                                                0x0
          CANON28:int  -->                                                                0x0
          CANON29:int  -->                                                                0x0
          CANON30:int  -->                                                                0x0
          CANON31:int  -->                                                                0x0
          CANON32:int  -->                                                                0x0
          CANON33:int  -->                                                                0x0
          CANON34:int  -->                                                             0x431a
          CANON35:int  -->                                                                0x0
          CANON36:int  -->                                                                0x0
          CANON37:int  -->                                                                0x0
          CANON38:int  -->                                                                0x0
          CANON39:int  -->                                                                0x0
          CANON40:int  -->                                                                0x0
          CANON41:int  -->                                                                0x0
          CANON42:int  -->                                                                0x0
          CANON43:int  -->                                                                0x0
         CANON48:bool  -->                                                               true
         CANON51:bool  -->                                                               true
         CANON58:bool  -->                                                               true
         CANON63:bool  -->                                                               true
         CANON68:bool  -->                                                               true
         CANON73:bool  -->                                                               true
         CANON78:bool  -->                                                               true
         CANON83:bool  -->                                                               true
         CANON88:bool  -->                                                               true
         CANON93:bool  -->                                                               true
         CANON94:bool  -->                                                               true
      sklm!certora__i_211023!callId0!30:bv256  -->                                                             0x5f46
      CANON2!!169:int  -->                                                             0x4319
      CANON272!!264:bool  -->                                                               true
      CANON7!!171:int  -->                                                         0x5b500826
      CANON285!!277:bool  -->                                                               true
      CANON140!!13:bv256  -->                                                             0x5f45
      CANON277!!269:bool  -->                                                               true
      sklm!certora__i_110824!callId0!28:bv256  -->                                                             0x5f45
      CANON142!!14:bv256  -->                                                             0x5f45
      CANON269!!263:bool  -->                                                               true
      CANON163havocme16643:bytemap  -->   {[x:bv256] ->
  Ite(
    x:bv256 == 0x4
    0x5f44
    0x0
  )
}
      sklm!certora__j_311039!callId0!29:bv256  -->                                                             0x5f47
      CANON10!!172:bool  -->                                                              false
      OK_0_0_0_0_0_0:bool  -->                                                              false
      lastHasThrown!!76:bool  -->                                                              false
      OK_0_0_0_2_0_2:bool  -->                                                              false
      OK_0_0_0_3_0_4:bool  -->                                                              false
      CANON260!!256:bool  -->                                                               true
      OK_1_0_0_1_0_1:bool  -->                                                              false
      CANON252!!252:bool  -->                                                               true
      CANON3!!164:bool  -->                                                              false
      CANON281!!273:bool  -->                                                               true
      CANON99!!156:bv256  -->                                                                0x0
      tacSighash!!51:bv256  -->                                                         0x5b500826
      tacSighash!!52:bv256  -->                                                         0x5b500826
      OK_2_0_0_1_0_3:bool  -->                                                              false
      CANON126!!115:bv256  -->                                                                0x1
      CANON257!!255:bool  -->                                                               true
      CANON8!!175:int  -->                                                                0x2
      CANON278!!270:bool  -->                                                               true
      OK_3_0_0_1_0_5:bool  -->                                                              false
    -------- TAC model end --------------
    
